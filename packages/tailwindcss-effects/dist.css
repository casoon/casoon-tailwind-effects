/*!
 * @casoon/tailwindcss-effects v0.7.0
 * Complete collection of animation and UI effects for Tailwind CSS v4
 * 
 * Aggregated CSS from all @casoon/tailwindcss-* packages
 * Generated: 2025-09-07T12:46:56.667Z
 */

/* This file contains CSS from all individual packages */

/* ===== TAILWINDCSS-UTILITIES ===== */

/* === Utilities === */
.cs-sr-only {
  position: absolute;
  width: 1px;
  height: 1px;
  padding: 0;
  margin: -1px;
  overflow: hidden;
  clip: rect(0, 0, 0, 0);
  white-space: nowrap;
  border: 0;
}

.cs-container-fluid {
  width: 100%;
  padding-left: 1rem;
  padding-right: 1rem;
}

.sr-only {
  position: absolute;
  width: 1px;
  height: 1px;
  padding: 0;
  margin: -1px;
  overflow: hidden;
  clip: rect(0, 0, 0, 0);
  white-space: nowrap;
  border: 0;
}

.container-fluid {
  width: 100%;
  padding-left: 1rem;
  padding-right: 1rem;
}

/* ===== TAILWINDCSS-SCROLL ===== */

/* === Base Styles === */
:root {
  --cs-scroll-thumb-gray: #6b7280;
  --cs-scroll-thumb-blue: #3b82f6;
}


/* === Utilities === */
.cs-scroll-smooth {
  scroll-behavior: smooth;
}

.cs-scroll-auto {
  scroll-behavior: auto;
}

.cs-scroll-snap-none {
  scroll-snap-type: none;
}

.cs-scroll-snap-x {
  scroll-snap-type: x mandatory;
}

.cs-scroll-snap-y {
  scroll-snap-type: y mandatory;
}

.cs-scroll-snap-both {
  scroll-snap-type: both mandatory;
}

.cs-scroll-snap-proximity {
  scroll-snap-type: y proximity;
}

.cs-snap-start {
  scroll-snap-align: start;
}

.cs-snap-end {
  scroll-snap-align: end;
}

.cs-snap-center {
  scroll-snap-align: center;
}

.cs-snap-align-none {
  scroll-snap-align: none;
}

.cs-snap-normal {
  scroll-snap-stop: normal;
}

.cs-snap-always {
  scroll-snap-stop: always;
}

.cs-scroll-m-0 {
  scroll-margin: 0px;
}

.cs-scroll-m-1 {
  scroll-margin: 0.25rem;
}

.cs-scroll-m-2 {
  scroll-margin: 0.5rem;
}

.cs-scroll-m-4 {
  scroll-margin: 1rem;
}

.cs-scroll-m-8 {
  scroll-margin: 2rem;
}

.cs-scroll-m-16 {
  scroll-margin: 4rem;
}

.cs-scroll-p-0 {
  scroll-padding: 0px;
}

.cs-scroll-p-1 {
  scroll-padding: 0.25rem;
}

.cs-scroll-p-2 {
  scroll-padding: 0.5rem;
}

.cs-scroll-p-4 {
  scroll-padding: 1rem;
}

.cs-scroll-p-8 {
  scroll-padding: 2rem;
}

.cs-scroll-p-16 {
  scroll-padding: 4rem;
}

.cs-scrollbar-none {
  scrollbar-width: none;
  -ms-overflow-style: none;
}

.cs-scrollbar-none::-webkit-scrollbar {
  display: none;
}

.cs-scrollbar-thin {
  scrollbar-width: thin;
}

.cs-scrollbar-auto {
  scrollbar-width: auto;
}

.cs-scrollbar-thumb-gray {
  scrollbar-color: var(--cs-scroll-thumb-gray) transparent;
}

.cs-scrollbar-thumb-blue {
  scrollbar-color: var(--cs-scroll-thumb-blue) transparent;
}

.cs-scrollbar-track-transparent {
  scrollbar-color: inherit transparent;
}

/* ===== TAILWINDCSS-ORBS ===== */

/* === Base Styles === */
:root {
  --cs-orb-blue: #3b82f6;
  --cs-orb-blue-light: #93c5fd;
  --cs-orb-blue-lighter: #dbeafe;
  --cs-orb-purple: #9333ea;
  --cs-orb-purple-light: #c4b5fd;
  --cs-orb-purple-lighter: #ede9fe;
  --cs-orb-pink: #ec4899;
  --cs-orb-pink-light: #fbcfe8;
  --cs-orb-pink-lighter: #fdf2f8;
  --cs-orb-custom-primary: #667eea;
  --cs-orb-custom-secondary: #764ba2;
  --cs-orb-custom-accent: #f093fb;
  --cs-orb-gradient-blue: radial-gradient(circle, 
            color-mix(in srgb, var(--cs-orb-blue) 50%, transparent) 0%, 
            color-mix(in srgb, var(--cs-orb-blue-light) 30%, transparent) 50%, 
            color-mix(in srgb, var(--cs-orb-blue-lighter) 10%, transparent) 100%);
  --cs-orb-gradient-purple: radial-gradient(circle, 
            color-mix(in srgb, var(--cs-orb-purple) 50%, transparent) 0%, 
            color-mix(in srgb, var(--cs-orb-purple-light) 30%, transparent) 50%, 
            color-mix(in srgb, var(--cs-orb-purple-lighter) 10%, transparent) 100%);
  --cs-orb-gradient-pink: radial-gradient(circle, 
            color-mix(in srgb, var(--cs-orb-pink) 50%, transparent) 0%, 
            color-mix(in srgb, var(--cs-orb-pink-light) 30%, transparent) 50%, 
            color-mix(in srgb, var(--cs-orb-pink-lighter) 10%, transparent) 100%);
  --cs-orb-gradient-custom: radial-gradient(circle, 
            color-mix(in srgb, var(--cs-orb-custom-primary) 50%, transparent) 0%, 
            color-mix(in srgb, var(--cs-orb-custom-secondary) 30%, transparent) 50%, 
            color-mix(in srgb, var(--cs-orb-custom-accent) 10%, transparent) 100%);
}


/* === Base Styles === */
@keyframes orb-float {
  transform: translateY(0px);
  transform: translateY(-20px);
}

@keyframes orb-pulse {
  opacity: 0.7;
  transform: scale(1);
  opacity: 1;
  transform: scale(1.05);
}

@keyframes orb-drift {
  transform: translateX(0px);
  transform: translateX(30px);
  transform: translateX(-20px);
  transform: translateX(0px);
}


/* === Utilities === */
.cs-orb {
  border-radius: 50%;
  filter: blur(1px);
  opacity: 0.7;
  pointer-events: none;
}

.cs-orb-xs {
  width: 50px;
  height: 50px;
}

.cs-orb-sm {
  width: 75px;
  height: 75px;
}

.cs-orb-md {
  width: 100px;
  height: 100px;
}

.cs-orb-lg {
  width: 150px;
  height: 150px;
}

.cs-orb-xl {
  width: 200px;
  height: 200px;
}

.cs-orb-2xl {
  width: 300px;
  height: 300px;
}

.cs-orb-blur-none {
  filter: blur(0);
}

.cs-orb-blur-sm {
  filter: blur(2px);
}

.cs-orb-blur-md {
  filter: blur(4px);
}

.cs-orb-blur-lg {
  filter: blur(8px);
}

.cs-orb-float {
  animation: orb-float 6s ease-in-out infinite;
}

.cs-orb-pulse {
  animation: orb-pulse 4s ease-in-out infinite;
}

.cs-orb-drift {
  animation: orb-drift 8s ease-in-out infinite;
}

.cs-orb-absolute {
  position: absolute;
}

.cs-orb-fixed {
  position: fixed;
}

.cs-orb-gradient-blue {
  background: var(--cs-orb-gradient-blue);
}

.cs-orb-gradient-purple {
  background: var(--cs-orb-gradient-purple);
}

.cs-orb-gradient-pink {
  background: var(--cs-orb-gradient-pink);
}

.cs-orb-gradient-custom {
  background: var(--cs-orb-gradient-custom);
}

/* ===== TAILWINDCSS-NAVIGATION ===== */

/* === Base Styles === */
:root {
  --cs-nav-primary: #007bff;
  --cs-nav-white: #ffffff;
  --cs-nav-text-muted: #495057;
  --cs-nav-border: #dee2e6;
}


/* === Components === */
.cs-nav {
  display: flex;
  flex-wrap: wrap;
  padding-left: 0;
  margin-bottom: 0;
  list-style: none;
}

.cs-nav-item {
  display: block;
}

.cs-nav-link {
  display: block;
  padding: 0.5rem 1rem;
  color: inherit;
  text-decoration: none;
  transition: color 0.15s ease-in-out, background-color 0.15s ease-in-out, border-color 0.15s ease-in-out;
}

.cs-nav-link:hover {
  text-decoration: none;
}

.cs-nav-link.active {
  font-weight: 600;
}


/* === Utilities === */
.cs-nav-pills .cs-nav-item .cs-nav-link {
  border-radius: 0.25rem;
}

.cs-nav-pills .cs-nav-item .cs-nav-link.active {
  background-color: var(--cs-nav-primary);
  color: var(--cs-nav-white);
}

.cs-nav-tabs .cs-nav-item .cs-nav-link {
  border: 1px solid transparent;
  border-top-left-radius: 0.25rem;
  border-top-right-radius: 0.25rem;
}

.cs-nav-tabs .cs-nav-item .cs-nav-link.active {
  color: var(--cs-nav-text-muted);
  background-color: var(--cs-nav-white);
  border-color: var(--cs-nav-border) var(--cs-nav-border) var(--cs-nav-white);
}

.cs-navbar-brand {
  display: inline-block;
  padding-top: 0.3125rem;
  padding-bottom: 0.3125rem;
  margin-right: 1rem;
  font-size: 1.25rem;
  line-height: inherit;
  white-space: nowrap;
}

.cs-navbar-nav {
  display: flex;
  flex-direction: column;
  padding-left: 0;
  margin-bottom: 0;
  list-style: none;
}

.cs-navbar-nav .cs-nav-link {
  padding-right: 0;
  padding-left: 0;
}

/* ===== TAILWINDCSS-MICRO-INTERACTIONS ===== */

/* === Base Styles === */
:root {
  --cs-micro-focus-ring: #3b82f6;
  --cs-micro-shadow: #000000;
  --cs-micro-focus-ring-strong: color-mix(in srgb, var(--cs-micro-focus-ring) 50%, transparent);
  --cs-micro-focus-ring-medium: color-mix(in srgb, var(--cs-micro-focus-ring) 30%, transparent);
  --cs-micro-shadow-light: color-mix(in srgb, var(--cs-micro-shadow) 10%, transparent);
}


/* === Utilities === */
.cs-hover-scale-95 {
  transition: transform 0.2s ease;
  transform: scale(0.95);
}

.cs-hover-scale-105 {
  transition: transform 0.2s ease;
  transform: scale(1.05);
}

.cs-hover-scale-110 {
  transition: transform 0.2s ease;
  transform: scale(1.10);
}

.cs-hover-fade-in {
  opacity: 0.7;
  transition: opacity 0.2s ease;
  opacity: 1;
}

.cs-hover-fade-out {
  opacity: 1;
  transition: opacity 0.2s ease;
  opacity: 0.7;
}

.cs-hover-brighten {
  transition: filter 0.2s ease;
  filter: brightness(1.1);
}

.cs-hover-darken {
  transition: filter 0.2s ease;
  filter: brightness(0.9);
}

.cs-hover-rotate-1 {
  transition: transform 0.2s ease;
  transform: rotate(1deg);
}

.cs-hover-rotate-3 {
  transition: transform 0.2s ease;
  transform: rotate(3deg);
}

.cs-hover-rotate-6 {
  transition: transform 0.2s ease;
  transform: rotate(6deg);
}

.cs-hover-translate-y-1 {
  transition: transform 0.2s ease;
  transform: translateY(-0.25rem);
}

.cs-hover-translate-y-2 {
  transition: transform 0.2s ease;
  transform: translateY(-0.5rem);
}

.cs-active-scale-95 {
  transform: scale(0.95);
}

.cs-active-scale-98 {
  transform: scale(0.98);
}

.cs-focus-scale-105 {
  transition: transform 0.2s ease;
  transform: scale(1.05);
}

.cs-focus-ring-2 {
  outline: none;
}

.cs-focus-ring-4 {
  outline: none;
}

.cs-tap-highlight-none {
  -webkit-tap-highlight-color: transparent;
}

.cs-tap-scale-95 {
  transition: transform 0.1s ease;
  transform: scale(0.95);
}

.cs-smooth-interaction {
  transition: all 0.2s ease;
}

.cs-smooth-interaction-fast {
  transition: all 0.1s ease;
}

.cs-smooth-interaction-slow {
  transition: all 0.3s ease;
}

.cs-interactive {
  cursor: pointer;
  transition: transform 0.1s ease, box-shadow 0.1s ease;
  transform: translateY(-1px);
  transform: translateY(0);
}

/* ===== TAILWINDCSS-LOADING ===== */

/* === Base Styles === */
:root {
  --cs-loading-spinner-base: #f3f3f3;
  --cs-loading-spinner-active: #3498db;
}


/* === Base Styles === */
@keyframes spin {
  transform: rotate(0deg);
  transform: rotate(360deg);
}


/* === Utilities === */
.cs-spinner {
  border: 4px solid var(--cs-loading-spinner-base);
  border-top: 4px solid var(--cs-loading-spinner-active);
  border-radius: 50%;
  width: 40px;
  height: 40px;
  animation: spin 2s linear infinite;
}

.cs-loading {
  opacity: 0.5;
  pointer-events: none;
}

/* ===== TAILWINDCSS-GRADIENTS ===== */

/* === Base Styles === */
:root {
  --cs-gradient-sunset-start: #ff6b6b;
  --cs-gradient-sunset-mid: #ffd93d;
  --cs-gradient-sunset-end: #6bcf7f;
  --cs-gradient-ocean-start: #667eea;
  --cs-gradient-ocean-end: #764ba2;
  --cs-gradient-fire-start: #f093fb;
  --cs-gradient-fire-end: #f5576c;
  --cs-gradient-mint-start: #4facfe;
  --cs-gradient-mint-end: #00f2fe;
  --cs-gradient-purple-start: #a8edea;
  --cs-gradient-purple-end: #fed6e3;
  --cs-gradient-orange-start: #ffeaa7;
  --cs-gradient-orange-end: #fab1a0;
  --cs-gradient-blue-start: #74b9ff;
  --cs-gradient-blue-end: #0984e3;
  --cs-gradient-pink-start: #fd79a8;
  --cs-gradient-pink-end: #fdcb6e;
  --cs-gradient-custom-start: #667eea;
  --cs-gradient-custom-mid: null;
  --cs-gradient-custom-end: #764ba2;
  --cs-gradient-white: #ffffff;
}


/* === Utilities === */
.cs-gradient-sunset {
  background: linear-gradient(135deg, var(--cs-gradient-sunset-start), var(--cs-gradient-sunset-mid), var(--cs-gradient-sunset-end));
}

.cs-gradient-ocean {
  background: linear-gradient(135deg, var(--cs-gradient-ocean-start), var(--cs-gradient-ocean-end));
}

.cs-gradient-fire {
  background: linear-gradient(135deg, var(--cs-gradient-fire-start), var(--cs-gradient-fire-end));
}

.cs-gradient-mint {
  background: linear-gradient(135deg, var(--cs-gradient-mint-start), var(--cs-gradient-mint-end));
}

.cs-gradient-purple {
  background: linear-gradient(135deg, var(--cs-gradient-purple-start), var(--cs-gradient-purple-end));
}

.cs-gradient-orange {
  background: linear-gradient(135deg, var(--cs-gradient-orange-start), var(--cs-gradient-orange-end));
}

.cs-gradient-blue {
  background: linear-gradient(135deg, var(--cs-gradient-blue-start), var(--cs-gradient-blue-end));
}

.cs-gradient-pink {
  background: linear-gradient(135deg, var(--cs-gradient-pink-start), var(--cs-gradient-pink-end));
}

.cs-gradient-custom {
  background: linear-gradient(135deg, var(--cs-gradient-custom-start), var(--cs-gradient-custom-end));
}

.cs-gradient-text {
  background-clip: text;
  -webkit-background-clip: text;
  color: transparent;
}

.cs-gradient-text-sunset {
  background: linear-gradient(135deg, var(--cs-gradient-sunset-start), var(--cs-gradient-sunset-mid), var(--cs-gradient-sunset-end));
  background-clip: text;
  -webkit-background-clip: text;
  color: transparent;
}

.cs-gradient-text-ocean {
  background: linear-gradient(135deg, var(--cs-gradient-ocean-start), var(--cs-gradient-ocean-end));
  background-clip: text;
  -webkit-background-clip: text;
  color: transparent;
}

.cs-gradient-text-fire {
  background: linear-gradient(135deg, var(--cs-gradient-fire-start), var(--cs-gradient-fire-end));
  background-clip: text;
  -webkit-background-clip: text;
  color: transparent;
}

.cs-gradient-text-custom {
  background: linear-gradient(135deg, var(--cs-gradient-custom-start), var(--cs-gradient-custom-end));
  background-clip: text;
  -webkit-background-clip: text;
  color: transparent;
}

.cs-gradient-radial-center {
  background: radial-gradient(circle at center, var(--cs-gradient-stops, var(--cs-gradient-ocean-start), var(--cs-gradient-ocean-end)));
}

.cs-gradient-radial-top {
  background: radial-gradient(circle at top, var(--cs-gradient-stops, var(--cs-gradient-ocean-start), var(--cs-gradient-ocean-end)));
}

.cs-gradient-radial-bottom {
  background: radial-gradient(circle at bottom, var(--cs-gradient-stops, var(--cs-gradient-ocean-start), var(--cs-gradient-ocean-end)));
}

.cs-gradient-conic {
  background: conic-gradient(var(--cs-gradient-stops, var(--cs-gradient-ocean-start), var(--cs-gradient-ocean-end)));
}

.cs-gradient-conic-center {
  background: conic-gradient(from 0deg at 50% 50%, var(--cs-gradient-stops, var(--cs-gradient-ocean-start), var(--cs-gradient-ocean-end)));
}

.cs-gradient-border {
  position: relative;
  background: linear-gradient(135deg, var(--cs-gradient-ocean-start), var(--cs-gradient-ocean-end));
  border-radius: 0.5rem;
}

.cs-gradient-border::before {
  content: "";
  position: absolute;
  inset: 1px;
  background: var(--cs-gradient-white);
  border-radius: calc(0.5rem - 1px);
}

.cs-gradient-animate {
  background-size: 400% 400%;
  animation: gradient-shift 4s ease infinite;
}


/* === Base Styles === */
@keyframes gradient-shift {
  background-position: 0% 50%;
  background-position: 100% 50%;
  background-position: 0% 50%;
}

/* ===== TAILWINDCSS-GLASS ===== */

/* === Base Styles === */
:root {
  --cs-glass-white: #ffffff;
  --cs-glass-black: #000000;
  --cs-glass-blue: #3b82f6;
  --cs-glass-purple: #9333ea;
  --cs-glass-green: #22c55e;
  --cs-glass-pink: #ec4899;
  --cs-glass-amber: #f59e0b;
  --cs-glass-bg-light: color-mix(in srgb, var(--cs-glass-white) 10%, transparent);
  --cs-glass-bg-weak: color-mix(in srgb, var(--cs-glass-white) 5%, transparent);
  --cs-glass-bg-medium: color-mix(in srgb, var(--cs-glass-white) 15%, transparent);
  --cs-glass-bg-strong: color-mix(in srgb, var(--cs-glass-white) 20%, transparent);
  --cs-glass-bg-dark: color-mix(in srgb, var(--cs-glass-black) 10%, transparent);
  --cs-glass-bg-dark-strong: color-mix(in srgb, var(--cs-glass-black) 20%, transparent);
  --cs-glass-bg-blue: color-mix(in srgb, var(--cs-glass-blue) 10%, transparent);
  --cs-glass-bg-purple: color-mix(in srgb, var(--cs-glass-purple) 10%, transparent);
  --cs-glass-bg-green: color-mix(in srgb, var(--cs-glass-green) 10%, transparent);
  --cs-glass-bg-pink: color-mix(in srgb, var(--cs-glass-pink) 10%, transparent);
  --cs-glass-bg-amber: color-mix(in srgb, var(--cs-glass-amber) 10%, transparent);
  --cs-glass-border-light: color-mix(in srgb, var(--cs-glass-white) 10%, transparent);
  --cs-glass-border-medium: color-mix(in srgb, var(--cs-glass-white) 20%, transparent);
  --cs-glass-border-strong: color-mix(in srgb, var(--cs-glass-white) 30%, transparent);
  --cs-glass-border-blue: color-mix(in srgb, var(--cs-glass-blue) 20%, transparent);
  --cs-glass-border-purple: color-mix(in srgb, var(--cs-glass-purple) 20%, transparent);
  --cs-glass-border-green: color-mix(in srgb, var(--cs-glass-green) 20%, transparent);
  --cs-glass-border-pink: color-mix(in srgb, var(--cs-glass-pink) 20%, transparent);
  --cs-glass-border-amber: color-mix(in srgb, var(--cs-glass-amber) 20%, transparent);
  --cs-glass-shadow-light: color-mix(in srgb, var(--cs-glass-black) 5%, transparent);
  --cs-glass-shadow-medium: color-mix(in srgb, var(--cs-glass-black) 10%, transparent);
  --cs-glass-shadow-strong: color-mix(in srgb, var(--cs-glass-black) 15%, transparent);
  --cs-glass-shadow-xl: color-mix(in srgb, var(--cs-glass-black) 20%, transparent);
  --cs-glass-tooltip-bg: color-mix(in srgb, var(--cs-glass-black) 80%, transparent);
  --cs-glass-bg-hover: color-mix(in srgb, var(--cs-glass-white) 15%, transparent);
  --cs-glass-bg-light-hover: color-mix(in srgb, var(--cs-glass-white) 25%, transparent);
  --cs-glass-bg-contrast: color-mix(in srgb, var(--cs-glass-white) 20%, transparent);
  --cs-glass-bg-dark-contrast: color-mix(in srgb, var(--cs-glass-black) 20%, transparent);
  --cs-glass-bg-fallback: color-mix(in srgb, var(--cs-glass-white) 25%, transparent);
  --cs-glass-bg-dark-fallback: color-mix(in srgb, var(--cs-glass-black) 25%, transparent);
  --cs-glass-bg-blue-fallback: color-mix(in srgb, var(--cs-glass-blue) 20%, transparent);
  --cs-glass-bg-purple-fallback: color-mix(in srgb, var(--cs-glass-purple) 20%, transparent);
  --cs-glass-bg-green-fallback: color-mix(in srgb, var(--cs-glass-green) 20%, transparent);
  --cs-glass-bg-pink-fallback: color-mix(in srgb, var(--cs-glass-pink) 20%, transparent);
  --cs-glass-bg-amber-fallback: color-mix(in srgb, var(--cs-glass-amber) 20%, transparent);
  --cs-glass-focus-ring: color-mix(in srgb, var(--cs-glass-blue) 50%, transparent);
}


/* === Base Styles === */
@layer glass-base, glass-utilities, glass-components; {
}


/* === Utilities === */
@layer glass-utilities {
  backdrop-filter: blur(16px);
  -webkit-backdrop-filter: blur(16px);
  background: var(--cs-glass-bg-light);
  border: 1px solid var(--cs-glass-border-medium);
  backdrop-filter: blur(16px);
  -webkit-backdrop-filter: blur(16px);
  background: var(--cs-glass-bg-dark);
  border: 1px solid var(--cs-glass-border-light);
  backdrop-filter: blur(8px);
  -webkit-backdrop-filter: blur(8px);
  backdrop-filter: blur(24px);
  -webkit-backdrop-filter: blur(24px);
  backdrop-filter: blur(4px);
  -webkit-backdrop-filter: blur(4px);
  background: var(--cs-glass-bg-weak);
  border: 1px solid var(--cs-glass-border-light);
  backdrop-filter: blur(16px);
  -webkit-backdrop-filter: blur(16px);
  background: var(--cs-glass-bg-light);
  border: 1px solid var(--cs-glass-border-medium);
  backdrop-filter: blur(32px);
  -webkit-backdrop-filter: blur(32px);
  background: var(--cs-glass-bg-medium);
  border: 1px solid var(--cs-glass-border-strong);
  backdrop-filter: blur(16px);
  -webkit-backdrop-filter: blur(16px);
  background: var(--cs-glass-bg-blue);
  border: 1px solid var(--cs-glass-border-blue);
  backdrop-filter: blur(16px);
  -webkit-backdrop-filter: blur(16px);
  background: var(--cs-glass-bg-purple);
  border: 1px solid var(--cs-glass-border-purple);
  backdrop-filter: blur(16px);
  -webkit-backdrop-filter: blur(16px);
  background: var(--cs-glass-bg-green);
  border: 1px solid var(--cs-glass-border-green);
  backdrop-filter: blur(16px);
  -webkit-backdrop-filter: blur(16px);
  background: var(--cs-glass-bg-pink);
  border: 1px solid var(--cs-glass-border-pink);
  backdrop-filter: blur(16px);
  -webkit-backdrop-filter: blur(16px);
  background: var(--cs-glass-bg-amber);
  border: 1px solid var(--cs-glass-border-amber);
  border-radius: 0.25rem;
  border-radius: 0.5rem;
  border-radius: 0.75rem;
  border-radius: 1rem;
  border-radius: 1.5rem;
  border-radius: 2rem;
  box-shadow: 0 1px 2px var(--cs-glass-shadow-light);
  box-shadow: 0 8px 32px var(--cs-glass-shadow-medium);
  box-shadow: 0 20px 40px var(--cs-glass-shadow-strong);
  box-shadow: 0 25px 50px var(--cs-glass-shadow-xl);
}


/* === Components === */
@layer glass-components {
  backdrop-filter: blur(16px);
  -webkit-backdrop-filter: blur(16px);
  background: var(--cs-glass-bg-light);
  border: 1px solid var(--cs-glass-border-medium);
  border-radius: 0.75rem;
  padding: 1rem 1.5rem;
  box-shadow: 0 8px 32px var(--cs-glass-shadow-strong);
  position: relative;
  overflow: hidden;
  backdrop-filter: blur(16px);
  -webkit-backdrop-filter: blur(16px);
  background: var(--cs-glass-tooltip-bg);
  border: 1px solid var(--cs-glass-border-medium);
  border-radius: 0.5rem;
  padding: 0.5rem 0.75rem;
  box-shadow: 0 4px 16px var(--cs-glass-shadow-xl);
  font-size: 0.875rem;
  color: white;
  white-space: nowrap;
  backdrop-filter: blur(16px);
  -webkit-backdrop-filter: blur(16px);
  background: var(--cs-glass-bg-light);
  border: 1px solid var(--cs-glass-border-medium);
  border-radius: 0.75rem;
  box-shadow: 0 8px 32px var(--cs-glass-shadow-medium);
  padding: 0.5rem;
  min-width: 12rem;
}


/* === Utilities === */
@media (prefers-reduced-motion: reduce) {
  transition: none;
  transform: none;
}

@media (prefers-contrast: high) {
  border-width: 2px;
  background: var(--cs-glass-bg-contrast);
  background: var(--cs-glass-bg-dark-contrast);
  border-color: var(--cs-glass-border-strong);
}


/* === Utilities === */
@container (min-width: 320px) {
  backdrop-filter: blur(8px);
  -webkit-backdrop-filter: blur(8px);
}

@container (min-width: 640px) {
  backdrop-filter: blur(16px);
  -webkit-backdrop-filter: blur(16px);
}

@container (min-width: 1024px) {
  backdrop-filter: blur(24px);
  -webkit-backdrop-filter: blur(24px);
}


/* === Components === */
@supports not (backdrop-filter: blur(16px)) {
  background: var(--cs-glass-bg-fallback);
  box-shadow: 0 4px 16px var(--cs-glass-shadow-medium);
  background: var(--cs-glass-bg-dark-fallback);
  background: var(--cs-glass-bg-blue-fallback);
  background: var(--cs-glass-bg-purple-fallback);
  background: var(--cs-glass-bg-green-fallback);
  background: var(--cs-glass-bg-pink-fallback);
  background: var(--cs-glass-bg-amber-fallback);
}


/* === Components === */
.cs-glass-card {
  backdrop-filter: blur(16px);
  -webkit-backdrop-filter: blur(16px);
  background: var(--cs-glass-bg-light);
  border: 1px solid var(--cs-glass-border-medium);
  border-radius: 20px;
  padding: 2rem;
  box-shadow: 0 8px 32px var(--cs-glass-shadow-medium);
  transition: all 0.3s ease;
  background: var(--cs-glass-bg-hover);
  outline: 2px solid var(--cs-glass-focus-ring);
}

.cs-glass-card-light {
  backdrop-filter: blur(16px);
  -webkit-backdrop-filter: blur(16px);
  background: var(--cs-glass-bg-medium);
  border: 1px solid var(--cs-glass-border-strong);
  border-radius: 20px;
  padding: 2rem;
  box-shadow: 0 8px 32px var(--cs-glass-shadow-medium);
  transition: all 0.3s ease;
  background: var(--cs-glass-bg-light-hover);
  outline: 2px solid var(--cs-glass-focus-ring);
}

.cs-glass-nav {
  backdrop-filter: blur(16px);
  -webkit-backdrop-filter: blur(16px);
  background: var(--cs-glass-bg-light);
  border: 1px solid var(--cs-glass-border-medium);
  border-radius: 12px;
  box-shadow: 0 8px 32px var(--cs-glass-shadow-medium);
  transition: all 0.3s ease;
}

.cs-glass-nav-light {
  backdrop-filter: blur(16px);
  -webkit-backdrop-filter: blur(16px);
  background: var(--cs-glass-bg-medium);
  border: 1px solid var(--cs-glass-border-strong);
  border-radius: 12px;
  box-shadow: 0 8px 32px var(--cs-glass-shadow-medium);
  transition: all 0.3s ease;
}

.cs-glass-button {
  backdrop-filter: blur(16px);
  -webkit-backdrop-filter: blur(16px);
  background: var(--cs-glass-bg-light);
  border: 1px solid var(--cs-glass-border-medium);
  border-radius: 12px;
  padding: 0.75rem 1.5rem;
  transition: all 0.3s ease;
  cursor: pointer;
  background: var(--cs-glass-bg-hover);
  outline: 2px solid var(--cs-glass-focus-ring);
  transform: translateY(0);
}


/* === Components === */
.glass {
  backdrop-filter: blur(16px);
  -webkit-backdrop-filter: blur(16px);
  background: var(--cs-glass-bg-light);
  border: 1px solid var(--cs-glass-border-medium);
}

.glass-dark {
  backdrop-filter: blur(16px);
  -webkit-backdrop-filter: blur(16px);
  background: var(--cs-glass-bg-dark);
  border: 1px solid var(--cs-glass-border-light);
}

.glass-sm {
  backdrop-filter: blur(8px);
  -webkit-backdrop-filter: blur(8px);
}

.glass-lg {
  backdrop-filter: blur(24px);
  -webkit-backdrop-filter: blur(24px);
}

.glass-card {
  backdrop-filter: blur(16px);
  -webkit-backdrop-filter: blur(16px);
  background: var(--cs-glass-bg-light);
  border: 1px solid var(--cs-glass-border-medium);
  border-radius: 20px;
  padding: 2rem;
  box-shadow: 0 8px 32px var(--cs-glass-shadow-medium);
  transition: all 0.3s ease;
}

.glass-card-light {
  backdrop-filter: blur(16px);
  -webkit-backdrop-filter: blur(16px);
  background: var(--cs-glass-bg-medium);
  border: 1px solid var(--cs-glass-border-strong);
  border-radius: 20px;
  padding: 2rem;
  box-shadow: 0 8px 32px var(--cs-glass-shadow-medium);
  transition: all 0.3s ease;
}

.glass-nav {
  backdrop-filter: blur(16px);
  -webkit-backdrop-filter: blur(16px);
  background: var(--cs-glass-bg-light);
  border: 1px solid var(--cs-glass-border-medium);
  border-radius: 12px;
  box-shadow: 0 8px 32px var(--cs-glass-shadow-medium);
  transition: all 0.3s ease;
}

.glass-nav-light {
  backdrop-filter: blur(16px);
  -webkit-backdrop-filter: blur(16px);
  background: var(--cs-glass-bg-medium);
  border: 1px solid var(--cs-glass-border-strong);
  border-radius: 12px;
  box-shadow: 0 8px 32px var(--cs-glass-shadow-medium);
  transition: all 0.3s ease;
}

.glass-button {
  backdrop-filter: blur(16px);
  -webkit-backdrop-filter: blur(16px);
  background: var(--cs-glass-bg-light);
  border: 1px solid var(--cs-glass-border-medium);
  border-radius: 12px;
  padding: 0.75rem 1.5rem;
  transition: all 0.3s ease;
  cursor: pointer;
}

@supports not (backdrop-filter: blur(16px)) {
  background: var(--cs-glass-bg-contrast);
  background: var(--cs-glass-bg-dark-contrast);
}

/* ===== TAILWINDCSS-ANIMATIONS ===== */

/* === Base Styles === */
:root {
  --cs-anim-duration-xxs: 100ms;
  --cs-anim-duration-xs: 150ms;
  --cs-anim-duration-sm: 200ms;
  --cs-anim-duration-md: 300ms;
  --cs-anim-duration-lg: 500ms;
  --cs-anim-duration-xl: 700ms;
  --cs-anim-duration-2xl: 1000ms;
  --cs-anim-ease-standard: cubic-bezier(0.2, 0, 0, 1);
  --cs-anim-ease-emphasized: cubic-bezier(0.3, 0, 0.8, 0.15);
  --cs-anim-ease-decelerate: cubic-bezier(0.05, 0.7, 0.1, 1);
  --cs-anim-ease-accelerate: cubic-bezier(0.3, 0, 1, 1);
  --cs-anim-ease-spring: cubic-bezier(0.175, 0.885, 0.32, 1.275);
  --cs-anim-ease-soft-spring: cubic-bezier(0.25, 0.46, 0.45, 0.94);
  --cs-anim-reduced-motion-duration: 1ms;
  --cs-anim-reduced-motion-ease: ease;
  --cs-anim-shadow-ink: #000;
}


/* === Base Styles === */
@keyframes anim-fade-in {
  opacity: 0;
  opacity: 1;
}

@keyframes anim-fade-out {
  opacity: 1;
  opacity: 0;
}

@keyframes anim-scale-in {
  opacity: 0;
  transform: scale(0.9);
  opacity: 1;
  transform: scale(1);
}

@keyframes anim-scale-out {
  opacity: 1;
  transform: scale(1);
  opacity: 0;
  transform: scale(0.9);
}

@keyframes anim-slide-up {
  opacity: 0;
  transform: translateY(20px);
  opacity: 1;
  transform: translateY(0);
}

@keyframes anim-slide-down {
  opacity: 0;
  transform: translateY(-20px);
  opacity: 1;
  transform: translateY(0);
}

@keyframes anim-slide-left {
  opacity: 0;
  transform: translateX(20px);
  opacity: 1;
  transform: translateX(0);
}

@keyframes anim-slide-right {
  opacity: 0;
  transform: translateX(-20px);
  opacity: 1;
  transform: translateX(0);
}

@keyframes anim-blur-in {
  opacity: 0;
  filter: blur(4px);
  opacity: 1;
  filter: blur(0);
}

@keyframes anim-blur-out {
  opacity: 1;
  filter: blur(0);
  opacity: 0;
  filter: blur(4px);
}

@keyframes anim-rotate-in {
  opacity: 0;
  transform: rotate(-5deg);
  opacity: 1;
  transform: rotate(0deg);
}

@keyframes anim-rotate {
  transform: rotate(0deg);
  transform: rotate(360deg);
}

@keyframes anim-pulse {
  opacity: 1;
  opacity: 0.5;
}

@keyframes anim-bounce {
  transform: translateY(0);
  animationTimingFunction: cubic-bezier(0.8, 0, 1, 1);
  transform: translateY(-25%);
  animationTimingFunction: cubic-bezier(0, 0, 0.2, 1);
}

@keyframes anim-wiggle {
  transform: rotate(0deg);
  transform: rotate(-3deg);
  transform: rotate(3deg);
}

@keyframes anim-reveal-3d-up {
  opacity: 0;
  transform: rotateX(-90deg);
  opacity: 1;
  transform: rotateX(0deg);
}

@keyframes anim-reveal-3d-right {
  opacity: 0;
  transform: rotateY(90deg);
  opacity: 1;
  transform: rotateY(0deg);
}

@keyframes anim-marquee {
  transform: translateX(100%);
  transform: translateX(-100%);
}

@keyframes anim-parallax-y {
  transform: translateY(-10px);
  transform: translateY(10px);
}

@keyframes anim-progress-grow {
  width: 0%;
  width: 100%;
}


/* === Components === */
.cs-anim {
  animation-duration: var(--cs-anim-duration, var(--cs-anim-duration-md));
  animation-timing-function: var(--cs-anim-ease, var(--cs-anim-ease-standard));
  animation-iteration-count: 1;
  animation-direction: var(--cs-anim-direction, normal);
  animation-fill-mode: var(--cs-anim-fill, both);
  animation-delay: var(--cs-anim-delay, 0ms);
}

.cs-anim-infinite {
  animation-iteration-count: infinite;
}

.cs-anim-reverse {
  animation-direction: reverse;
}

.cs-anim-alternate {
  animation-direction: alternate;
}

.cs-anim-both {
  animation-fill-mode: both;
}

.cs-anim-forwards {
  animation-fill-mode: forwards;
}

.cs-will-transform {
  will-change: transform;
}

.cs-will-opacity {
  will-change: opacity;
}

.cs-will-filter {
  will-change: filter;
}

.cs-t-origin-top {
  transform-origin: top;
}

.cs-t-origin-center {
  transform-origin: center;
}

.cs-t-origin-bottom {
  transform-origin: bottom;
}

.cs-t-preserve-3d {
  transform-style: preserve-3d;
}


/* === Utilities === */
.cs-anim-xxs {
  --cs-anim-duration: var(--cs-anim-duration-xxs);
}

.cs-anim-xs {
  --cs-anim-duration: var(--cs-anim-duration-xs);
}

.cs-anim-sm {
  --cs-anim-duration: var(--cs-anim-duration-sm);
}

.cs-anim-md {
  --cs-anim-duration: var(--cs-anim-duration-md);
}

.cs-anim-lg {
  --cs-anim-duration: var(--cs-anim-duration-lg);
}

.cs-anim-xl {
  --cs-anim-duration: var(--cs-anim-duration-xl);
}

.cs-anim-2xl {
  --cs-anim-duration: var(--cs-anim-duration-2xl);
}

.cs-ease-standard {
  --cs-anim-ease: var(--cs-anim-ease-standard);
}

.cs-ease-emphasized {
  --cs-anim-ease: var(--cs-anim-ease-emphasized);
}

.cs-ease-decelerate {
  --cs-anim-ease: var(--cs-anim-ease-decelerate);
}

.cs-ease-accelerate {
  --cs-anim-ease: var(--cs-anim-ease-accelerate);
}

.cs-ease-spring {
  --cs-anim-ease: var(--cs-anim-ease-spring);
}

.cs-ease-soft-spring {
  --cs-anim-ease: var(--cs-anim-ease-soft-spring);
}

.cs-fade-in {
  animation-name: anim-fade-in;
}

.cs-fade-out {
  animation-name: anim-fade-out;
}

.cs-scale-in {
  animation-name: anim-scale-in;
}

.cs-scale-out {
  animation-name: anim-scale-out;
}

.cs-slide-up {
  animation-name: anim-slide-up;
}

.cs-slide-down {
  animation-name: anim-slide-down;
}

.cs-slide-left {
  animation-name: anim-slide-left;
}

.cs-slide-right {
  animation-name: anim-slide-right;
}

.cs-blur-in {
  animation-name: anim-blur-in;
}

.cs-blur-out {
  animation-name: anim-blur-out;
}

.cs-rotate-in {
  animation-name: anim-rotate-in;
}

.cs-rotate {
  animation-name: anim-rotate;
}

.cs-pulse {
  animation-name: anim-pulse;
}

.cs-bounce {
  animation-name: anim-bounce;
}

.cs-wiggle {
  animation-name: anim-wiggle;
}

.cs-reveal-3d-up {
  animation-name: anim-reveal-3d-up;
}

.cs-reveal-3d-right {
  animation-name: anim-reveal-3d-right;
}

.cs-hover-lift-sm {
  transition: transform var(--cs-anim-duration-sm) var(--cs-anim-ease-standard), box-shadow var(--cs-anim-duration-sm) var(--cs-anim-ease-standard);
  transform: translateY(-2px);
}

.cs-hover-lift-md {
  transition: transform var(--cs-anim-duration-sm) var(--cs-anim-ease-standard), box-shadow var(--cs-anim-duration-sm) var(--cs-anim-ease-standard);
  transform: translateY(-4px);
}

.cs-hover-scale-105 {
  transition: transform var(--cs-anim-duration-sm) var(--cs-anim-ease-standard);
  transform: scale(1.05);
}

.cs-hover-scale-110 {
  transition: transform var(--cs-anim-duration-sm) var(--cs-anim-ease-standard);
  transform: scale(1.10);
}

.cs-enter-card {
  animation: anim-fade-in var(--cs-anim-duration-md) var(--cs-anim-ease-decelerate) both;
}

.cs-enter-modal {
  animation: anim-scale-in var(--cs-anim-duration-md) var(--cs-anim-ease-emphasized) both;
}

.cs-exit-modal {
  animation: anim-scale-out var(--cs-anim-duration-md) var(--cs-anim-ease-accelerate) both;
}

@media (prefers-reduced-motion: reduce) {
  animation-duration: var(--cs-anim-reduced-motion-duration) !important;
  animation-iteration-count: 1 !important;
  animation-timing-function: var(--cs-anim-reduced-motion-ease) !important;
  transition: none !important;
  transform: none !important;
}


/* 
 * Complete @casoon/tailwindcss-effects library
 * 
 * For individual packages and Tailwind plugin usage:
 * https://www.npmjs.com/package/@casoon/tailwindcss-effects
 */
