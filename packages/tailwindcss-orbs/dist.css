/*!
@library      Casoon Orbs CSS (dist.css)
@version      1.0.0 • 2025-09-08
@scope        Utilities + Animations + Components (Orb/Blob visuals)
@includes     • Design tokens (colors, opacity, motion, elevation)
              • Orb utilities (size, blur, position, colors)
              • Animation keyframes + helpers (float, pulse, drift)
              • Recipes (in/out helpers for modals/toasts with orbs)
              • Responsive container queries
@theming      Wrap your app (e.g., <html> or <body>) with `.cs-root`.
              Override any token via inline styles or a theme class (e.g. `.cs-theme-dark`).
              Examples:
                .cs-root { --cs-orb-blue: #3b82f6; }
                .cs-theme-dark { --cs-surface: #0b1020; --cs-text: #e7ebf3; }
@tokens       Colors      → --cs-*, --cs-orb-*
              Opacity     → --cs-opacity-*
              Motion      → --cs-transition, --cs-anim-duration-*, --cs-anim-ease-*
              Elevation   → --cs-shadow-*, --cs-z-*
@upgrades     This file ships hard fallbacks + progressive enhancement via @supports
              (e.g. color-mix, backdrop-filter). Older browsers get safe visuals.
@a11y         • Uses :focus-visible for focus rings (no outline traps)
              • Respects prefers-reduced-motion (animations toned down/removed)
              • Respects prefers-contrast and forced-colors (solid, non-blurry fallback)
@browsers     Evergreen + reasonable fallbacks for older Chromium/Firefox/Safari.
              If color-mix unsupported, gradients use rgba() fallbacks.
@usage        Minimal example:
                <div class="cs-root">
                  <div class="cs-orb cs-orb-md cs-orb-gradient-blue cs-orb-float cs-orb-absolute" style="top:10rem;left:8rem"></div>
                  <button class="cs-btn cs-btn-primary">Click me</button>
                </div>
              Orb behind a card:
                <div class="cs-root cs-cq">
                  <div class="cs-card">
                    <div class="cs-orb cs-orb-lg cs-orb-blur-lg cs-orb-gradient-pink cs-orb-absolute" style="inset:auto -2rem -2rem auto;"></div>
                    <h3 class="cs-card-title">Hello Orbs</h3>
                    <p>Soft animated glow.</p>
                  </div>
                </div>
*/

/* =========================================================
   1) FOUNDATION: TOKENS (scoped to .cs-root)
   ========================================================= */
.cs-root {
  /* Base palette (can be themed/overridden) */
  --cs-text: #0f172a;
  --cs-text-inverse: #ffffff;
  --cs-surface: #ffffff;
  --cs-surface-2: #f8fafc;
  --cs-border: #e5e7eb;

  /* Orb colors (defaults match plugin) */
  --cs-orb-blue: #3b82f6;
  --cs-orb-blue-light: #93c5fd;
  --cs-orb-blue-lighter: #dbeafe;

  --cs-orb-purple: #9333ea;
  --cs-orb-purple-light: #c4b5fd;
  --cs-orb-purple-lighter: #ede9fe;

  --cs-orb-pink: #ec4899;
  --cs-orb-pink-light: #fbcfe8;
  --cs-orb-pink-lighter: #fdf2f8;

  --cs-orb-custom-primary: #667eea;
  --cs-orb-custom-secondary: #764ba2;
  --cs-orb-custom-accent: #f093fb;

  /* Opacity tokens */
  --cs-opacity-strong: 0.5;
  --cs-opacity-medium: 0.3;
  --cs-opacity-weak: 0.1;

  /* Motion & transitions */
  --cs-transition: 180ms cubic-bezier(.2,.8,.2,1);
  --cs-anim-ease-inout: cubic-bezier(.4,0,.2,1);
  --cs-anim-ease-emph: cubic-bezier(.2,.8,.2,1);
  --cs-anim-duration-float: 6s;
  --cs-anim-duration-pulse: 4s;
  --cs-anim-duration-drift: 8s;

  /* Elevation & z-index scale */
  --cs-shadow-0: none;
  --cs-shadow-1: 0 1px 2px rgba(2,6,23,.06), 0 1px 1px rgba(2,6,23,.04);
  --cs-shadow-2: 0 2px 6px rgba(2,6,23,.08), 0 1px 2px rgba(2,6,23,.06);
  --cs-shadow-3: 0 8px 24px rgba(2,6,23,.10), 0 2px 6px rgba(2,6,23,.06);
  --cs-shadow-4: 0 16px 40px rgba(2,6,23,.12), 0 4px 10px rgba(2,6,23,.08);

  --cs-z-tooltip: 60;
  --cs-z-dropdown: 70;
  --cs-z-toast: 80;
  --cs-z-modal: 90;
  --cs-z-orb: 10;

  /* Density */
  --cs-density: 1;

  /* Fallback radial gradients (rgba-based, no color-mix) */
  --cs-orb-fallback-blue: radial-gradient(circle,
    rgba(59,130,246,var(--cs-opacity-strong)) 0%,
    rgba(147,197,253,var(--cs-opacity-medium)) 50%,
    rgba(219,234,254,var(--cs-opacity-weak)) 100%);

  --cs-orb-fallback-purple: radial-gradient(circle,
    rgba(147,51,234,var(--cs-opacity-strong)) 0%,
    rgba(196,181,253,var(--cs-opacity-medium)) 50%,
    rgba(237,233,254,var(--cs-opacity-weak)) 100%);

  --cs-orb-fallback-pink: radial-gradient(circle,
    rgba(236,72,153,var(--cs-opacity-strong)) 0%,
    rgba(251,207,232,var(--cs-opacity-medium)) 50%,
    rgba(253,242,248,var(--cs-opacity-weak)) 100%);

  --cs-orb-fallback-custom: radial-gradient(circle,
    rgba(102,126,234,var(--cs-opacity-strong)) 0%,
    rgba(118,75,162,var(--cs-opacity-medium)) 50%,
    rgba(240,147,251,var(--cs-opacity-weak)) 100%);
}

/* Progressive gradients with color-mix (upgrade path) */
@supports (background: color-mix(in srgb, red 50%, transparent)) {
  .cs-root {
    --cs-orb-gradient-blue: radial-gradient(circle,
      color-mix(in srgb, var(--cs-orb-blue) calc(var(--cs-opacity-strong)*100%), transparent) 0%,
      color-mix(in srgb, var(--cs-orb-blue-light) calc(var(--cs-opacity-medium)*100%), transparent) 50%,
      color-mix(in srgb, var(--cs-orb-blue-lighter) calc(var(--cs-opacity-weak)*100%), transparent) 100%);
    --cs-orb-gradient-purple: radial-gradient(circle,
      color-mix(in srgb, var(--cs-orb-purple) calc(var(--cs-opacity-strong)*100%), transparent) 0%,
      color-mix(in srgb, var(--cs-orb-purple-light) calc(var(--cs-opacity-medium)*100%), transparent) 50%,
      color-mix(in srgb, var(--cs-orb-purple-lighter) calc(var(--cs-opacity-weak)*100%), transparent) 100%);
    --cs-orb-gradient-pink: radial-gradient(circle,
      color-mix(in srgb, var(--cs-orb-pink) calc(var(--cs-opacity-strong)*100%), transparent) 0%,
      color-mix(in srgb, var(--cs-orb-pink-light) calc(var(--cs-opacity-medium)*100%), transparent) 50%,
      color-mix(in srgb, var(--cs-orb-pink-lighter) calc(var(--cs-opacity-weak)*100%), transparent) 100%);
    --cs-orb-gradient-custom: radial-gradient(circle,
      color-mix(in srgb, var(--cs-orb-custom-primary) calc(var(--cs-opacity-strong)*100%), transparent) 0%,
      color-mix(in srgb, var(--cs-orb-custom-secondary) calc(var(--cs-opacity-medium)*100%), transparent) 50%,
      color-mix(in srgb, var(--cs-orb-custom-accent) calc(var(--cs-opacity-weak)*100%), transparent) 100%);
  }
}

/* Container query opt-in */
.cs-cq { container-type: inline-size; }

/* =========================================================
   2) ACCESSIBILITY & PREFERENCES
   ========================================================= */
@media (prefers-reduced-motion: reduce) {
  .cs-orb-float,
  .cs-orb-pulse,
  .cs-orb-drift,
  .cs-anim-spin,
  .cs-anim-in,
  .cs-anim-out {
    animation-duration: 1ms !important;
    animation-iteration-count: 1 !important;
  }
}

@media (prefers-contrast: more) {
  .cs-orb { filter: none; opacity: 0.9; }
  .cs-card, .cs-btn { box-shadow: var(--cs-shadow-1); }
}

@media (forced-colors: active) {
  .cs-orb { background: CanvasText; opacity: 0.15; }
  .cs-btn { border: 1px solid ButtonText; }
}

/* Small-screen safety: tone down blur/motion */
@media (max-width: 480px) {
  .cs-orb:is(.cs-orb-blur-lg, .cs-orb-blur-md) { filter: blur(2px); }
  .cs-orb-float { animation-duration: calc(var(--cs-anim-duration-float) * 1.25); }
}

/* Focus visibility */
.cs-focus-ring:focus-visible,
.cs-btn:focus-visible,
.cs-card:focus-visible {
  outline: 2px solid color-mix(in srgb, var(--cs-orb-blue) 60%, transparent);
  outline-offset: 2px;
}
@supports not (color: color-mix(in srgb, red 50%, white)) {
  .cs-focus-ring:focus-visible,
  .cs-btn:focus-visible,
  .cs-card:focus-visible { outline: 2px solid #3b82f6; }
}

/* =========================================================
   3) KEYFRAMES
   ========================================================= */
@keyframes cs-orb-float-kf {
  0%, 100% { transform: translateY(0); }
  50% { transform: translateY(-20px); }
}
@keyframes cs-orb-pulse-kf {
  0%, 100% { opacity: .7; transform: scale(1); }
  50% { opacity: 1; transform: scale(1.05); }
}
@keyframes cs-orb-drift-kf {
  0% { transform: translateX(0); }
  33% { transform: translateX(30px); }
  66% { transform: translateX(-20px); }
  100% { transform: translateX(0); }
}

/* Generic helpers */
@keyframes cs-in-kf { from { opacity:0; transform: translateY(6px); } to { opacity:1; transform:none; } }
@keyframes cs-out-kf { from { opacity:1; transform:none; } to { opacity:0; transform: translateY(6px); } }
@keyframes cs-spin-kf { to { transform: rotate(360deg); } }

/* =========================================================
   4) ORB UTILITIES (from plugin, compiled to CSS)
   ========================================================= */
.cs-orb {
  border-radius: 50%;
  filter: blur(1px);
  opacity: .7;
  pointer-events: none;
  position: relative;
  z-index: var(--cs-z-orb);
}

/* Sizes */
.cs-orb-xs { width: 50px; height: 50px; }
.cs-orb-sm { width: 75px; height: 75px; }
.cs-orb-md { width: 100px; height: 100px; }
.cs-orb-lg { width: 150px; height: 150px; }
.cs-orb-xl { width: 200px; height: 200px; }
.cs-orb-2xl { width: 300px; height: 300px; }

/* Blur levels */
.cs-orb-blur-none { filter: blur(0); }
.cs-orb-blur-sm { filter: blur(2px); }
.cs-orb-blur-md { filter: blur(4px); }
.cs-orb-blur-lg { filter: blur(8px); }

/* Animations */
.cs-orb-float { animation: cs-orb-float-kf var(--cs-anim-duration-float) var(--cs-anim-ease-inout) infinite; }
.cs-orb-pulse { animation: cs-orb-pulse-kf var(--cs-anim-duration-pulse) var(--cs-anim-ease-inout) infinite; }
.cs-orb-drift { animation: cs-orb-drift-kf var(--cs-anim-duration-drift) var(--cs-anim-ease-inout) infinite; }

/* Positioning helpers */
.cs-orb-absolute { position: absolute; }
.cs-orb-fixed { position: fixed; }

/* Color backgrounds with fallbacks */
.cs-orb-gradient-blue { background: var(--cs-orb-fallback-blue); }
.cs-orb-gradient-purple { background: var(--cs-orb-fallback-purple); }
.cs-orb-gradient-pink { background: var(--cs-orb-fallback-pink); }
.cs-orb-gradient-custom { background: var(--cs-orb-fallback-custom); }

@supports (background: color-mix(in srgb, red 50%, transparent)) {
  .cs-orb-gradient-blue { background: var(--cs-orb-gradient-blue); }
  .cs-orb-gradient-purple { background: var(--cs-orb-gradient-purple); }
  .cs-orb-gradient-pink { background: var(--cs-orb-gradient-pink); }
  .cs-orb-gradient-custom { background: var(--cs-orb-gradient-custom); }
}

/* Container-based responsive orb sizing (opt-in via .cs-cq) */
@container (min-width: 480px) {
  .cs-orb[data-size~="responsive"] { width: 120px; height: 120px; }
}
@container (min-width: 768px) {
  .cs-orb[data-size~="responsive"] { width: 180px; height: 180px; }
}
@container (min-width: 1024px) {
  .cs-orb[data-size~="responsive"] { width: 240px; height: 240px; }
}

/* =========================================================
   5) COMPONENTS (minimal to showcase usage with orbs)
   ========================================================= */
.cs-card {
  position: relative;
  border-radius: calc(12px * var(--cs-density));
  background: var(--cs-surface);
  box-shadow: var(--cs-shadow-2);
  border: 1px solid var(--cs-border);
  padding: calc(16px * var(--cs-density));
  transition: box-shadow var(--cs-transition), transform var(--cs-transition);
}
.cs-card:hover { box-shadow: var(--cs-shadow-3); transform: translateY(-1px); }
.cs-card-title { font-weight: 600; color: var(--cs-text); margin-bottom: 0.5em; }

.cs-btn {
  --_pad-y: calc(8px * var(--cs-density));
  --_pad-x: calc(14px * var(--cs-density));
  display: inline-flex; align-items: center; justify-content: center; gap: .5rem;
  border-radius: calc(10px * var(--cs-density));
  padding: var(--_pad-y) var(--_pad-x);
  font-weight: 600; line-height: 1.2;
  border: 1px solid var(--cs-border);
  background: var(--cs-surface-2);
  color: var(--cs-text);
  box-shadow: var(--cs-shadow-1);
  transition: background var(--cs-transition), box-shadow var(--cs-transition), transform var(--cs-transition);
}
.cs-btn:hover { box-shadow: var(--cs-shadow-2); transform: translateY(-1px); }
.cs-btn:active { transform: translateY(0); }
.cs-btn-primary {
  background: color-mix(in srgb, var(--cs-orb-blue) 12%, var(--cs-surface));
  border-color: color-mix(in srgb, var(--cs-orb-blue) 35%, var(--cs-border));
  color: var(--cs-text);
}
@supports not (color: color-mix(in srgb, red 50%, white)) {
  .cs-btn-primary { background: #eef5ff; border-color: #b8d1ff; }
}

/* High-elevation pop surfaces (dropdown/tooltip/modal) */
.cs-surface-pop { background: var(--cs-surface); border: 1px solid var(--cs-border); box-shadow: var(--cs-shadow-4); border-radius: 12px; }

/* Z-index consistency */
.cs-z-tooltip { z-index: var(--cs-z-tooltip); }
.cs-z-dropdown { z-index: var(--cs-z-dropdown); }
.cs-z-toast { z-index: var(--cs-z-toast); }
.cs-z-modal { z-index: var(--cs-z-modal); }

/* =========================================================
   6) OPTIONAL ADD-ONS
   ========================================================= */
/* Acrylic / frosted */
.cs-acrylic {
  background: color-mix(in srgb, var(--cs-surface) 70%, transparent);
  -webkit-backdrop-filter: saturate(140%) blur(10px);
  backdrop-filter: saturate(140%) blur(10px);
  border: 1px solid color-mix(in srgb, var(--cs-border) 70%, transparent);
}
@supports not ((backdrop-filter: blur(10px)) or (-webkit-backdrop-filter: blur(10px))) {
  .cs-acrylic { background: rgba(255,255,255,.75); }
}

/* Glow utilities */
.cs-glow { box-shadow: 0 0 0 0 rgba(0,0,0,0); }
.cs-glow-blue { box-shadow: 0 0 24px 8px color-mix(in srgb, var(--cs-orb-blue) 35%, transparent); }
.cs-glow-pink { box-shadow: 0 0 24px 8px color-mix(in srgb, var(--cs-orb-pink) 35%, transparent); }
@supports not (color: color-mix(in srgb, red 50%, white)) {
  .cs-glow-blue { box-shadow: 0 0 24px 8px rgba(59,130,246,.35); }
  .cs-glow-pink { box-shadow: 0 0 24px 8px rgba(236,72,153,.35); }
}

/* Sticky & will-change helpers */
.cs-sticky-top { position: sticky; top: 0; }
.cs-will-transform { will-change: transform; }
.cs-will-filter { will-change: filter; }

/* Print safety (remove heavy blur / solid borders) */
@media print {
  .cs-orb { filter: none !important; opacity: 0.15 !important; }
  .cs-card, .cs-btn, .cs-surface-pop { box-shadow: none !important; border: 1px solid #000 !important; }
}

/* =========================================================
   7) RECIPES
   ========================================================= */
/* Modal/Toast motion helpers that play nice with reduced motion */
.cs-anim-in { animation: cs-in-kf .24s var(--cs-anim-ease-emph) both; }
.cs-anim-out { animation: cs-out-kf .20s var(--cs-anim-ease-emph) both; }
.cs-anim-spin { animation: cs-spin-kf 1.2s linear infinite; }

/* Prebuilt orb-backed section */
.cs-section-orb {
  position: relative; overflow: clip;
}
.cs-section-orb > .cs-orb { position: absolute; inset: auto; }

/* =========================================================
   8) UTILITIES (small set to round out)
   ========================================================= */
.cs-hidden { display: none !important; }
.cs-sr-only {
  position: absolute; width: 1px; height: 1px; padding: 0; margin: -1px;
  overflow: hidden; clip: rect(0,0,0,0); white-space: nowrap; border: 0;
}
.cs-flex { display: flex; }
.cs-grid { display: grid; }
.cs-center { display: grid; place-items: center; }
.cs-w-full { width: 100%; }
.cs-h-full { height: 100%; }
.cs-rounded { border-radius: 12px; }
.cs-border { border: 1px solid var(--cs-border); }
.cs-shadow-1 { box-shadow: var(--cs-shadow-1); }
.cs-shadow-2 { box-shadow: var(--cs-shadow-2); }
.cs-shadow-3 { box-shadow: var(--cs-shadow-3); }






/* ============================
   NEW ANIMATIONS
============================ */

/* Morphing shape – soft blob effect */
@keyframes cs-orb-morph {
  0%   { border-radius: 50% 50% 50% 50% / 50% 50% 50% 50%; }
  25%  { border-radius: 55% 45% 60% 40% / 60% 40% 55% 45%; }
  50%  { border-radius: 50% 50% 60% 40% / 40% 60% 50% 50%; }
  75%  { border-radius: 45% 55% 50% 50% / 50% 50% 45% 55%; }
  100% { border-radius: 50% 50% 50% 50% / 50% 50% 50% 50%; }
}

/* Expand-retract pulse (for hover/focus) */
@keyframes cs-orb-bloom {
  0%, 100% { transform: scale(1); opacity: 0.7; }
  50% { transform: scale(1.12); opacity: 1; }
}

/* Orb shimmer (moving light gradient) */
@keyframes cs-orb-shimmer {
  0%   { background-position: 0% 50%; }
  50%  { background-position: 100% 50%; }
  100% { background-position: 0% 50%; }
}

/* ============================
   ORB PRO CLASSES
============================ */

/* Morphing orb (animated shape blob) */
.cs-orb-morph {
  animation: cs-orb-morph 12s ease-in-out infinite;
}

/* Orb shimmer gradient (on hover only) */
.cs-orb-shimmer {
  background: linear-gradient(270deg, var(--cs-orb-blue), var(--cs-orb-blue-light), var(--cs-orb-blue));
  background-size: 600% 600%;
  animation: cs-orb-shimmer 10s ease infinite;
}

/* Orb bloom effect on hover/focus (pulse-like) */
.cs-orb-bloom:hover,
.cs-orb-bloom:focus-visible {
  animation: cs-orb-bloom 2s ease-in-out infinite;
  transform-origin: center;
}

/* Combine multiple (morph + pulse) */
.cs-orb-zen {
  animation:
    cs-orb-float-kf var(--cs-anim-duration-float) var(--cs-anim-ease-inout) infinite,
    cs-orb-morph 14s ease-in-out infinite;
}

/* ============================
   CARD HOVER WITH ORB REVEAL
============================ */
.cs-card-hover-orb {
  position: relative;
  overflow: hidden;
}

.cs-card-hover-orb::before {
  content: "";
  position: absolute;
  top: -25%;
  left: -25%;
  width: 200%;
  height: 200%;
  background: var(--cs-orb-fallback-blue);
  opacity: 0;
  filter: blur(32px);
  transition: opacity 0.5s ease;
  z-index: 0;
  pointer-events: none;
}

.cs-card-hover-orb:hover::before {
  opacity: 0.6;
}

/* Optional modifier for shimmer orb reveal */
.cs-card-hover-orb-shimmer::before {
  background: linear-gradient(135deg, #3b82f6, #93c5fd, #3b82f6);
  background-size: 300% 300%;
  animation: cs-orb-shimmer 6s linear infinite;
}

/* ============================
   ORB BUTTON ENHANCEMENT
============================ */
.cs-btn-orb {
  position: relative;
  z-index: 1;
  overflow: hidden;
}

.cs-btn-orb::after {
  content: "";
  position: absolute;
  inset: -50%;
  background: radial-gradient(circle at center, var(--cs-orb-blue-light), transparent 70%);
  opacity: 0;
  transform: scale(0.5);
  transition: opacity 0.4s ease, transform 0.4s ease;
  z-index: 0;
}

.cs-btn-orb:hover::after {
  opacity: 0.4;
  transform: scale(1.2);
}

/* ============================
   OPTIONAL MODAL-ORBS SETUP
============================ */
.cs-orb-modal-backdrop {
  position: absolute;
  inset: 0;
  background: var(--cs-orb-fallback-purple);
  filter: blur(60px);
  opacity: 0.4;
  pointer-events: none;
  z-index: var(--cs-z-modal);
}

/* ============================
   A11Y / FALLBACKS
============================ */
@media (prefers-reduced-motion: reduce) {
  .cs-orb-bloom,
  .cs-orb-shimmer,
  .cs-orb-morph,
  .cs-orb-zen,
  .cs-card-hover-orb::before,
  .cs-btn-orb::after {
    animation: none !important;
    transition: none !important;
  }
}
