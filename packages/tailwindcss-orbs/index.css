/* Import tokens first */
@import "./tokens.css";

@layer components {
  /* Hero/Section Glow Background (neutral benannt) */
  .bg-orbs-hero {
    background:
      radial-gradient(circle at 20% 80%, var(--bg-glow-1) 0%, transparent 50%),
      radial-gradient(circle at 80% 20%, var(--bg-glow-2) 0%, transparent 50%),
      radial-gradient(circle at 40% 40%, var(--bg-glow-3) 0%, transparent 50%),
      linear-gradient(135deg, var(--bg-base-from), var(--bg-base-to));
    /* Optionaler Tiefeffekt; bei Parallax-Jank einfach entfernen */
    background-attachment: fixed;
  }

  /* Orb primitives (optional) */
  .orb {
    position: relative; width: 200px; height: 200px; border-radius: 9999px;
    background:
      radial-gradient(circle at 35% 35%, color-mix(in oklab, var(--orb-ink-light, #fff) 80%, transparent), color-mix(in oklab, var(--orb-ink-light, #fff) 20%, transparent) 40%, transparent 60%),
      radial-gradient(circle at 60% 60%, var(--bg-glow-2), transparent 50%);
    filter: blur(.3px);
  }
  .orb-sm { width: 120px; height: 120px; }
  .orb-md { width: 180px; height: 180px; }
  .orb-lg { width: 260px; height: 260px; }
  .orb-animate { animation: orbFloat 6s ease-in-out infinite; }

  /* Section-Hintergrund mit mehreren Orbs */
  .bg-orbs {
    background:
      radial-gradient(600px circle at 20% 20%, color-mix(in oklab, var(--bg-glow-1) 30%, transparent), transparent 60%),
      radial-gradient(500px circle at 80% 30%, color-mix(in oklab, var(--bg-glow-2) 30%, transparent), transparent 60%),
      radial-gradient(400px circle at 40% 80%, color-mix(in oklab, var(--bg-glow-3) 30%, transparent), transparent 60%);
  }
}

@layer components {
  @keyframes orbFloat {
    0% { transform: translateY(0) }
    50% { transform: translateY(-10px) }
    100% { transform: translateY(0) }
  }
  .orb-float { animation: orbFloat 6s ease-in-out infinite; }
  @keyframes orbPulse { 0%,100%{ transform: scale(1) } 50%{ transform: scale(1.06) } }
  @keyframes orbRotate { to { transform: rotate(360deg) } }
  @keyframes orbBounce { 0%,100%{ transform: translateY(0) } 50%{ transform: translateY(-6px) } }
  .orb-pulse { animation: orbPulse 2.2s ease-in-out infinite; }
  .orb-rotate { animation: orbRotate 12s linear infinite; }
  .orb-bounce { animation: orbBounce 1.4s ease-in-out infinite; }

  /* Patterns & shapes */
  .orb-stripes { background: repeating-conic-gradient(from 0deg, color-mix(in oklab, var(--bg-glow-2) 30%, transparent) 0 10deg, transparent 10deg 20deg); }
  .orb-dots { background: radial-gradient(circle at 50% 50%, color-mix(in oklab, var(--orb-ink-light, #fff) 25%, transparent) 2px, transparent 3px) 0 0 / 12px 12px; }
  .orb-waves { background: radial-gradient(60px circle at 50% 50%, color-mix(in oklab, var(--bg-glow-3) 35%, transparent), transparent 60%); }
  .orb-oval { border-radius: 50% / 40%; }
  .orb-hexagon { clip-path: polygon(25% 5%, 75% 5%, 100% 50%, 75% 95%, 25% 95%, 0 50%); }
  .orb-star { clip-path: polygon(50% 0%, 61% 35%, 98% 35%, 68% 57%, 79% 91%, 50% 70%, 21% 91%, 32% 57%, 2% 35%, 39% 35%); }

  /* Interactions */
  .orb-hover:hover { filter: brightness(1.06) saturate(1.06); }
  /* Hover variants */
  .orb-hover-scale { will-change: transform; }
  .orb-hover-scale:hover { transform: scale(1.04); }
  .orb-hover-glow:hover {
    box-shadow:
      0 0 0 3px color-mix(in oklab, var(--bg-glow-2) 35%, transparent),
      0 10px 24px color-mix(in oklab, var(--bg-glow-2) 30%, transparent);
  }
  .orb-hover-blur:hover { filter: blur(1.5px) saturate(1.05); }
  .orb-focus:focus-visible { outline: none; box-shadow: 0 0 0 3px color-mix(in oklab, var(--bg-glow-2) 40%, transparent); }
  .orb-active:active { transform: translateY(1px); }

  /* Transitions */
  .orb-transition-fast { transition: all .15s ease; }
  .orb-transition-slow { transition: all .35s ease; }

  /* Responsive presets (size) */
  .orb-responsive-sm { width: clamp(80px, 20vw, 140px); height: clamp(80px, 20vw, 140px); }
  .orb-responsive-md { width: clamp(120px, 28vw, 220px); height: clamp(120px, 28vw, 220px); }
  .orb-responsive-lg { width: clamp(180px, 40vw, 320px); height: clamp(180px, 40vw, 320px); }
}
