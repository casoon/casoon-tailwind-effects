/*! tailwindcss v4.1.13 | MIT License | https://tailwindcss.com */
/*!
 * Casoon Tailwind Effects v0.9.0 - Complete Collection
 * All-in-one CSS file with Tailwind CSS v4 + all Casoon packages
 * 
 * Features:
 * ✅ 300+ Utilities & Effects
 * ✅ Tree-shaking support with @utility directives
 * ✅ Modern animations with stagger system & 3D effects
 * ✅ Glass-morphism effects with smart fallbacks
 * ✅ Complete accessibility support (prefers-reduced-motion)
 * ✅ Performance optimized with hardware acceleration
 * 
 * Usage:
 * @import "path/to/casoon-tailwind-effects/index.css";
 */
@layer properties;
@layer theme, base, components, utilities;
@layer theme {
  :root, :host {
    --font-sans: ui-sans-serif, system-ui, sans-serif, "Apple Color Emoji",
      "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji";
    --font-mono: ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono",
      "Courier New", monospace;
    --color-red-500: oklch(63.7% 0.237 25.331);
    --color-red-600: oklch(57.7% 0.245 27.325);
    --color-red-700: oklch(50.5% 0.213 27.518);
    --color-orange-500: oklch(70.5% 0.213 47.604);
    --color-orange-600: oklch(64.6% 0.222 41.116);
    --color-yellow-100: oklch(97.3% 0.071 103.193);
    --color-yellow-400: oklch(85.2% 0.199 91.936);
    --color-yellow-500: oklch(79.5% 0.184 86.047);
    --color-yellow-600: oklch(68.1% 0.162 75.834);
    --color-yellow-700: oklch(55.4% 0.135 66.442);
    --color-green-100: oklch(96.2% 0.044 156.743);
    --color-green-400: oklch(79.2% 0.209 151.711);
    --color-green-500: oklch(72.3% 0.219 149.579);
    --color-green-600: oklch(62.7% 0.194 149.214);
    --color-green-700: oklch(52.7% 0.154 150.069);
    --color-teal-500: oklch(70.4% 0.14 182.503);
    --color-teal-600: oklch(60% 0.118 184.704);
    --color-cyan-400: oklch(78.9% 0.154 211.53);
    --color-blue-100: oklch(93.2% 0.032 255.585);
    --color-blue-400: oklch(70.7% 0.165 254.624);
    --color-blue-500: oklch(62.3% 0.214 259.815);
    --color-blue-600: oklch(54.6% 0.245 262.881);
    --color-blue-700: oklch(48.8% 0.243 264.376);
    --color-blue-900: oklch(37.9% 0.146 265.522);
    --color-indigo-500: oklch(58.5% 0.233 277.117);
    --color-indigo-600: oklch(51.1% 0.262 276.966);
    --color-purple-100: oklch(94.6% 0.033 307.174);
    --color-purple-400: oklch(71.4% 0.203 305.504);
    --color-purple-500: oklch(62.7% 0.265 303.9);
    --color-purple-600: oklch(55.8% 0.288 302.321);
    --color-purple-700: oklch(49.6% 0.265 301.924);
    --color-purple-900: oklch(38.1% 0.176 304.987);
    --color-pink-400: oklch(71.8% 0.202 349.761);
    --color-pink-500: oklch(65.6% 0.241 354.308);
    --color-pink-600: oklch(59.2% 0.249 0.584);
    --color-slate-900: oklch(20.8% 0.042 265.755);
    --color-gray-100: oklch(96.7% 0.003 264.542);
    --color-gray-200: oklch(92.8% 0.006 264.531);
    --color-gray-400: oklch(70.7% 0.022 261.325);
    --color-gray-600: oklch(44.6% 0.03 256.802);
    --color-gray-800: oklch(27.8% 0.033 256.848);
    --color-gray-900: oklch(21% 0.034 264.665);
    --color-black: #000;
    --color-white: #fff;
    --spacing: 0.25rem;
    --container-sm: 24rem;
    --container-2xl: 42rem;
    --container-4xl: 56rem;
    --text-xs: 0.75rem;
    --text-xs--line-height: calc(1 / 0.75);
    --text-sm: 0.875rem;
    --text-sm--line-height: calc(1.25 / 0.875);
    --text-lg: 1.125rem;
    --text-lg--line-height: calc(1.75 / 1.125);
    --text-xl: 1.25rem;
    --text-xl--line-height: calc(1.75 / 1.25);
    --text-2xl: 1.5rem;
    --text-2xl--line-height: calc(2 / 1.5);
    --text-3xl: 1.875rem;
    --text-3xl--line-height: calc(2.25 / 1.875);
    --text-4xl: 2.25rem;
    --text-4xl--line-height: calc(2.5 / 2.25);
    --text-5xl: 3rem;
    --text-5xl--line-height: 1;
    --text-6xl: 3.75rem;
    --text-6xl--line-height: 1;
    --font-weight-semibold: 600;
    --font-weight-bold: 700;
    --leading-relaxed: 1.625;
    --radius-lg: 0.5rem;
    --radius-xl: 0.75rem;
    --radius-2xl: 1rem;
    --ease-in-out: cubic-bezier(0.4, 0, 0.2, 1);
    --animate-spin: spin 1s linear infinite;
    --animate-pulse: pulse 2s cubic-bezier(0.4, 0, 0.6, 1) infinite;
    --blur-3xl: 64px;
    --default-transition-duration: 150ms;
    --default-transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
    --default-font-family: var(--font-sans);
    --default-mono-font-family: var(--font-mono);
    --cs-bg: #0b0c0f;
    --cs-surface: #14161a;
    --cs-elev1: #1b1e24;
    --cs-elev2: #21252d;
    --cs-text: #eef1f6;
    --cs-text-muted: #b6bfcc;
    --cs-border: #2a2f39;
    --cs-brand: #4f7cff;
    --cs-brand-contrast: #0b0d12;
    --cs-brand-ink: var(--cs-brand-contrast);
    --cs-success: #22c55e;
    --cs-warning: #f59e0b;
    --cs-danger: #ef4444;
    --cs-info: #06b6d4;
    --cs-font-sans: ui-sans-serif, system-ui, -apple-system, Segoe UI, Roboto, Inter, "Helvetica Neue", Arial, "Noto Sans", "Liberation Sans", sans-serif;
    --cs-font-mono: ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono", "Courier New", monospace;
    --cs-line: 1.5;
    --cs-fs-xs: clamp(0.78rem, 0.75rem + 0.2cqi, 0.84rem);
    --cs-fs-sm: clamp(0.88rem, 0.82rem + 0.3cqi, 0.95rem);
    --cs-fs-md: clamp(1rem, 0.95rem + 0.4cqi, 1.125rem);
    --cs-fs-lg: clamp(1.25rem, 1.05rem + 0.8cqi, 1.5rem);
    --cs-fs-xl: clamp(1.5rem, 1.2rem + 1.2cqi, 1.875rem);
    --cs-fs-2xl: clamp(1.875rem, 1.4rem + 1.6cqi, 2.25rem);
    --cs-leading-relaxed: 1.625;
    --cs-text-balance: balance;
    --cs-density: 1;
    --cs-space-1: calc(4px * var(--cs-density));
    --cs-space-2: calc(8px * var(--cs-density));
    --cs-space-3: calc(12px * var(--cs-density));
    --cs-space-4: calc(16px * var(--cs-density));
    --cs-space-6: calc(24px * var(--cs-density));
    --cs-space-8: calc(32px * var(--cs-density));
    --cs-radius: 10px;
    --cs-radius-sm: calc(var(--cs-radius) - 4px);
    --cs-radius-lg: calc(var(--cs-radius) + 6px);
    --cs-shadow-1: 0 1px 2px rgba(0, 0, 0, 0.25), 0 1px 1px rgba(0, 0, 0, 0.1);
    --cs-shadow-2: 0 8px 24px rgba(0, 0, 0, 0.22), 0 2px 8px rgba(0, 0, 0, 0.18);
    --cs-transition: 180ms cubic-bezier(0.2, 0.6, 0.2, 1);
    --cs-anim-duration-sm: 160ms;
    --cs-anim-duration-md: 280ms;
    --cs-anim-duration-lg: 420ms;
    --cs-anim-ease-out: cubic-bezier(0.16, 1, 0.3, 1);
    --cs-z-0: 0;
    --cs-z-1: 1;
    --cs-z-base: 1;
    --cs-z-10: 10;
    --cs-z-20: 20;
    --cs-z-30: 30;
    --cs-z-popover: 30;
    --cs-z-40: 40;
    --cs-z-tooltip: 40;
    --cs-z-50: 50;
    --cs-z-toast: 50;
    --cs-z-60: 60;
    --cs-z-modal: 60;
    --cs-z-70: 70;
    --cs-z-80: 80;
    --cs-z-90: 90;
    --cs-z-100: 100;
    --cs-z-200: 200;
    --cs-z-300: 300;
    --cs-z-400: 400;
    --cs-z-500: 500;
    --cs-z-600: 600;
    --cs-z-700: 700;
    --cs-z-800: 800;
    --cs-z-900: 900;
    --cs-z-999: 999;
    --cs-z-9999: 9999;
    --cs-z-max: 2147483647;
    --cs-page-max: 1200px;
    --cs-page-pad: var(--cs-space-4);
    --cs-acrylic-blur: 14px;
    --cs-acrylic-tint: rgba(20, 22, 26, 0.55);
    --cs-acrylic-border: rgba(255, 255, 255, 0.06);
    --cs-anim-duration-xxs: 75ms;
    --cs-anim-duration-xs: 150ms;
    --cs-anim-duration-xl: 700ms;
    --cs-anim-duration-2xl: 1000ms;
    --cs-anim-duration-3xl: 1500ms;
    --cs-anim-ease-standard: cubic-bezier(0.2, 0, 0, 1);
    --cs-anim-ease-emphasized: cubic-bezier(0.3, 0, 0.8, 0.15);
    --cs-anim-ease-decelerate: cubic-bezier(0.05, 0.7, 0.1, 1);
    --cs-anim-ease-accelerate: cubic-bezier(0.3, 0, 1, 1);
    --cs-anim-ease-spring: cubic-bezier(0.175, 0.885, 0.32, 1.275);
    --cs-anim-ease-soft-spring: cubic-bezier(0.25, 0.46, 0.45, 0.94);
    --cs-anim-ease-bounce: cubic-bezier(0.68, -0.55, 0.265, 1.55);
    --cs-anim-ease-elastic: cubic-bezier(0.68, -0.6, 0.32, 1.6);
    --cs-anim-ease-smooth: cubic-bezier(0.4, 0, 0.2, 1);
    --cs-anim-ease-crisp: cubic-bezier(0.4, 0, 0.6, 1);
    --cs-anim-ease-overshoot: cubic-bezier(0.34, 1.56, 0.64, 1);
    --cs-underline-w: 0%;
    --cs-underline-h: 2px;
    --cs-ripple-color: currentColor;
    --cs-glass-white: #ffffff;
    --cs-glass-black: #000000;
    --cs-glass-blue: #3b82f6;
    --cs-glass-purple: #9333ea;
    --cs-glass-green: #22c55e;
    --cs-glass-pink: #ec4899;
    --cs-glass-amber: #f59e0b;
    --cs-glass-bg-xs: rgba(255,255,255,0.02);
    --cs-glass-bg-sm: rgba(255,255,255,0.07);
    --cs-glass-bg-light: rgba(255,255,255,0.10);
    --cs-glass-bg-weak: rgba(255,255,255,0.05);
    --cs-glass-bg-md: rgba(255,255,255,0.12);
    --cs-glass-bg-medium: rgba(255,255,255,0.15);
    --cs-glass-bg-lg: rgba(255,255,255,0.18);
    --cs-glass-bg-strong: rgba(255,255,255,0.20);
    --cs-glass-bg-xl: rgba(255,255,255,0.25);
    --cs-glass-bg-2xl: rgba(255,255,255,0.35);
    --cs-glass-bg-3xl: rgba(255,255,255,0.45);
    --cs-glass-bg-4xl: rgba(255,255,255,0.60);
    --cs-glass-bg-5xl: rgba(255,255,255,0.75);
    --cs-glass-bg-dark: rgba(0,0,0,0.10);
    --cs-glass-bg-dark-xs: rgba(0,0,0,0.02);
    --cs-glass-bg-dark-sm: rgba(0,0,0,0.07);
    --cs-glass-bg-dark-md: rgba(0,0,0,0.12);
    --cs-glass-bg-dark-lg: rgba(0,0,0,0.18);
    --cs-glass-bg-dark-xl: rgba(0,0,0,0.25);
    --cs-glass-bg-dark-2xl: rgba(0,0,0,0.35);
    --cs-glass-bg-dark-3xl: rgba(0,0,0,0.45);
    --cs-glass-bg-dark-4xl: rgba(0,0,0,0.60);
    --cs-glass-bg-dark-5xl: rgba(0,0,0,0.75);
    --cs-glass-bg-blue: rgba(59,130,246,0.10);
    --cs-glass-bg-purple: rgba(147,51,234,0.10);
    --cs-glass-bg-green: rgba(34,197,94,0.10);
    --cs-glass-bg-pink: rgba(236,72,153,0.10);
    --cs-glass-bg-amber: rgba(245,158,11,0.10);
    --cs-glass-border-xs: rgba(255,255,255,0.05);
    --cs-glass-border-sm: rgba(255,255,255,0.08);
    --cs-glass-border-light: rgba(255,255,255,0.10);
    --cs-glass-border-md: rgba(255,255,255,0.15);
    --cs-glass-border-medium: rgba(255,255,255,0.20);
    --cs-glass-border-lg: rgba(255,255,255,0.25);
    --cs-glass-border-strong: rgba(255,255,255,0.30);
    --cs-glass-border-xl: rgba(255,255,255,0.40);
    --cs-glass-border-2xl: rgba(255,255,255,0.50);
    --cs-glass-border-3xl: rgba(255,255,255,0.65);
    --cs-glass-border-blue: rgba(59,130,246,0.20);
    --cs-glass-border-purple: rgba(147,51,234,0.20);
    --cs-glass-border-green: rgba(34,197,94,0.20);
    --cs-glass-border-pink: rgba(236,72,153,0.20);
    --cs-glass-border-amber: rgba(245,158,11,0.20);
    --cs-glass-blur-sm: blur(8px);
    --cs-glass-blur: blur(16px);
    --cs-glass-blur-lg: blur(24px);
    --cs-glass-blur-xl: blur(32px);
    --cs-glass-radius-sm: .25rem;
    --cs-glass-radius: .5rem;
    --cs-glass-radius-lg: .75rem;
    --cs-glass-radius-xl: 1rem;
    --cs-glass-radius-2xl: 1.5rem;
    --cs-glass-radius-3xl: 2rem;
    --cs-glass-shadow-light: rgba(0,0,0,0.05);
    --cs-glass-shadow-medium: rgba(0,0,0,0.10);
    --cs-glass-shadow-strong: rgba(0,0,0,0.15);
    --cs-glass-shadow-xl: rgba(0,0,0,0.20);
    --cs-glass-shadow-sm-def: 0 1px 2px var(--cs-glass-shadow-light);
    --cs-glass-shadow-def: 0 8px 32px var(--cs-glass-shadow-medium);
    --cs-glass-shadow-lg-def: 0 20px 40px var(--cs-glass-shadow-strong);
    --cs-glass-shadow-xl-def: 0 25px 50px var(--cs-glass-shadow-xl);
    --cs-glass-transition: .3s;
    --cs-glass-tooltip-bg: rgba(0,0,0,0.80);
    --cs-glass-bg-hover: rgba(255,255,255,0.15);
    --cs-glass-bg-light-hover: rgba(255,255,255,0.25);
    --cs-glass-focus-ring: rgba(59,130,246,0.50);
    --cs-card-bg: var(--cs-surface, #ffffff);
    --cs-card-border: var(--cs-border, #e5e7eb);
    --cs-card-transition: var(--cs-transition, 0.2s ease);
    --cs-card-space-lg: 1rem;
    --cs-card-space-xl: 1.5rem;
    --cs-card-hover-lift: -2px;
    --cs-card-shadow-sm: 0 1px 2px rgba(0, 0, 0, 0.05);
    --cs-card-shadow-md: 0 4px 6px rgba(0, 0, 0, 0.1);
    --cs-card-radius-lg: 0.75rem;
    --cs-surface-2: #f8fafc;
    --cs-orb-blue: #3b82f6;
    --cs-orb-blue-light: #93c5fd;
    --cs-orb-blue-lighter: #dbeafe;
    --cs-orb-purple: #9333ea;
    --cs-orb-purple-light: #c4b5fd;
    --cs-orb-purple-lighter: #ede9fe;
    --cs-orb-pink: #ec4899;
    --cs-orb-pink-light: #fbcfe8;
    --cs-orb-pink-lighter: #fdf2f8;
    --cs-orb-custom-primary: #667eea;
    --cs-orb-custom-secondary: #764ba2;
    --cs-orb-custom-accent: #f093fb;
    --cs-opacity-strong: 0.5;
    --cs-opacity-medium: 0.3;
    --cs-opacity-weak: 0.1;
    --cs-anim-ease-inout: cubic-bezier(.4,0,.2,1);
    --cs-anim-ease-emph: cubic-bezier(.2,.8,.2,1);
    --cs-anim-duration-float: 6s;
    --cs-anim-duration-pulse: 4s;
    --cs-anim-duration-drift: 8s;
    --cs-shadow-3: 0 8px 24px rgba(2,6,23,.10), 0 2px 6px rgba(2,6,23,.06);
    --cs-shadow-4: 0 16px 40px rgba(2,6,23,.12), 0 4px 10px rgba(2,6,23,.08);
    --cs-z-dropdown: 70;
    --cs-z-orb: 10;
    --cs-orb-fallback-blue: radial-gradient(circle,
    rgba(59,130,246,var(--cs-opacity-strong)) 0%,
    rgba(147,197,253,var(--cs-opacity-medium)) 50%,
    rgba(219,234,254,var(--cs-opacity-weak)) 100%);
    --cs-orb-fallback-purple: radial-gradient(circle,
    rgba(147,51,234,var(--cs-opacity-strong)) 0%,
    rgba(196,181,253,var(--cs-opacity-medium)) 50%,
    rgba(237,233,254,var(--cs-opacity-weak)) 100%);
    --cs-orb-fallback-pink: radial-gradient(circle,
    rgba(236,72,153,var(--cs-opacity-strong)) 0%,
    rgba(251,207,232,var(--cs-opacity-medium)) 50%,
    rgba(253,242,248,var(--cs-opacity-weak)) 100%);
    --cs-orb-fallback-custom: radial-gradient(circle,
    rgba(102,126,234,var(--cs-opacity-strong)) 0%,
    rgba(118,75,162,var(--cs-opacity-medium)) 50%,
    rgba(240,147,251,var(--cs-opacity-weak)) 100%);
    --cs-orb-gradient-blue: radial-gradient(circle,
    color-mix(in srgb, #3b82f6 calc(0.5*100%), transparent) 0%,
    color-mix(in srgb, #93c5fd calc(0.3*100%), transparent) 50%,
    color-mix(in srgb, #dbeafe calc(0.1*100%), transparent) 100%);
    @supports (color: color-mix(in lab, red, red)) {
      --cs-orb-gradient-blue: radial-gradient(circle,
    color-mix(in srgb, var(--cs-orb-blue) calc(var(--cs-opacity-strong)*100%), transparent) 0%,
    color-mix(in srgb, var(--cs-orb-blue-light) calc(var(--cs-opacity-medium)*100%), transparent) 50%,
    color-mix(in srgb, var(--cs-orb-blue-lighter) calc(var(--cs-opacity-weak)*100%), transparent) 100%);
    }
    --cs-orb-gradient-purple: radial-gradient(circle,
    color-mix(in srgb, #9333ea calc(0.5*100%), transparent) 0%,
    color-mix(in srgb, #c4b5fd calc(0.3*100%), transparent) 50%,
    color-mix(in srgb, #ede9fe calc(0.1*100%), transparent) 100%);
    @supports (color: color-mix(in lab, red, red)) {
      --cs-orb-gradient-purple: radial-gradient(circle,
    color-mix(in srgb, var(--cs-orb-purple) calc(var(--cs-opacity-strong)*100%), transparent) 0%,
    color-mix(in srgb, var(--cs-orb-purple-light) calc(var(--cs-opacity-medium)*100%), transparent) 50%,
    color-mix(in srgb, var(--cs-orb-purple-lighter) calc(var(--cs-opacity-weak)*100%), transparent) 100%);
    }
    --cs-orb-gradient-pink: radial-gradient(circle,
    color-mix(in srgb, #ec4899 calc(0.5*100%), transparent) 0%,
    color-mix(in srgb, #fbcfe8 calc(0.3*100%), transparent) 50%,
    color-mix(in srgb, #fdf2f8 calc(0.1*100%), transparent) 100%);
    @supports (color: color-mix(in lab, red, red)) {
      --cs-orb-gradient-pink: radial-gradient(circle,
    color-mix(in srgb, var(--cs-orb-pink) calc(var(--cs-opacity-strong)*100%), transparent) 0%,
    color-mix(in srgb, var(--cs-orb-pink-light) calc(var(--cs-opacity-medium)*100%), transparent) 50%,
    color-mix(in srgb, var(--cs-orb-pink-lighter) calc(var(--cs-opacity-weak)*100%), transparent) 100%);
    }
    --cs-orb-gradient-custom: radial-gradient(circle,
    color-mix(in srgb, #667eea calc(0.5*100%), transparent) 0%,
    color-mix(in srgb, #764ba2 calc(0.3*100%), transparent) 50%,
    color-mix(in srgb, #f093fb calc(0.1*100%), transparent) 100%);
    @supports (color: color-mix(in lab, red, red)) {
      --cs-orb-gradient-custom: radial-gradient(circle,
    color-mix(in srgb, var(--cs-orb-custom-primary) calc(var(--cs-opacity-strong)*100%), transparent) 0%,
    color-mix(in srgb, var(--cs-orb-custom-secondary) calc(var(--cs-opacity-medium)*100%), transparent) 50%,
    color-mix(in srgb, var(--cs-orb-custom-accent) calc(var(--cs-opacity-weak)*100%), transparent) 100%);
    }
    --cs-form-bg: var(--cs-surface);
    --cs-form-border: var(--cs-border);
    --cs-form-radius: var(--cs-radius);
    --cs-form-shadow: var(--cs-shadow-1);
    --cs-form-focus: var(--cs-brand);
    --cs-prose-headings: var(--cs-text);
    --cs-prose-body: var(--cs-text-muted);
    --cs-prose-links: var(--cs-brand);
    --cs-prose-bold: var(--cs-text);
    --cs-prose-quotes: var(--cs-text-muted);
  }
}
@layer base {
  *, ::after, ::before, ::backdrop, ::file-selector-button {
    box-sizing: border-box;
    margin: 0;
    padding: 0;
    border: 0 solid;
  }
  html, :host {
    line-height: 1.5;
    -webkit-text-size-adjust: 100%;
    tab-size: 4;
    font-family: var(--default-font-family, ui-sans-serif, system-ui, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji");
    font-feature-settings: var(--default-font-feature-settings, normal);
    font-variation-settings: var(--default-font-variation-settings, normal);
    -webkit-tap-highlight-color: transparent;
  }
  hr {
    height: 0;
    color: inherit;
    border-top-width: 1px;
  }
  abbr:where([title]) {
    -webkit-text-decoration: underline dotted;
    text-decoration: underline dotted;
  }
  h1, h2, h3, h4, h5, h6 {
    font-size: inherit;
    font-weight: inherit;
  }
  a {
    color: inherit;
    -webkit-text-decoration: inherit;
    text-decoration: inherit;
  }
  b, strong {
    font-weight: bolder;
  }
  code, kbd, samp, pre {
    font-family: var(--default-mono-font-family, ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono", "Courier New", monospace);
    font-feature-settings: var(--default-mono-font-feature-settings, normal);
    font-variation-settings: var(--default-mono-font-variation-settings, normal);
    font-size: 1em;
  }
  small {
    font-size: 80%;
  }
  sub, sup {
    font-size: 75%;
    line-height: 0;
    position: relative;
    vertical-align: baseline;
  }
  sub {
    bottom: -0.25em;
  }
  sup {
    top: -0.5em;
  }
  table {
    text-indent: 0;
    border-color: inherit;
    border-collapse: collapse;
  }
  :-moz-focusring {
    outline: auto;
  }
  progress {
    vertical-align: baseline;
  }
  summary {
    display: list-item;
  }
  ol, ul, menu {
    list-style: none;
  }
  img, svg, video, canvas, audio, iframe, embed, object {
    display: block;
    vertical-align: middle;
  }
  img, video {
    max-width: 100%;
    height: auto;
  }
  button, input, select, optgroup, textarea, ::file-selector-button {
    font: inherit;
    font-feature-settings: inherit;
    font-variation-settings: inherit;
    letter-spacing: inherit;
    color: inherit;
    border-radius: 0;
    background-color: transparent;
    opacity: 1;
  }
  :where(select:is([multiple], [size])) optgroup {
    font-weight: bolder;
  }
  :where(select:is([multiple], [size])) optgroup option {
    padding-inline-start: 20px;
  }
  ::file-selector-button {
    margin-inline-end: 4px;
  }
  ::placeholder {
    opacity: 1;
  }
  @supports (not (-webkit-appearance: -apple-pay-button))  or (contain-intrinsic-size: 1px) {
    ::placeholder {
      color: currentcolor;
      @supports (color: color-mix(in lab, red, red)) {
        color: color-mix(in oklab, currentcolor 50%, transparent);
      }
    }
  }
  textarea {
    resize: vertical;
  }
  ::-webkit-search-decoration {
    -webkit-appearance: none;
  }
  ::-webkit-date-and-time-value {
    min-height: 1lh;
    text-align: inherit;
  }
  ::-webkit-datetime-edit {
    display: inline-flex;
  }
  ::-webkit-datetime-edit-fields-wrapper {
    padding: 0;
  }
  ::-webkit-datetime-edit, ::-webkit-datetime-edit-year-field, ::-webkit-datetime-edit-month-field, ::-webkit-datetime-edit-day-field, ::-webkit-datetime-edit-hour-field, ::-webkit-datetime-edit-minute-field, ::-webkit-datetime-edit-second-field, ::-webkit-datetime-edit-millisecond-field, ::-webkit-datetime-edit-meridiem-field {
    padding-block: 0;
  }
  ::-webkit-calendar-picker-indicator {
    line-height: 1;
  }
  :-moz-ui-invalid {
    box-shadow: none;
  }
  button, input:where([type="button"], [type="reset"], [type="submit"]), ::file-selector-button {
    appearance: button;
  }
  ::-webkit-inner-spin-button, ::-webkit-outer-spin-button {
    height: auto;
  }
  [hidden]:where(:not([hidden="until-found"])) {
    display: none !important;
  }
}
@layer utilities {
  .\@container {
    container-type: inline-size;
  }
  .cs-cq {
    container-type: inline-size;
  }
  .cs-glass-noise {
    position: relative;
    isolation: isolate;
    &::after {
      content: "";
      position: absolute;
      inset: 0;
      pointer-events: none;
      mix-blend-mode: overlay;
      opacity: .07;
      background-image: var(--cs-glass-noise-img, none);
      background-size: 200px 200px;
      z-index: 1;
    }
  }
  .cs-glass-gloss-right {
    position: relative;
    &::before {
      content: "";
      position: absolute;
      top: 0;
      bottom: 0;
      right: 0;
      width: 15%;
      background: linear-gradient(to left, rgba(255,255,255,0.35), transparent);
      pointer-events: none;
      z-index: 2;
      mix-blend-mode: soft-light;
    }
  }
  .cs-glass-gloss-top {
    position: relative;
    &::before {
      content: "";
      position: absolute;
      top: 0;
      left: 0;
      right: 0;
      height: 20%;
      background: linear-gradient(to bottom, rgba(255,255,255,0.4), transparent);
      border-top-left-radius: inherit;
      border-top-right-radius: inherit;
      pointer-events: none;
      z-index: 2;
      mix-blend-mode: soft-light;
    }
  }
  .cs-glass-gloss-left {
    position: relative;
    &::before {
      content: "";
      position: absolute;
      top: 0;
      bottom: 0;
      left: 0;
      width: 15%;
      background: linear-gradient(to right, rgba(255,255,255,0.35), transparent);
      pointer-events: none;
      z-index: 2;
      mix-blend-mode: soft-light;
    }
  }
  .cs-glass-gloss-bottom {
    position: relative;
    &::before {
      content: "";
      position: absolute;
      bottom: 0;
      left: 0;
      right: 0;
      height: 20%;
      background: linear-gradient(to top, rgba(255,255,255,0.3), transparent);
      pointer-events: none;
      z-index: 2;
      mix-blend-mode: soft-light;
    }
  }
  .cs-orb {
    border-radius: 50%;
    filter: blur(1px);
    opacity: .7;
    pointer-events: none;
    position: relative;
    z-index: var(--cs-z-orb);
    &[data-size~="responsive"] {
      @container (min-width: 480px) {
        width: 120px;
        height: 120px;
      }
      @container (min-width: 768px) {
        width: 180px;
        height: 180px;
      }
      @container (min-width: 1024px) {
        width: 240px;
        height: 240px;
      }
    }
  }
  .cs-glass-disabled {
    opacity: .6;
    filter: grayscale(20%);
    pointer-events: none;
  }
  .pointer-events-none {
    pointer-events: none;
  }
  .cs-drawer-backdrop {
    position: fixed;
    top: 0;
    left: 0;
    z-index: calc(var(--cs-z-drawer) - 1);
    width: 100%;
    height: 100%;
    background-color: var(--cs-backdrop-bg);
    opacity: 0;
    visibility: hidden;
    transition: opacity var(--cs-transition-fast) var(--cs-ease-out), visibility var(--cs-transition-fast) var(--cs-ease-out);
  }
  .cs-drawer {
    &[open] ~ .cs-drawer-backdrop, &.cs-is-open ~ .cs-drawer-backdrop {
      opacity: 1;
      visibility: visible;
    }
  }
  .visible {
    visibility: visible;
  }
  .cs-glass-skeleton {
    position: relative;
    overflow: hidden;
    background: var(--cs-glass-bg-light);
    border: 1px solid var(--cs-glass-border-medium);
    border-radius: var(--cs-glass-radius);
    min-height: 2rem;
    isolation: isolate;
    backdrop-filter: var(--cs-glass-blur-sm);
    -webkit-backdrop-filter: var(--cs-glass-blur-sm);
    &::after {
      content: "";
      position: absolute;
      inset: 0;
      background: linear-gradient(90deg, transparent, rgba(255,255,255,0.2), transparent);
      animation: glassSkeletonShimmer 1.2s infinite;
    }
  }
  .cs-drawer {
    position: fixed;
    top: 0;
    left: 0;
    z-index: var(--cs-z-drawer);
    display: flex;
    flex-direction: column;
    width: 100%;
    height: 100%;
    max-width: 320px;
    background-color: var(--cs-color-bg);
    box-shadow: var(--cs-shadow-xl);
    transform: translateX(-100%);
    transition: transform var(--cs-transition-fast) var(--cs-ease-out);
    &[open], &.cs-is-open {
      transform: translateX(0);
    }
    &.cs-drawer--right {
      left: auto;
      right: 0;
      transform: translateX(100%);
      &[open], &.cs-is-open {
        transform: translateX(0);
      }
    }
  }
  .cs-card-hero {
    background: linear-gradient(135deg, var(--cs-elev1), var(--cs-elev2));
    border: 1px solid var(--cs-border);
    border-radius: var(--cs-radius-lg);
    padding: var(--cs-space-8);
    text-align: center;
    position: relative;
    overflow: hidden;
    &::before {
      content: '';
      position: absolute;
      top: 0;
      left: 0;
      right: 0;
      height: 4px;
      background: linear-gradient(90deg, var(--cs-brand), var(--cs-success), var(--cs-info));
    }
  }
  .cs-btn-ripple {
    position: relative;
    overflow: hidden;
    &::after {
      content: "";
      position: absolute;
      top: 50%;
      left: 50%;
      width: 0;
      height: 0;
      border-radius: 50%;
      background: var(--cs-ripple-color, currentColor);
      @supports (color: color-mix(in lab, red, red)) {
        background: color-mix(in srgb, var(--cs-ripple-color, currentColor) 20%, transparent);
      }
      transform: translate(-50%, -50%);
      animation: csRippleSpread 0.6s ease-out;
    }
  }
  .cs-glass-sticky {
    position: sticky;
    top: 0;
  }
  .cs-sticky {
    position: sticky;
    top: 0;
  }
  .cs-nav-tabs {
    display: flex;
    flex-wrap: wrap;
    border-bottom: 1px solid var(--cs-color-border);
    & .cs-nav-list {
      display: flex;
      flex-wrap: wrap;
      margin: 0;
      padding: 0;
      list-style: none;
    }
    & .cs-nav-item {
      display: flex;
      margin-bottom: -1px;
    }
    & .cs-nav-link {
      display: inline-block;
      padding: var(--cs-space-3) var(--cs-space-4);
      color: var(--cs-color-text-secondary);
      text-decoration: none;
      font-weight: 500;
      font-size: 0.875rem;
      border: 1px solid transparent;
      border-bottom: none;
      border-top-left-radius: var(--cs-radius-md);
      border-top-right-radius: var(--cs-radius-md);
      transition: all var(--cs-transition-fast) var(--cs-ease-out);
      white-space: nowrap;
      position: relative;
      &:hover {
        color: var(--cs-color-text);
        border-color: var(--cs-color-border-light);
        background-color: var(--cs-color-bg-hover);
      }
    }
    & .cs-nav-item.cs-nav-item--active .cs-nav-link {
      color: var(--cs-color-primary);
      background-color: var(--cs-color-bg);
      border-color: var(--cs-color-border) var(--cs-color-border) var(--cs-color-bg);
      &::after {
        content: '';
        position: absolute;
        bottom: -1px;
        left: 0;
        right: 0;
        height: 2px;
        background-color: var(--cs-color-primary);
      }
    }
  }
  .cs-nav-underline-in {
    position: relative;
    &::after {
      content: "";
      position: absolute;
      left: 50%;
      bottom: -2px;
      width: var(--cs-underline-w, 0%);
      height: var(--cs-underline-h, 2px);
      background: currentColor;
      border-radius: 999px;
      transform: translateX(-50%);
      transition: width var(--cs-anim-duration-sm) var(--cs-anim-ease-decelerate);
    }
    &:hover::after {
      --cs-underline-w: 100%;
    }
  }
  .cs-navbar {
    position: relative;
    z-index: var(--cs-z-nav);
    display: flex;
    align-items: center;
    justify-content: space-between;
    gap: var(--cs-space-2);
    padding: var(--cs-space-2) var(--cs-space-4);
    background-color: var(--cs-color-bg);
    border-bottom: 1px solid var(--cs-color-border);
    &.cs-navbar--acrylic {
      background-color: var(--cs-acrylic-bg);
      border-bottom: 1px solid var(--cs-acrylic-border);
    }
    @supports ((-webkit-backdrop-filter: blur(6px)) or (backdrop-filter: blur(6px))) {
      &.cs-navbar--acrylic {
        -webkit-backdrop-filter: blur(6px);
        backdrop-filter: blur(6px);
      }
    }
  }
  .cs-z-0 {
    z-index: var(--cs-z-0);
    position: relative;
  }
  .cs-z-0 {
    z-index: var(--cs-z-0);
    position: relative;
  }
  .cs-z-1 {
    z-index: var(--cs-z-1);
    position: relative;
  }
  .cs-z-1 {
    z-index: var(--cs-z-1);
    position: relative;
  }
  .cs-z-10 {
    z-index: var(--cs-z-10);
    position: relative;
  }
  .cs-z-10 {
    z-index: var(--cs-z-10);
    position: relative;
  }
  .cs-z-20 {
    z-index: var(--cs-z-20);
    position: relative;
  }
  .cs-z-20 {
    z-index: var(--cs-z-20);
    position: relative;
  }
  .cs-z-30 {
    z-index: var(--cs-z-30);
    position: relative;
  }
  .cs-z-30 {
    z-index: var(--cs-z-30);
    position: relative;
  }
  .cs-z-40 {
    z-index: var(--cs-z-40);
    position: relative;
  }
  .cs-z-40 {
    z-index: var(--cs-z-40);
    position: relative;
  }
  .cs-z-50 {
    z-index: var(--cs-z-50);
    position: relative;
  }
  .cs-z-50 {
    z-index: var(--cs-z-50);
    position: relative;
  }
  .cs-z-60 {
    z-index: var(--cs-z-60);
    position: relative;
  }
  .cs-z-60 {
    z-index: var(--cs-z-60);
    position: relative;
  }
  .cs-z-70 {
    z-index: var(--cs-z-70);
    position: relative;
  }
  .cs-z-70 {
    z-index: var(--cs-z-70);
    position: relative;
  }
  .cs-z-80 {
    z-index: var(--cs-z-80);
    position: relative;
  }
  .cs-z-80 {
    z-index: var(--cs-z-80);
    position: relative;
  }
  .cs-z-90 {
    z-index: var(--cs-z-90);
    position: relative;
  }
  .cs-z-90 {
    z-index: var(--cs-z-90);
    position: relative;
  }
  .cs-z-100 {
    z-index: var(--cs-z-100);
    position: relative;
  }
  .cs-z-100 {
    z-index: var(--cs-z-100);
    position: relative;
  }
  .cs-z-200 {
    z-index: var(--cs-z-200);
    position: relative;
  }
  .cs-z-200 {
    z-index: var(--cs-z-200);
    position: relative;
  }
  .cs-z-300 {
    z-index: var(--cs-z-300);
    position: relative;
  }
  .cs-z-300 {
    z-index: var(--cs-z-300);
    position: relative;
  }
  .cs-z-400 {
    z-index: var(--cs-z-400);
    position: relative;
  }
  .cs-z-400 {
    z-index: var(--cs-z-400);
    position: relative;
  }
  .cs-z-500 {
    z-index: var(--cs-z-500);
    position: relative;
  }
  .cs-z-500 {
    z-index: var(--cs-z-500);
    position: relative;
  }
  .cs-z-600 {
    z-index: var(--cs-z-600);
    position: relative;
  }
  .cs-z-600 {
    z-index: var(--cs-z-600);
    position: relative;
  }
  .cs-z-700 {
    z-index: var(--cs-z-700);
    position: relative;
  }
  .cs-z-700 {
    z-index: var(--cs-z-700);
    position: relative;
  }
  .cs-z-800 {
    z-index: var(--cs-z-800);
    position: relative;
  }
  .cs-z-800 {
    z-index: var(--cs-z-800);
    position: relative;
  }
  .cs-z-900 {
    z-index: var(--cs-z-900);
    position: relative;
  }
  .cs-z-900 {
    z-index: var(--cs-z-900);
    position: relative;
  }
  .cs-z-999 {
    z-index: var(--cs-z-999);
    position: relative;
  }
  .cs-z-999 {
    z-index: var(--cs-z-999);
    position: relative;
  }
  .cs-z-9999 {
    z-index: var(--cs-z-9999);
    position: relative;
  }
  .cs-z-9999 {
    z-index: var(--cs-z-9999);
    position: relative;
  }
  .cs-z-base {
    z-index: var(--cs-z-base);
    position: relative;
  }
  .cs-z-base {
    z-index: var(--cs-z-base);
    position: relative;
  }
  .cs-z-max {
    z-index: var(--cs-z-max);
    position: relative;
  }
  .cs-z-max {
    z-index: var(--cs-z-max);
    position: relative;
  }
  .cs-z-modal {
    z-index: var(--cs-z-modal);
    position: relative;
  }
  .cs-z-modal {
    z-index: var(--cs-z-modal);
    position: relative;
  }
  .cs-z-popover {
    z-index: var(--cs-z-popover);
    position: relative;
  }
  .cs-z-popover {
    z-index: var(--cs-z-popover);
    position: relative;
  }
  .cs-z-toast {
    z-index: var(--cs-z-toast);
    position: relative;
  }
  .cs-z-toast {
    z-index: var(--cs-z-toast);
    position: relative;
  }
  .cs-z-tooltip {
    z-index: var(--cs-z-tooltip);
    position: relative;
  }
  .cs-z-tooltip {
    z-index: var(--cs-z-tooltip);
    position: relative;
  }
  .cs-sr-only {
    position: absolute;
    width: 1px;
    height: 1px;
    padding: 0;
    margin: -1px;
    overflow: hidden;
    clip: rect(0, 0, 0, 0);
    white-space: nowrap;
    border: 0;
  }
  .cs-sr-only {
    position: absolute;
    width: 1px;
    height: 1px;
    padding: 0;
    margin: -1px;
    overflow: hidden;
    clip: rect(0, 0, 0, 0);
    white-space: nowrap;
    border: 0;
  }
  .cs-card-feature {
    display: grid;
    grid-template-rows: auto auto 1fr;
    gap: var(--cs-card-space-lg, 1.5rem);
    background: var(--cs-card-bg, #ffffff);
    border: 1px solid var(--cs-card-border, #e5e7eb);
    border-radius: var(--cs-card-radius-lg, 12px);
    box-shadow: var(--cs-card-shadow-sm, 0 1px 2px rgba(0, 0, 0, 0.05));
    padding: var(--cs-card-space-xl, 2rem);
    text-align: center;
    position: relative;
    transition: var(--cs-card-transition, all 0.2s ease);
    &:hover {
      transform: translateY(var(--cs-card-hover-lift, -2px));
      box-shadow: var(--cs-card-shadow-md, 0 4px 6px rgba(0, 0, 0, 0.07));
    }
  }
  .cs-card-product {
    display: grid;
    grid-template-rows: auto 1fr auto;
    background: var(--cs-surface, #ffffff);
    border: 1px solid var(--cs-border, #e5e7eb);
    border-radius: var(--cs-radius-lg, 12px);
    box-shadow: var(--cs-shadow-1, 0 1px 3px rgba(0, 0, 0, 0.1));
    overflow: hidden;
    transition: all var(--cs-transition, 0.2s ease);
    position: relative;
    &:hover {
      transform: translateY(-2px);
      box-shadow: var(--cs-shadow-2, 0 4px 6px rgba(0, 0, 0, 0.1));
    }
  }
  .cs-card-pricing {
    display: grid;
    grid-template-rows: auto 1fr auto;
    background: var(--cs-surface);
    border: 2px solid var(--cs-border);
    border-radius: var(--cs-radius-lg);
    box-shadow: var(--cs-shadow-1);
    padding: var(--cs-space-6);
    text-align: center;
    position: relative;
    transition: all var(--cs-transition);
    &:hover {
      transform: translateY(-4px);
      box-shadow: var(--cs-shadow-2);
    }
  }
  .cs-progress {
    width: 100%;
    height: 8px;
    background: var(--cs-border);
    border-radius: var(--cs-radius);
    overflow: hidden;
    position: relative;
  }
  .cs-card-product {
    background: var(--cs-elev1);
    border: 1px solid var(--cs-border);
    border-radius: var(--cs-radius-lg);
    padding: var(--cs-space-6);
    transition: all var(--cs-transition);
    position: relative;
    overflow: hidden;
    &:hover {
      transform: translateY(-2px);
      box-shadow: var(--cs-shadow-2);
      border-color: var(--cs-brand);
    }
  }
  .cs-shimmer {
    position: relative;
    overflow: hidden;
    background: linear-gradient(90deg, var(--cs-elev1), var(--cs-elev2), var(--cs-elev1));
    background-size: 200% 100%;
    animation: csShimmer 2s linear infinite;
  }
  .cs-skeleton-shimmer {
    position: relative;
    overflow: hidden;
    background: linear-gradient( 90deg, transparent, currentColor, transparent );
    @supports (color: color-mix(in lab, red, red)) {
      background: linear-gradient( 90deg, transparent, color-mix(in srgb, currentColor 10%, transparent), transparent );
    }
    background-size: 200% 100%;
    animation: csSkeletonShimmer 1.5s infinite;
  }
  .cs-glass-toast {
    background: var(--cs-glass-bg-light);
    border: 1px solid var(--cs-glass-border-medium);
    border-radius: 0.75rem;
    padding: 1rem 1.5rem;
    box-shadow: 0 8px 32px var(--cs-glass-shadow-strong);
    position: relative;
    overflow: hidden;
    backdrop-filter: var(--cs-glass-blur);
    -webkit-backdrop-filter: var(--cs-glass-blur);
  }
  .absolute {
    position: absolute;
  }
  .cs-orb-absolute {
    position: absolute;
  }
  .cs-orb-fixed {
    position: fixed;
  }
  .fixed {
    position: fixed;
  }
  .relative {
    position: relative;
  }
  .sticky {
    position: sticky;
  }
  .inset-0 {
    inset: calc(var(--spacing) * 0);
  }
  .top-0 {
    top: calc(var(--spacing) * 0);
  }
  .top-1\/2 {
    top: calc(1/2 * 100%);
  }
  .top-10 {
    top: calc(var(--spacing) * 10);
  }
  .top-20 {
    top: calc(var(--spacing) * 20);
  }
  .top-32 {
    top: calc(var(--spacing) * 32);
  }
  .right-0 {
    right: calc(var(--spacing) * 0);
  }
  .right-1\/3 {
    right: calc(1/3 * 100%);
  }
  .right-1\/4 {
    right: calc(1/4 * 100%);
  }
  .right-10 {
    right: calc(var(--spacing) * 10);
  }
  .right-20 {
    right: calc(var(--spacing) * 20);
  }
  .bottom-0 {
    bottom: calc(var(--spacing) * 0);
  }
  .bottom-10 {
    bottom: calc(var(--spacing) * 10);
  }
  .bottom-20 {
    bottom: calc(var(--spacing) * 20);
  }
  .left-0 {
    left: calc(var(--spacing) * 0);
  }
  .left-1\/2 {
    left: calc(1/2 * 100%);
  }
  .left-1\/3 {
    left: calc(1/3 * 100%);
  }
  .left-1\/4 {
    left: calc(1/4 * 100%);
  }
  .left-10 {
    left: calc(var(--spacing) * 10);
  }
  .cs-glass-isolate {
    isolation: isolate;
  }
  .cs-glass-dropdown {
    background: var(--cs-glass-bg-light);
    border: 1px solid var(--cs-glass-border-medium);
    border-radius: 0.75rem;
    box-shadow: var(--cs-glass-shadow-def);
    padding: 0.5rem;
    min-width: 12rem;
    z-index: 50;
    backdrop-filter: var(--cs-glass-blur);
    -webkit-backdrop-filter: var(--cs-glass-blur);
  }
  .cs-glass-tooltip {
    background: var(--cs-glass-tooltip-bg);
    border: 1px solid var(--cs-glass-border-medium);
    border-radius: 0.5rem;
    padding: 0.5rem 0.75rem;
    box-shadow: 0 4px 16px var(--cs-glass-shadow-xl);
    font-size: 0.875rem;
    color: white;
    white-space: nowrap;
    z-index: 50;
    backdrop-filter: var(--cs-glass-blur-sm);
    -webkit-backdrop-filter: var(--cs-glass-blur-sm);
  }
  .cs-glass-elev-1 {
    z-index: 10;
  }
  .cs-glass-elev-2 {
    z-index: 20;
  }
  .cs-glass-elev-3 {
    z-index: 30;
  }
  .cs-glass-elev-4 {
    z-index: 40;
  }
  .cs-glass-elev-5 {
    z-index: 50;
  }
  .z-10 {
    z-index: 10;
  }
  .z-50 {
    z-index: 50;
  }
  .cs-col-4 {
    grid-column: span 4;
  }
  .cs-col-8 {
    grid-column: span 8;
  }
  .container {
    width: 100%;
    @media (width >= 40rem) {
      max-width: 40rem;
    }
    @media (width >= 48rem) {
      max-width: 48rem;
    }
    @media (width >= 64rem) {
      max-width: 64rem;
    }
    @media (width >= 80rem) {
      max-width: 80rem;
    }
    @media (width >= 96rem) {
      max-width: 96rem;
    }
  }
  .cs-prose {
    max-width: 65ch;
    line-height: var(--cs-leading-relaxed);
    & h1, & h2, & h3 {
      text-wrap: var(--cs-text-balance);
      margin-top: 2em;
      margin-bottom: 1em;
    }
    & p {
      margin-bottom: 1.25em;
    }
    & ul, & ol {
      padding-left: 2em;
      margin-bottom: 1.25em;
    }
    & blockquote {
      border-left: 4px solid var(--cs-border);
      padding-left: 1em;
      font-style: italic;
      margin: 1.5em 0;
    }
  }
  .cs-m-1 {
    margin: var(--cs-space-1);
  }
  .cs-m-2 {
    margin: var(--cs-space-2);
  }
  .cs-m-3 {
    margin: var(--cs-space-3);
  }
  .cs-m-4 {
    margin: var(--cs-space-4);
  }
  .cs-m-6 {
    margin: var(--cs-space-6);
  }
  .cs-m-8 {
    margin: var(--cs-space-8);
  }
  .cs-bleed-x {
    margin-inline: calc(var(--cs-page-pad) * -1);
    @container (min-width: 960px) {
      margin-inline: calc((var(--cs-page-pad) + var(--cs-space-3)) * -1);
    }
  }
  .mx-4 {
    margin-inline: calc(var(--spacing) * 4);
  }
  .mx-auto {
    margin-inline: auto;
  }
  .mt-2 {
    margin-top: calc(var(--spacing) * 2);
  }
  .mt-4 {
    margin-top: calc(var(--spacing) * 4);
  }
  .mt-6 {
    margin-top: calc(var(--spacing) * 6);
  }
  .mt-8 {
    margin-top: calc(var(--spacing) * 8);
  }
  .mt-16 {
    margin-top: calc(var(--spacing) * 16);
  }
  .cs-container-fluid {
    width: 100%;
    padding-left: var(--cs-page-pad);
    padding-right: var(--cs-page-pad);
    margin-left: auto;
    margin-right: auto;
    max-width: none;
    background-color: var(--cs-surface, #14161a);
    color: var(--cs-text, #eef1f6);
    @container (min-width: 768px) {
      padding-left: calc(var(--cs-page-pad) + var(--cs-space-2));
      padding-right: calc(var(--cs-page-pad) + var(--cs-space-2));
    }
    @container (min-width: 1200px) {
      max-width: var(--cs-page-max);
    }
  }
  .cs-container-fluid {
    width: 100%;
    padding-left: var(--cs-page-pad);
    padding-right: var(--cs-page-pad);
    margin-left: auto;
    margin-right: auto;
    max-width: none;
    background-color: var(--cs-surface, #14161a);
    color: var(--cs-text, #eef1f6);
    @media (min-width: 768px) {
      padding-left: calc(var(--cs-page-pad) + var(--cs-space-2));
      padding-right: calc(var(--cs-page-pad) + var(--cs-space-2));
    }
    @media (min-width: 1200px) {
      max-width: var(--cs-page-max);
    }
  }
  .cs-navbar-brand {
    display: inline-block;
    padding-top: calc(0.3125rem * var(--cs-density));
    padding-bottom: calc(0.3125rem * var(--cs-density));
    margin-right: var(--cs-space-4);
    font-size: 1.25rem;
    line-height: inherit;
    white-space: nowrap;
    text-decoration: none;
    color: inherit;
  }
  .cs-label {
    display: block;
    font-size: var(--cs-fs-sm);
    font-weight: 500;
    color: var(--cs-text);
    margin-bottom: var(--cs-space-2);
  }
  .mb-2 {
    margin-bottom: calc(var(--spacing) * 2);
  }
  .mb-3 {
    margin-bottom: calc(var(--spacing) * 3);
  }
  .mb-4 {
    margin-bottom: calc(var(--spacing) * 4);
  }
  .mb-6 {
    margin-bottom: calc(var(--spacing) * 6);
  }
  .mb-8 {
    margin-bottom: calc(var(--spacing) * 8);
  }
  .mb-12 {
    margin-bottom: calc(var(--spacing) * 12);
  }
  .mb-20 {
    margin-bottom: calc(var(--spacing) * 20);
  }
  .cs-textarea {
    display: block;
    width: 100%;
    padding: var(--cs-space-3) var(--cs-space-4);
    font-size: var(--cs-fs-md);
    line-height: var(--cs-line);
    color: var(--cs-text);
    background-color: var(--cs-form-bg);
    border: 1px solid var(--cs-form-border);
    border-radius: var(--cs-form-radius);
    box-shadow: var(--cs-form-shadow);
    transition: all var(--cs-transition);
    resize: vertical;
    min-height: calc(var(--cs-space-8) * 2);
    &:focus {
      outline: none;
      border-color: var(--cs-form-focus);
      box-shadow: 0 0 0 3px color-mix(in srgb, #4f7cff 15%, transparent);
      @supports (color: color-mix(in lab, red, red)) {
        box-shadow: 0 0 0 3px color-mix(in srgb, var(--cs-form-focus) 15%, transparent);
      }
    }
    &::placeholder {
      color: var(--cs-text-muted);
      opacity: 1;
    }
  }
  .cs-btn {
    display: inline-flex;
    align-items: center;
    justify-content: center;
    padding: var(--cs-space-2) var(--cs-space-4);
    border-radius: var(--cs-radius);
    font-weight: 500;
    text-decoration: none;
    transition: var(--cs-transition);
    cursor: pointer;
    border: 0;
    min-height: 44px;
    min-width: 44px;
  }
  .cs-input {
    display: block;
    width: 100%;
    padding: var(--cs-space-3) var(--cs-space-4);
    font-size: var(--cs-fs-md);
    line-height: var(--cs-line);
    color: var(--cs-text);
    background-color: var(--cs-form-bg);
    border: 1px solid var(--cs-form-border);
    border-radius: var(--cs-form-radius);
    box-shadow: var(--cs-form-shadow);
    transition: all var(--cs-transition);
    &:focus {
      outline: none;
      border-color: var(--cs-form-focus);
      box-shadow: 0 0 0 3px color-mix(in srgb, #4f7cff 15%, transparent);
      @supports (color: color-mix(in lab, red, red)) {
        box-shadow: 0 0 0 3px color-mix(in srgb, var(--cs-form-focus) 15%, transparent);
      }
    }
    &::placeholder {
      color: var(--cs-text-muted);
      opacity: 1;
    }
  }
  .cs-tab-content {
    display: none;
    padding: var(--cs-space-4);
    animation: cs-tab-switch var(--cs-transition-base) var(--cs-ease-out);
  }
  .cs-grid-12 {
    display: grid;
    grid-template-columns: repeat(12, 1fr);
    gap: var(--cs-space-4);
  }
  .cs-grid-auto-fit-lg {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(400px, 1fr));
    gap: var(--cs-space-4);
  }
  .cs-grid-auto-fit-md {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
    gap: var(--cs-space-4);
  }
  .cs-grid-auto-fit-sm {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
    gap: var(--cs-space-4);
  }
  .cs-grid-cols-2 {
    display: grid;
    grid-template-columns: repeat(2, 1fr);
    gap: var(--cs-space-4);
  }
  .cs-grid-cols-3 {
    display: grid;
    grid-template-columns: repeat(3, 1fr);
    gap: var(--cs-space-4);
  }
  .cs-grid-cols-4 {
    display: grid;
    grid-template-columns: repeat(4, 1fr);
    gap: var(--cs-space-4);
  }
  .cs-grid-cols-6 {
    display: grid;
    grid-template-columns: repeat(6, 1fr);
    gap: var(--cs-space-4);
  }
  .cs-grid-cols-8 {
    display: grid;
    grid-template-columns: repeat(8, 1fr);
    gap: var(--cs-space-4);
  }
  .cs-grid-cols-9 {
    display: grid;
    grid-template-columns: repeat(9, 1fr);
    gap: var(--cs-space-4);
  }
  .cs-grid-cols-12 {
    display: grid;
    grid-template-columns: repeat(12, 1fr);
    gap: var(--cs-space-4);
  }
  .cs-grid-fit {
    display: grid;
    gap: var(--cs-space-3);
    grid-template-columns: repeat(auto-fit, minmax(min(240px, 100%), 1fr));
  }
  .cs-cluster {
    display: flex;
    flex-wrap: wrap;
    gap: var(--cs-space-2);
    align-items: center;
  }
  .cs-center {
    display: grid;
    place-items: center;
  }
  .cs-badge {
    display: inline-flex;
    align-items: center;
    gap: var(--cs-space-1);
    padding: var(--cs-space-1) var(--cs-space-2);
    border-radius: var(--cs-radius-sm);
    font-size: var(--cs-fs-xs);
    font-weight: 600;
    line-height: 1;
    white-space: nowrap;
  }
  .cs-card-compact {
    background: var(--cs-elev1);
    border: 1px solid var(--cs-border);
    border-radius: var(--cs-radius);
    padding: var(--cs-space-4);
    display: flex;
    align-items: center;
    gap: var(--cs-space-3);
    transition: all var(--cs-transition);
    &:hover {
      background: var(--cs-elev2);
    }
  }
  .cs-alert {
    display: flex;
    align-items: center;
    gap: var(--cs-space-3);
    padding: var(--cs-space-4);
    border: 1px solid var(--cs-border);
    border-radius: var(--cs-radius);
    background: var(--cs-surface);
  }
  .cs-stack {
    display: grid;
    gap: var(--cs-space-3);
  }
  .cs-stack-lg {
    display: grid;
    gap: var(--cs-space-6);
  }
  .cs-stack-sm {
    display: grid;
    gap: var(--cs-space-2);
  }
  .cs-scrollbar-none {
    scrollbar-width: none;
    -ms-overflow-style: none;
    &::-webkit-scrollbar {
      display: none;
    }
  }
  .block {
    display: block;
  }
  .cs-tab-content--active {
    display: block;
  }
  .flex {
    display: flex;
  }
  .grid {
    display: grid;
  }
  .hidden {
    display: none;
  }
  .inline-block {
    display: inline-block;
  }
  .cs-aspect {
    aspect-ratio: var(--cs-aspect, 16 / 9);
  }
  .cs-orb-2xl {
    width: 300px;
    height: 300px;
  }
  .cs-orb-3xl {
    width: 400px;
    height: 400px;
  }
  .cs-orb-4xl {
    width: 500px;
    height: 500px;
  }
  .cs-orb-5xl {
    width: 600px;
    height: 600px;
  }
  .cs-orb-lg {
    width: 150px;
    height: 150px;
  }
  .cs-orb-massive {
    width: 800px;
    height: 800px;
  }
  .cs-orb-md {
    width: 100px;
    height: 100px;
  }
  .cs-orb-sm {
    width: 75px;
    height: 75px;
  }
  .cs-orb-xl {
    width: 200px;
    height: 200px;
  }
  .cs-orb-xs {
    width: 50px;
    height: 50px;
  }
  .cs-progress-bar {
    height: 100%;
    background: var(--cs-brand);
    border-radius: inherit;
    transition: width var(--cs-transition);
  }
  .h-2 {
    height: calc(var(--spacing) * 2);
  }
  .h-4 {
    height: calc(var(--spacing) * 4);
  }
  .h-6 {
    height: calc(var(--spacing) * 6);
  }
  .h-8 {
    height: calc(var(--spacing) * 8);
  }
  .h-20 {
    height: calc(var(--spacing) * 20);
  }
  .h-24 {
    height: calc(var(--spacing) * 24);
  }
  .h-32 {
    height: calc(var(--spacing) * 32);
  }
  .h-40 {
    height: calc(var(--spacing) * 40);
  }
  .h-48 {
    height: calc(var(--spacing) * 48);
  }
  .h-64 {
    height: calc(var(--spacing) * 64);
  }
  .h-72 {
    height: calc(var(--spacing) * 72);
  }
  .h-80 {
    height: calc(var(--spacing) * 80);
  }
  .h-96 {
    height: calc(var(--spacing) * 96);
  }
  .h-full {
    height: 100%;
  }
  .cs-glass-button {
    background: var(--cs-glass-bg-light);
    border: 1px solid var(--cs-glass-border-medium);
    border-radius: 12px;
    padding: 0.75rem 1.5rem;
    transition: all var(--cs-glass-transition) ease;
    cursor: pointer;
    min-height: 2.5rem;
    min-width: 2.5rem;
    -webkit-tap-highlight-color: transparent;
    backdrop-filter: var(--cs-glass-blur);
    -webkit-backdrop-filter: var(--cs-glass-blur);
    &:hover {
      background: var(--cs-glass-bg-hover);
      transform: translateY(-1px);
      box-shadow: 0 8px 16px var(--cs-glass-shadow-medium);
    }
    &:focus, &:focus-visible {
      outline: 2px solid var(--cs-glass-focus-ring);
      outline-offset: 2px;
    }
    &:active {
      transform: translateY(0);
      box-shadow: 0 4px 8px var(--cs-glass-shadow-medium);
    }
  }
  .cs-btn-lg {
    padding: var(--cs-space-3) var(--cs-space-6);
    font-size: var(--cs-fs-lg);
    min-height: 52px;
    min-width: 52px;
  }
  .cs-btn-sm {
    padding: var(--cs-space-1) var(--cs-space-3);
    font-size: var(--cs-fs-sm);
    min-height: 36px;
    min-width: 36px;
  }
  .min-h-\[300px\] {
    min-height: 300px;
  }
  .min-h-screen {
    min-height: 100vh;
  }
  .w-2 {
    width: calc(var(--spacing) * 2);
  }
  .w-6 {
    width: calc(var(--spacing) * 6);
  }
  .w-8 {
    width: calc(var(--spacing) * 8);
  }
  .w-16 {
    width: calc(var(--spacing) * 16);
  }
  .w-20 {
    width: calc(var(--spacing) * 20);
  }
  .w-40 {
    width: calc(var(--spacing) * 40);
  }
  .w-48 {
    width: calc(var(--spacing) * 48);
  }
  .w-56 {
    width: calc(var(--spacing) * 56);
  }
  .w-64 {
    width: calc(var(--spacing) * 64);
  }
  .w-72 {
    width: calc(var(--spacing) * 72);
  }
  .w-80 {
    width: calc(var(--spacing) * 80);
  }
  .w-96 {
    width: calc(var(--spacing) * 96);
  }
  .w-full {
    width: 100%;
  }
  .max-w-2xl {
    max-width: var(--container-2xl);
  }
  .max-w-4xl {
    max-width: var(--container-4xl);
  }
  .max-w-sm {
    max-width: var(--container-sm);
  }
  .cs-drawer-body {
    flex: 1;
    padding: var(--cs-space-4);
    overflow-y: auto;
  }
  .cs-origin-bottom {
    transform-origin: bottom;
  }
  .cs-origin-center {
    transform-origin: center;
  }
  .cs-origin-left {
    transform-origin: left;
  }
  .cs-origin-right {
    transform-origin: right;
  }
  .cs-origin-top {
    transform-origin: top;
  }
  .-rotate-6 {
    rotate: calc(6deg * -1);
  }
  .rotate-12 {
    rotate: 12deg;
  }
  .cs-scroll-reveal {
    opacity: 0;
    transform: translateY(20px);
    transition: opacity 0.6s ease-out, transform 0.6s ease-out;
    @supports (animation-timeline: view()) {
      animation: csScrollReveal 1s ease-out;
      animation-timeline: view();
      animation-range: entry 0% entry 100%;
    }
  }
  .cs-scroll-scale {
    transform: scale(0.8);
    transition: transform 0.6s ease-out;
    @supports (animation-timeline: view()) {
      animation: csScrollScale 1s ease-out;
      animation-timeline: view();
      animation-range: entry 0% entry 100%;
    }
  }
  .cs-glass-card {
    background: var(--cs-glass-bg-light);
    border: 1px solid var(--cs-glass-border-medium);
    border-radius: 20px;
    padding: 2rem;
    box-shadow: var(--cs-glass-shadow-def);
    transition: all var(--cs-glass-transition) ease;
    backdrop-filter: var(--cs-glass-blur);
    -webkit-backdrop-filter: var(--cs-glass-blur);
    &:hover {
      background: var(--cs-glass-bg-hover);
      box-shadow: 0 20px 40px var(--cs-glass-shadow-strong);
      transform: translateY(-2px);
      border: 1px solid var(--cs-glass-border-strong);
    }
    &:focus-within {
      outline: 2px solid var(--cs-glass-focus-ring);
      outline-offset: 2px;
    }
  }
  .cs-glass-card-light {
    background: var(--cs-glass-bg-medium);
    border: 1px solid var(--cs-glass-border-strong);
    border-radius: 20px;
    padding: 2rem;
    box-shadow: var(--cs-glass-shadow-def);
    transition: all var(--cs-glass-transition) ease;
    backdrop-filter: var(--cs-glass-blur);
    -webkit-backdrop-filter: var(--cs-glass-blur);
    &:hover {
      background: var(--cs-glass-bg-light-hover);
      transform: translateY(-1px);
      box-shadow: 0 12px 24px var(--cs-glass-shadow-strong);
    }
    &:focus-within {
      outline: 2px solid var(--cs-glass-focus-ring);
      outline-offset: 2px;
    }
  }
  .cs-glass-3d-hover {
    transform-style: preserve-3d;
    transition: transform 0.3s ease, box-shadow 0.3s ease;
    &:hover {
      transform: rotateX(6deg) rotateY(-4deg) scale(1.02);
      box-shadow: 0 24px 48px var(--cs-glass-shadow-xl);
    }
  }
  .transform {
    transform: var(--tw-rotate-x,) var(--tw-rotate-y,) var(--tw-rotate-z,) var(--tw-skew-x,) var(--tw-skew-y,);
  }
  .cs-skeleton {
    background: linear-gradient( 90deg, var(--cs-border) 25%, var(--cs-elev1) 50%, var(--cs-border) 75% );
    background-size: 200% 100%;
    animation: cs-shimmer 1.5s ease-in-out infinite;
    border-radius: var(--cs-radius);
  }
  .cs-progress-indeterminate {
    background: linear-gradient( 90deg, transparent, var(--cs-brand), transparent );
    background-size: 200% 100%;
    animation: cs-progress-slide 1.5s ease-in-out infinite;
  }
  .cs-fade-delayed {
    opacity: 0;
    animation: csFadeIn var(--cs-anim-duration-lg, 420ms) var(--cs-anim-ease-out, ease-out) forwards;
    animation-delay: 0.4s;
  }
  .cs-pulse {
    animation: csPulse 1.2s ease-in-out infinite;
    will-change: transform, opacity;
  }
  .cs-spinner {
    animation: cs-rotate 1s linear infinite;
    will-change: transform;
  }
  .cs-parallax-scroll {
    @supports (animation-timeline: scroll()) {
      animation: csParallaxScroll linear;
      animation-timeline: scroll();
    }
  }
  .animate-pulse {
    animation: var(--animate-pulse);
  }
  .animate-spin {
    animation: var(--animate-spin);
  }
  .cs-glass-morph-in {
    animation: glassMorphIn 0.4s ease-out both;
  }
  .cs-glass-morph-out {
    animation: glassMorphOut 0.3s ease-in both;
  }
  .cs-spin {
    animation: csSpin 1s linear infinite;
  }
  .cs-snap-both {
    scroll-snap-type: both mandatory;
  }
  .cs-snap-none {
    scroll-snap-type: none;
  }
  .cs-snap-x {
    scroll-snap-type: x mandatory;
  }
  .cs-snap-y {
    scroll-snap-type: y mandatory;
  }
  .cs-snap-center {
    scroll-snap-align: center;
  }
  .cs-snap-end {
    scroll-snap-align: end;
  }
  .cs-snap-start {
    scroll-snap-align: start;
  }
  .grid-cols-1 {
    grid-template-columns: repeat(1, minmax(0, 1fr));
  }
  .grid-cols-2 {
    grid-template-columns: repeat(2, minmax(0, 1fr));
  }
  .grid-cols-3 {
    grid-template-columns: repeat(3, minmax(0, 1fr));
  }
  .flex-wrap {
    flex-wrap: wrap;
  }
  .items-center {
    align-items: center;
  }
  .justify-between {
    justify-content: space-between;
  }
  .justify-center {
    justify-content: center;
  }
  .cs-space-1 {
    gap: var(--cs-space-1);
  }
  .cs-space-2 {
    gap: var(--cs-space-2);
  }
  .cs-space-3 {
    gap: var(--cs-space-3);
  }
  .cs-space-4 {
    gap: var(--cs-space-4);
  }
  .cs-space-6 {
    gap: var(--cs-space-6);
  }
  .cs-space-8 {
    gap: var(--cs-space-8);
  }
  .gap-1 {
    gap: calc(var(--spacing) * 1);
  }
  .gap-3 {
    gap: calc(var(--spacing) * 3);
  }
  .gap-4 {
    gap: calc(var(--spacing) * 4);
  }
  .gap-6 {
    gap: calc(var(--spacing) * 6);
  }
  .gap-8 {
    gap: calc(var(--spacing) * 8);
  }
  .space-y-2 {
    :where(& > :not(:last-child)) {
      --tw-space-y-reverse: 0;
      margin-block-start: calc(calc(var(--spacing) * 2) * var(--tw-space-y-reverse));
      margin-block-end: calc(calc(var(--spacing) * 2) * calc(1 - var(--tw-space-y-reverse)));
    }
  }
  .space-y-3 {
    :where(& > :not(:last-child)) {
      --tw-space-y-reverse: 0;
      margin-block-start: calc(calc(var(--spacing) * 3) * var(--tw-space-y-reverse));
      margin-block-end: calc(calc(var(--spacing) * 3) * calc(1 - var(--tw-space-y-reverse)));
    }
  }
  .space-y-4 {
    :where(& > :not(:last-child)) {
      --tw-space-y-reverse: 0;
      margin-block-start: calc(calc(var(--spacing) * 4) * var(--tw-space-y-reverse));
      margin-block-end: calc(calc(var(--spacing) * 4) * calc(1 - var(--tw-space-y-reverse)));
    }
  }
  .space-y-6 {
    :where(& > :not(:last-child)) {
      --tw-space-y-reverse: 0;
      margin-block-start: calc(calc(var(--spacing) * 6) * var(--tw-space-y-reverse));
      margin-block-end: calc(calc(var(--spacing) * 6) * calc(1 - var(--tw-space-y-reverse)));
    }
  }
  .space-x-2 {
    :where(& > :not(:last-child)) {
      --tw-space-x-reverse: 0;
      margin-inline-start: calc(calc(var(--spacing) * 2) * var(--tw-space-x-reverse));
      margin-inline-end: calc(calc(var(--spacing) * 2) * calc(1 - var(--tw-space-x-reverse)));
    }
  }
  .space-x-3 {
    :where(& > :not(:last-child)) {
      --tw-space-x-reverse: 0;
      margin-inline-start: calc(calc(var(--spacing) * 3) * var(--tw-space-x-reverse));
      margin-inline-end: calc(calc(var(--spacing) * 3) * calc(1 - var(--tw-space-x-reverse)));
    }
  }
  .space-x-4 {
    :where(& > :not(:last-child)) {
      --tw-space-x-reverse: 0;
      margin-inline-start: calc(calc(var(--spacing) * 4) * var(--tw-space-x-reverse));
      margin-inline-end: calc(calc(var(--spacing) * 4) * calc(1 - var(--tw-space-x-reverse)));
    }
  }
  .space-x-6 {
    :where(& > :not(:last-child)) {
      --tw-space-x-reverse: 0;
      margin-inline-start: calc(calc(var(--spacing) * 6) * var(--tw-space-x-reverse));
      margin-inline-end: calc(calc(var(--spacing) * 6) * calc(1 - var(--tw-space-x-reverse)));
    }
  }
  .overflow-hidden {
    overflow: hidden;
  }
  .cs-scroll-auto {
    scroll-behavior: auto;
  }
  .cs-scroll-smooth {
    scroll-behavior: smooth;
  }
  .cs-acrylic {
    background: var(--cs-acrylic-tint, rgba(20, 22, 26, 0.55));
    border: 1px solid var(--cs-acrylic-border, rgba(255, 255, 255, 0.06));
    border-radius: var(--cs-radius, 10px);
    box-shadow: var(--cs-shadow-2);
    -webkit-backdrop-filter: saturate(140%) blur(var(--cs-acrylic-blur, 14px));
    backdrop-filter: saturate(140%) blur(var(--cs-acrylic-blur, 14px));
    background-clip: padding-box;
    @media (max-width: 480px) {
      --cs-acrylic-blur: 8px;
      box-shadow: var(--cs-shadow-1);
    }
  }
  .cs-card {
    background: var(--cs-surface);
    border: 1px solid var(--cs-border);
    border-radius: var(--cs-radius);
    padding: var(--cs-space-4);
    box-shadow: var(--cs-shadow-1);
  }
  .cs-card-elevated {
    background: var(--cs-elev1);
    border: 1px solid var(--cs-border);
    border-radius: var(--cs-radius);
    padding: var(--cs-space-4);
    box-shadow: var(--cs-shadow-2);
  }
  .cs-glass-nav {
    background: var(--cs-glass-bg-light);
    border: 1px solid var(--cs-glass-border-medium);
    border-radius: 12px;
    box-shadow: var(--cs-glass-shadow-def);
    transition: all var(--cs-glass-transition) ease;
    backdrop-filter: var(--cs-glass-blur);
    -webkit-backdrop-filter: var(--cs-glass-blur);
  }
  .cs-glass-nav-light {
    background: var(--cs-glass-bg-medium);
    border: 1px solid var(--cs-glass-border-strong);
    border-radius: 12px;
    box-shadow: var(--cs-glass-shadow-def);
    transition: all var(--cs-glass-transition) ease;
    backdrop-filter: var(--cs-glass-blur);
    -webkit-backdrop-filter: var(--cs-glass-blur);
  }
  .cs-focus-ring-within {
    &:focus-within {
      box-shadow: 0 0 0 2px var(--cs-brand, #4f7cff), 0 0 0 6px color-mix(in srgb, #4f7cff 22%, transparent);
      @supports (color: color-mix(in lab, red, red)) {
        box-shadow: 0 0 0 2px var(--cs-brand, #4f7cff), 0 0 0 6px color-mix(in srgb, var(--cs-brand, #4f7cff) 22%, transparent);
      }
      border-radius: var(--cs-radius);
    }
  }
  .cs-focus-ring-within {
    &:focus-within {
      box-shadow: 0 0 0 2px var(--cs-brand, #4f7cff), 0 0 0 6px color-mix(in srgb, #4f7cff 22%, transparent);
      @supports (color: color-mix(in lab, red, red)) {
        box-shadow: 0 0 0 2px var(--cs-brand, #4f7cff), 0 0 0 6px color-mix(in srgb, var(--cs-brand, #4f7cff) 22%, transparent);
      }
      border-radius: var(--cs-radius);
    }
  }
  .cs-glass-rounded {
    border-radius: var(--cs-glass-radius);
  }
  .cs-glass-rounded-2xl {
    border-radius: var(--cs-glass-radius-2xl);
  }
  .cs-glass-rounded-3xl {
    border-radius: var(--cs-glass-radius-3xl);
  }
  .cs-glass-rounded-lg {
    border-radius: var(--cs-glass-radius-lg);
  }
  .cs-glass-rounded-sm {
    border-radius: var(--cs-glass-radius-sm);
  }
  .cs-glass-rounded-xl {
    border-radius: var(--cs-glass-radius-xl);
  }
  .cs-radius {
    border-radius: var(--cs-radius);
  }
  .cs-radius-lg {
    border-radius: var(--cs-radius-lg);
  }
  .cs-radius-sm {
    border-radius: var(--cs-radius-sm);
  }
  .rounded {
    border-radius: 0.25rem;
  }
  .rounded-2xl {
    border-radius: var(--radius-2xl);
  }
  .rounded-full {
    border-radius: calc(infinity * 1px);
  }
  .rounded-lg {
    border-radius: var(--radius-lg);
  }
  .rounded-xl {
    border-radius: var(--radius-xl);
  }
  .border {
    border-style: var(--tw-border-style);
    border-width: 1px;
  }
  .border-b-2 {
    border-bottom-style: var(--tw-border-style);
    border-bottom-width: 2px;
  }
  .border-l-4 {
    border-left-style: var(--tw-border-style);
    border-left-width: 4px;
  }
  .cs-btn-ghost {
    background: transparent;
    color: var(--cs-text);
    border: 1px solid transparent;
    &:hover {
      background: var(--cs-elev1);
      border-color: var(--cs-border);
    }
    &:focus-visible {
      outline: 2px solid transparent;
      outline-offset: 2px;
      box-shadow: 0 0 0 2px var(--cs-border), 0 0 0 4px color-mix(in srgb, #eef1f6 15%, transparent);
      @supports (color: color-mix(in lab, red, red)) {
        box-shadow: 0 0 0 2px var(--cs-border), 0 0 0 4px color-mix(in srgb, var(--cs-text) 15%, transparent);
      }
    }
  }
  .cs-alert-danger {
    border-color: var(--cs-danger, #ef4444);
    background: color-mix(in srgb, #ef4444 8%, #14161a);
    @supports (color: color-mix(in lab, red, red)) {
      background: color-mix(in srgb, var(--cs-danger, #ef4444) 8%, var(--cs-surface));
    }
    color: var(--cs-danger, #ef4444);
  }
  .cs-alert-info {
    border-color: var(--cs-info, #0ea5e9);
    background: color-mix(in srgb, #06b6d4 8%, #14161a);
    @supports (color: color-mix(in lab, red, red)) {
      background: color-mix(in srgb, var(--cs-info, #0ea5e9) 8%, var(--cs-surface));
    }
    color: var(--cs-info, #0ea5e9);
  }
  .cs-alert-success {
    border-color: var(--cs-success, #22c55e);
    background: color-mix(in srgb, #22c55e 8%, #14161a);
    @supports (color: color-mix(in lab, red, red)) {
      background: color-mix(in srgb, var(--cs-success, #22c55e) 8%, var(--cs-surface));
    }
    color: var(--cs-success, #22c55e);
  }
  .cs-alert-warning {
    border-color: var(--cs-warning, #f59e0b);
    background: color-mix(in srgb, #f59e0b 8%, #14161a);
    @supports (color: color-mix(in lab, red, red)) {
      background: color-mix(in srgb, var(--cs-warning, #f59e0b) 8%, var(--cs-surface));
    }
    color: var(--cs-warning, #f59e0b);
  }
  .border-blue-500 {
    border-color: var(--color-blue-500);
  }
  .border-red-500 {
    border-color: var(--color-red-500);
  }
  .border-white {
    border-color: var(--color-white);
  }
  .border-white\/20 {
    border-color: color-mix(in srgb, #fff 20%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      border-color: color-mix(in oklab, var(--color-white) 20%, transparent);
    }
  }
  .border-yellow-500 {
    border-color: var(--color-yellow-500);
  }
  .cs-bg-brand {
    background-color: var(--cs-brand, #4f7cff);
    color: var(--cs-brand-ink, #0b0d12);
  }
  .bg-black\/20 {
    background-color: color-mix(in srgb, #000 20%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(in oklab, var(--color-black) 20%, transparent);
    }
  }
  .bg-black\/50 {
    background-color: color-mix(in srgb, #000 50%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(in oklab, var(--color-black) 50%, transparent);
    }
  }
  .bg-blue-100 {
    background-color: var(--color-blue-100);
  }
  .bg-blue-400 {
    background-color: var(--color-blue-400);
  }
  .bg-blue-500 {
    background-color: var(--color-blue-500);
  }
  .bg-blue-500\/50 {
    background-color: color-mix(in srgb, oklch(62.3% 0.214 259.815) 50%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(in oklab, var(--color-blue-500) 50%, transparent);
    }
  }
  .bg-blue-600 {
    background-color: var(--color-blue-600);
  }
  .bg-gray-100 {
    background-color: var(--color-gray-100);
  }
  .bg-gray-200 {
    background-color: var(--color-gray-200);
  }
  .bg-green-100 {
    background-color: var(--color-green-100);
  }
  .bg-green-400 {
    background-color: var(--color-green-400);
  }
  .bg-green-500 {
    background-color: var(--color-green-500);
  }
  .bg-green-500\/50 {
    background-color: color-mix(in srgb, oklch(72.3% 0.219 149.579) 50%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(in oklab, var(--color-green-500) 50%, transparent);
    }
  }
  .bg-green-600 {
    background-color: var(--color-green-600);
  }
  .bg-indigo-500 {
    background-color: var(--color-indigo-500);
  }
  .bg-orange-500 {
    background-color: var(--color-orange-500);
  }
  .bg-pink-500 {
    background-color: var(--color-pink-500);
  }
  .bg-purple-100 {
    background-color: var(--color-purple-100);
  }
  .bg-purple-400 {
    background-color: var(--color-purple-400);
  }
  .bg-purple-500 {
    background-color: var(--color-purple-500);
  }
  .bg-purple-500\/50 {
    background-color: color-mix(in srgb, oklch(62.7% 0.265 303.9) 50%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(in oklab, var(--color-purple-500) 50%, transparent);
    }
  }
  .bg-red-500 {
    background-color: var(--color-red-500);
  }
  .bg-red-600 {
    background-color: var(--color-red-600);
  }
  .bg-teal-500 {
    background-color: var(--color-teal-500);
  }
  .bg-white {
    background-color: var(--color-white);
  }
  .bg-white\/10 {
    background-color: color-mix(in srgb, #fff 10%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(in oklab, var(--color-white) 10%, transparent);
    }
  }
  .bg-white\/20 {
    background-color: color-mix(in srgb, #fff 20%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(in oklab, var(--color-white) 20%, transparent);
    }
  }
  .bg-white\/30 {
    background-color: color-mix(in srgb, #fff 30%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(in oklab, var(--color-white) 30%, transparent);
    }
  }
  .bg-yellow-100 {
    background-color: var(--color-yellow-100);
  }
  .bg-yellow-500 {
    background-color: var(--color-yellow-500);
  }
  .bg-gradient-to-b {
    --tw-gradient-position: to bottom in oklab;
    background-image: linear-gradient(var(--tw-gradient-stops));
  }
  .bg-gradient-to-br {
    --tw-gradient-position: to bottom right in oklab;
    background-image: linear-gradient(var(--tw-gradient-stops));
  }
  .bg-gradient-to-r {
    --tw-gradient-position: to right in oklab;
    background-image: linear-gradient(var(--tw-gradient-stops));
  }
  .from-blue-500 {
    --tw-gradient-from: var(--color-blue-500);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }
  .from-blue-500\/20 {
    --tw-gradient-from: color-mix(in srgb, oklch(62.3% 0.214 259.815) 20%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      --tw-gradient-from: color-mix(in oklab, var(--color-blue-500) 20%, transparent);
    }
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }
  .from-cyan-400 {
    --tw-gradient-from: var(--color-cyan-400);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }
  .from-gray-900 {
    --tw-gradient-from: var(--color-gray-900);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }
  .from-green-500 {
    --tw-gradient-from: var(--color-green-500);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }
  .from-indigo-500 {
    --tw-gradient-from: var(--color-indigo-500);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }
  .from-pink-400 {
    --tw-gradient-from: var(--color-pink-400);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }
  .from-purple-400 {
    --tw-gradient-from: var(--color-purple-400);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }
  .from-purple-500 {
    --tw-gradient-from: var(--color-purple-500);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }
  .from-purple-900 {
    --tw-gradient-from: var(--color-purple-900);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }
  .from-red-500 {
    --tw-gradient-from: var(--color-red-500);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }
  .from-slate-900 {
    --tw-gradient-from: var(--color-slate-900);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }
  .from-yellow-400 {
    --tw-gradient-from: var(--color-yellow-400);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }
  .via-purple-900 {
    --tw-gradient-via: var(--color-purple-900);
    --tw-gradient-via-stops: var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-via) var(--tw-gradient-via-position), var(--tw-gradient-to) var(--tw-gradient-to-position);
    --tw-gradient-stops: var(--tw-gradient-via-stops);
  }
  .to-blue-500 {
    --tw-gradient-to: var(--color-blue-500);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }
  .to-blue-600 {
    --tw-gradient-to: var(--color-blue-600);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }
  .to-blue-700 {
    --tw-gradient-to: var(--color-blue-700);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }
  .to-blue-900 {
    --tw-gradient-to: var(--color-blue-900);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }
  .to-gray-800 {
    --tw-gradient-to: var(--color-gray-800);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }
  .to-green-700 {
    --tw-gradient-to: var(--color-green-700);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }
  .to-orange-600 {
    --tw-gradient-to: var(--color-orange-600);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }
  .to-purple-500\/20 {
    --tw-gradient-to: color-mix(in srgb, oklch(62.7% 0.265 303.9) 20%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      --tw-gradient-to: color-mix(in oklab, var(--color-purple-500) 20%, transparent);
    }
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }
  .to-purple-600 {
    --tw-gradient-to: var(--color-purple-600);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }
  .to-purple-700 {
    --tw-gradient-to: var(--color-purple-700);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }
  .to-red-700 {
    --tw-gradient-to: var(--color-red-700);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }
  .to-slate-900 {
    --tw-gradient-to: var(--color-slate-900);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }
  .cs-text-gradient {
    background: linear-gradient(135deg, var(--cs-brand), var(--cs-success));
    background-clip: text;
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
    color: transparent;
  }
  .object-cover {
    object-fit: cover;
  }
  .cs-drawer-footer {
    padding: var(--cs-space-4);
    border-top: 1px solid var(--cs-color-border);
  }
  .cs-drawer-header {
    padding: var(--cs-space-4);
    border-bottom: 1px solid var(--cs-color-border);
  }
  .cs-p-1 {
    padding: var(--cs-space-1);
  }
  .cs-p-2 {
    padding: var(--cs-space-2);
  }
  .cs-p-3 {
    padding: var(--cs-space-3);
  }
  .cs-p-4 {
    padding: var(--cs-space-4);
  }
  .cs-p-6 {
    padding: var(--cs-space-6);
  }
  .cs-p-8 {
    padding: var(--cs-space-8);
  }
  .p-3 {
    padding: calc(var(--spacing) * 3);
  }
  .p-4 {
    padding: calc(var(--spacing) * 4);
  }
  .p-6 {
    padding: calc(var(--spacing) * 6);
  }
  .p-8 {
    padding: calc(var(--spacing) * 8);
  }
  .p-12 {
    padding: calc(var(--spacing) * 12);
  }
  .cs-safe-pad {
    padding-inline: max(var(--cs-page-pad), env(safe-area-inset-left));
    padding-inline-end: max(var(--cs-page-pad), env(safe-area-inset-right));
    padding-block-end: max(var(--cs-space-4), env(safe-area-inset-bottom));
  }
  .cs-px-4 {
    padding-inline: var(--cs-space-4);
  }
  .px-3 {
    padding-inline: calc(var(--spacing) * 3);
  }
  .px-4 {
    padding-inline: calc(var(--spacing) * 4);
  }
  .px-8 {
    padding-inline: calc(var(--spacing) * 8);
  }
  .cs-py-2 {
    padding-block: var(--cs-space-2);
  }
  .py-2 {
    padding-block: calc(var(--spacing) * 2);
  }
  .py-3 {
    padding-block: calc(var(--spacing) * 3);
  }
  .py-6 {
    padding-block: calc(var(--spacing) * 6);
  }
  .pb-16 {
    padding-bottom: calc(var(--spacing) * 16);
  }
  .text-center {
    text-align: center;
  }
  .cs-font-mono {
    font-family: var(--cs-font-mono);
  }
  .cs-font-sans {
    font-family: var(--cs-font-sans);
  }
  .font-mono {
    font-family: var(--font-mono);
  }
  .cs-lead {
    font-size: var(--cs-fs-lg);
    line-height: 1.6;
    color: var(--cs-text-muted);
  }
  .cs-text-2xl {
    font-size: var(--cs-fs-2xl);
    line-height: calc(var(--cs-line) + 0.12);
  }
  .cs-text-lg {
    font-size: var(--cs-fs-lg);
    line-height: calc(var(--cs-line) + 0.05);
  }
  .cs-text-md {
    font-size: var(--cs-fs-md);
    line-height: var(--cs-line);
  }
  .cs-text-sm {
    font-size: var(--cs-fs-sm);
    line-height: var(--cs-line);
  }
  .cs-text-xl {
    font-size: var(--cs-fs-xl);
    line-height: calc(var(--cs-line) + 0.1);
  }
  .cs-text-xs {
    font-size: var(--cs-fs-xs);
    line-height: var(--cs-line);
  }
  .text-2xl {
    font-size: var(--text-2xl);
    line-height: var(--tw-leading, var(--text-2xl--line-height));
  }
  .text-3xl {
    font-size: var(--text-3xl);
    line-height: var(--tw-leading, var(--text-3xl--line-height));
  }
  .text-4xl {
    font-size: var(--text-4xl);
    line-height: var(--tw-leading, var(--text-4xl--line-height));
  }
  .text-5xl {
    font-size: var(--text-5xl);
    line-height: var(--tw-leading, var(--text-5xl--line-height));
  }
  .text-lg {
    font-size: var(--text-lg);
    line-height: var(--tw-leading, var(--text-lg--line-height));
  }
  .text-sm {
    font-size: var(--text-sm);
    line-height: var(--tw-leading, var(--text-sm--line-height));
  }
  .text-xl {
    font-size: var(--text-xl);
    line-height: var(--tw-leading, var(--text-xl--line-height));
  }
  .text-xs {
    font-size: var(--text-xs);
    line-height: var(--tw-leading, var(--text-xs--line-height));
  }
  .leading-relaxed {
    --tw-leading: var(--leading-relaxed);
    line-height: var(--leading-relaxed);
  }
  .font-bold {
    --tw-font-weight: var(--font-weight-bold);
    font-weight: var(--font-weight-bold);
  }
  .font-semibold {
    --tw-font-weight: var(--font-weight-semibold);
    font-weight: var(--font-weight-semibold);
  }
  .cs-text-balance {
    text-wrap: var(--cs-text-balance);
  }
  .cs-btn-outline {
    background: transparent;
    color: var(--cs-brand);
    border: 1px solid var(--cs-brand);
    &:hover {
      background: var(--cs-brand);
      color: var(--cs-brand-contrast);
    }
    &:focus-visible {
      outline: 2px solid transparent;
      outline-offset: 2px;
      box-shadow: 0 0 0 2px var(--cs-brand), 0 0 0 4px color-mix(in srgb, #4f7cff 25%, transparent);
      @supports (color: color-mix(in lab, red, red)) {
        box-shadow: 0 0 0 2px var(--cs-brand), 0 0 0 4px color-mix(in srgb, var(--cs-brand) 25%, transparent);
      }
    }
  }
  .cs-btn-secondary {
    background: var(--cs-elev1);
    color: var(--cs-text);
    border: 1px solid var(--cs-border);
    &:hover {
      background: var(--cs-elev2);
    }
    &:focus-visible {
      outline: 2px solid transparent;
      outline-offset: 2px;
      box-shadow: 0 0 0 2px var(--cs-border), 0 0 0 4px color-mix(in srgb, #eef1f6 15%, transparent);
      @supports (color: color-mix(in lab, red, red)) {
        box-shadow: 0 0 0 2px var(--cs-border), 0 0 0 4px color-mix(in srgb, var(--cs-text) 15%, transparent);
      }
    }
  }
  .cs-btn-primary {
    background: var(--cs-brand);
    color: var(--cs-brand-contrast);
    &:hover {
      background: color-mix(in srgb, #4f7cff 85%, black);
      @supports (color: color-mix(in lab, red, red)) {
        background: color-mix(in srgb, var(--cs-brand) 85%, black);
      }
    }
    &:focus-visible {
      outline: 2px solid transparent;
      outline-offset: 2px;
      box-shadow: 0 0 0 2px var(--cs-brand), 0 0 0 4px color-mix(in srgb, #4f7cff 25%, transparent);
      @supports (color: color-mix(in lab, red, red)) {
        box-shadow: 0 0 0 2px var(--cs-brand), 0 0 0 4px color-mix(in srgb, var(--cs-brand) 25%, transparent);
      }
    }
  }
  .cs-badge-danger {
    background: var(--cs-danger, #ef4444);
    color: white;
  }
  .cs-badge-primary {
    background: var(--cs-brand);
    color: var(--cs-brand-ink);
  }
  .cs-badge-secondary {
    background: var(--cs-text-muted);
    color: var(--cs-bg);
  }
  .cs-badge-success {
    background: var(--cs-success, #22c55e);
    color: white;
  }
  .cs-badge-warning {
    background: var(--cs-warning, #f59e0b);
    color: white;
  }
  .cs-surface {
    background: var(--cs-surface);
    color: var(--cs-text);
  }
  .cs-surface-elevated {
    background: var(--cs-elev1);
    color: var(--cs-text);
  }
  .cs-surface-raised {
    background: var(--cs-elev2);
    color: var(--cs-text);
  }
  .cs-glass-on {
    color: var(--cs-glass-on, #0f172a);
  }
  .cs-glass-on-invert {
    color: var(--cs-glass-on-invert, #ffffff);
  }
  .text-blue-400 {
    color: var(--color-blue-400);
  }
  .text-blue-600 {
    color: var(--color-blue-600);
  }
  .text-gray-100 {
    color: var(--color-gray-100);
  }
  .text-gray-200 {
    color: var(--color-gray-200);
  }
  .text-gray-400 {
    color: var(--color-gray-400);
  }
  .text-gray-600 {
    color: var(--color-gray-600);
  }
  .text-gray-800 {
    color: var(--color-gray-800);
  }
  .text-green-400 {
    color: var(--color-green-400);
  }
  .text-green-600 {
    color: var(--color-green-600);
  }
  .text-orange-600 {
    color: var(--color-orange-600);
  }
  .text-purple-400 {
    color: var(--color-purple-400);
  }
  .text-purple-600 {
    color: var(--color-purple-600);
  }
  .text-white {
    color: var(--color-white);
  }
  .text-white\/60 {
    color: color-mix(in srgb, #fff 60%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      color: color-mix(in oklab, var(--color-white) 60%, transparent);
    }
  }
  .text-white\/70 {
    color: color-mix(in srgb, #fff 70%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      color: color-mix(in oklab, var(--color-white) 70%, transparent);
    }
  }
  .text-white\/80 {
    color: color-mix(in srgb, #fff 80%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      color: color-mix(in oklab, var(--color-white) 80%, transparent);
    }
  }
  .text-yellow-700 {
    color: var(--color-yellow-700);
  }
  .opacity-10 {
    opacity: 10%;
  }
  .opacity-15 {
    opacity: 15%;
  }
  .opacity-20 {
    opacity: 20%;
  }
  .opacity-25 {
    opacity: 25%;
  }
  .opacity-30 {
    opacity: 30%;
  }
  .opacity-35 {
    opacity: 35%;
  }
  .opacity-40 {
    opacity: 40%;
  }
  .opacity-70 {
    opacity: 70%;
  }
  .cs-glass-blend-multiply {
    mix-blend-mode: multiply;
  }
  .cs-glass-blend-overlay {
    mix-blend-mode: overlay;
  }
  .cs-glass-blend-screen {
    mix-blend-mode: screen;
  }
  .shadow {
    --tw-shadow: 0 1px 3px 0 var(--tw-shadow-color, rgb(0 0 0 / 0.1)), 0 1px 2px -1px var(--tw-shadow-color, rgb(0 0 0 / 0.1));
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }
  .shadow-md {
    --tw-shadow: 0 4px 6px -1px var(--tw-shadow-color, rgb(0 0 0 / 0.1)), 0 2px 4px -2px var(--tw-shadow-color, rgb(0 0 0 / 0.1));
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }
  .ring {
    --tw-ring-shadow: var(--tw-ring-inset,) 0 0 0 calc(1px + var(--tw-ring-offset-width)) var(--tw-ring-color, currentcolor);
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }
  .cs-focus-ring {
    outline: none;
    &:focus-visible {
      outline: 2px solid transparent;
      outline-offset: 2px;
      box-shadow: 0 0 0 2px var(--cs-brand, #4f7cff), 0 0 0 4px color-mix(in srgb, #4f7cff 20%, transparent);
      @supports (color: color-mix(in lab, red, red)) {
        box-shadow: 0 0 0 2px var(--cs-brand, #4f7cff), 0 0 0 4px color-mix(in srgb, var(--cs-brand, #4f7cff) 20%, transparent);
      }
      transition: box-shadow var(--cs-transition);
    }
  }
  .cs-focus-ring {
    outline: none;
    &:focus-visible {
      outline: 2px solid transparent;
      outline-offset: 2px;
      box-shadow: 0 0 0 2px var(--cs-brand, #4f7cff), 0 0 0 4px color-mix(in srgb, #4f7cff 20%, transparent);
      @supports (color: color-mix(in lab, red, red)) {
        box-shadow: 0 0 0 2px var(--cs-brand, #4f7cff), 0 0 0 4px color-mix(in srgb, var(--cs-brand, #4f7cff) 20%, transparent);
      }
      transition: box-shadow var(--cs-transition);
    }
  }
  .cs-glow {
    box-shadow: 0 0 0 transparent;
    transition: box-shadow 0.4s ease-out;
    &.cs-glow-active {
      box-shadow: 0 0 0 3px color-mix(in srgb, #4f7cff 40%, transparent), 0 0 12px color-mix(in srgb, #4f7cff 65%, transparent);
      @supports (color: color-mix(in lab, red, red)) {
        box-shadow: 0 0 0 3px color-mix(in srgb, var(--cs-brand, #4f7cff) 40%, transparent), 0 0 12px color-mix(in srgb, var(--cs-brand, #4f7cff) 65%, transparent);
      }
    }
  }
  .cs-glass-frosted-edge {
    box-shadow: inset 0 1px 0 color-mix(in srgb, #ffffff 40%, transparent), var(--cs-glass-shadow-def);
    @supports (color: color-mix(in lab, red, red)) {
      box-shadow: inset 0 1px 0 color-mix(in srgb, var(--cs-glass-white) 40%, transparent), var(--cs-glass-shadow-def);
    }
  }
  .cs-glass-shadow {
    box-shadow: var(--cs-glass-shadow-def);
  }
  .cs-glass-shadow-lg {
    box-shadow: var(--cs-glass-shadow-lg-def);
  }
  .cs-glass-shadow-sm {
    box-shadow: var(--cs-glass-shadow-sm-def);
  }
  .cs-glass-shadow-xl {
    box-shadow: var(--cs-glass-shadow-xl-def);
  }
  .cs-shadow {
    box-shadow: var(--cs-shadow-1);
  }
  .cs-shadow-lg {
    box-shadow: var(--cs-shadow-2);
  }
  .outline {
    outline-style: var(--tw-outline-style);
    outline-width: 1px;
  }
  .blur {
    --tw-blur: blur(8px);
    filter: var(--tw-blur,) var(--tw-brightness,) var(--tw-contrast,) var(--tw-grayscale,) var(--tw-hue-rotate,) var(--tw-invert,) var(--tw-saturate,) var(--tw-sepia,) var(--tw-drop-shadow,);
  }
  .blur-3xl {
    --tw-blur: blur(var(--blur-3xl));
    filter: var(--tw-blur,) var(--tw-brightness,) var(--tw-contrast,) var(--tw-grayscale,) var(--tw-hue-rotate,) var(--tw-invert,) var(--tw-saturate,) var(--tw-sepia,) var(--tw-drop-shadow,);
  }
  .cs-orb-blur-lg {
    filter: blur(8px);
  }
  .cs-orb-blur-md {
    filter: blur(4px);
  }
  .cs-orb-blur-none {
    filter: blur(0);
  }
  .cs-orb-blur-sm {
    filter: blur(2px);
  }
  .filter {
    filter: var(--tw-blur,) var(--tw-brightness,) var(--tw-contrast,) var(--tw-grayscale,) var(--tw-hue-rotate,) var(--tw-invert,) var(--tw-saturate,) var(--tw-sepia,) var(--tw-drop-shadow,);
  }
  .cs-glass {
    background: var(--cs-glass-bg-light);
    border: 1px solid var(--cs-glass-border-medium);
    backdrop-filter: var(--cs-glass-blur);
    -webkit-backdrop-filter: var(--cs-glass-blur);
  }
  .cs-glass-2xl {
    background: var(--cs-glass-bg-2xl);
    border: 1px solid var(--cs-glass-border-2xl);
    backdrop-filter: var(--cs-glass-blur-xl);
    -webkit-backdrop-filter: var(--cs-glass-blur-xl);
  }
  .cs-glass-3xl {
    background: var(--cs-glass-bg-3xl);
    border: 1px solid var(--cs-glass-border-3xl);
    backdrop-filter: var(--cs-glass-blur-xl);
    -webkit-backdrop-filter: var(--cs-glass-blur-xl);
  }
  .cs-glass-4xl {
    background: var(--cs-glass-bg-4xl);
    border: 1px solid var(--cs-glass-border-2xl);
    backdrop-filter: var(--cs-glass-blur-xl);
    -webkit-backdrop-filter: var(--cs-glass-blur-xl);
  }
  .cs-glass-5xl {
    background: var(--cs-glass-bg-5xl);
    border: 1px solid var(--cs-glass-border-3xl);
    backdrop-filter: var(--cs-glass-blur-xl);
    -webkit-backdrop-filter: var(--cs-glass-blur-xl);
  }
  .cs-glass-amber {
    background: var(--cs-glass-bg-amber);
    border: 1px solid var(--cs-glass-border-amber);
    backdrop-filter: var(--cs-glass-blur);
    -webkit-backdrop-filter: var(--cs-glass-blur);
  }
  .cs-glass-blue {
    background: var(--cs-glass-bg-blue);
    border: 1px solid var(--cs-glass-border-blue);
    backdrop-filter: var(--cs-glass-blur);
    -webkit-backdrop-filter: var(--cs-glass-blur);
  }
  .cs-glass-dark {
    background: var(--cs-glass-bg-dark);
    border: 1px solid var(--cs-glass-border-light);
    backdrop-filter: var(--cs-glass-blur);
    -webkit-backdrop-filter: var(--cs-glass-blur);
  }
  .cs-glass-dark-2xl {
    background: var(--cs-glass-bg-dark-2xl);
    border: 1px solid var(--cs-glass-border-2xl);
    backdrop-filter: var(--cs-glass-blur-xl);
    -webkit-backdrop-filter: var(--cs-glass-blur-xl);
  }
  .cs-glass-dark-3xl {
    background: var(--cs-glass-bg-dark-3xl);
    border: 1px solid var(--cs-glass-border-3xl);
    backdrop-filter: var(--cs-glass-blur-xl);
    -webkit-backdrop-filter: var(--cs-glass-blur-xl);
  }
  .cs-glass-dark-4xl {
    background: var(--cs-glass-bg-dark-4xl);
    border: 1px solid var(--cs-glass-border-2xl);
    backdrop-filter: var(--cs-glass-blur-xl);
    -webkit-backdrop-filter: var(--cs-glass-blur-xl);
  }
  .cs-glass-dark-5xl {
    background: var(--cs-glass-bg-dark-5xl);
    border: 1px solid var(--cs-glass-border-3xl);
    backdrop-filter: var(--cs-glass-blur-xl);
    -webkit-backdrop-filter: var(--cs-glass-blur-xl);
  }
  .cs-glass-dark-lg {
    background: var(--cs-glass-bg-dark-lg);
    border: 1px solid var(--cs-glass-border-lg);
    backdrop-filter: var(--cs-glass-blur);
    -webkit-backdrop-filter: var(--cs-glass-blur);
  }
  .cs-glass-dark-md {
    background: var(--cs-glass-bg-dark-md);
    border: 1px solid var(--cs-glass-border-md);
    backdrop-filter: var(--cs-glass-blur);
    -webkit-backdrop-filter: var(--cs-glass-blur);
  }
  .cs-glass-dark-sm {
    background: var(--cs-glass-bg-dark-sm);
    border: 1px solid var(--cs-glass-border-sm);
    backdrop-filter: var(--cs-glass-blur-sm);
    -webkit-backdrop-filter: var(--cs-glass-blur-sm);
  }
  .cs-glass-dark-xl {
    background: var(--cs-glass-bg-dark-xl);
    border: 1px solid var(--cs-glass-border-xl);
    backdrop-filter: var(--cs-glass-blur-xl);
    -webkit-backdrop-filter: var(--cs-glass-blur-xl);
  }
  .cs-glass-dark-xs {
    background: var(--cs-glass-bg-dark-xs);
    border: 1px solid var(--cs-glass-border-xs);
    backdrop-filter: var(--cs-glass-blur-sm);
    -webkit-backdrop-filter: var(--cs-glass-blur-sm);
  }
  .cs-glass-green {
    background: var(--cs-glass-bg-green);
    border: 1px solid var(--cs-glass-border-green);
    backdrop-filter: var(--cs-glass-blur);
    -webkit-backdrop-filter: var(--cs-glass-blur);
  }
  .cs-glass-lg {
    background: var(--cs-glass-bg-lg);
    border: 1px solid var(--cs-glass-border-lg);
    backdrop-filter: var(--cs-glass-blur);
    -webkit-backdrop-filter: var(--cs-glass-blur);
  }
  .cs-glass-md {
    background: var(--cs-glass-bg-md);
    border: 1px solid var(--cs-glass-border-md);
    backdrop-filter: var(--cs-glass-blur);
    -webkit-backdrop-filter: var(--cs-glass-blur);
  }
  .cs-glass-medium {
    background: var(--cs-glass-bg-light);
    border: 1px solid var(--cs-glass-border-medium);
    backdrop-filter: var(--cs-glass-blur);
    -webkit-backdrop-filter: var(--cs-glass-blur);
  }
  .cs-glass-pink {
    background: var(--cs-glass-bg-pink);
    border: 1px solid var(--cs-glass-border-pink);
    backdrop-filter: var(--cs-glass-blur);
    -webkit-backdrop-filter: var(--cs-glass-blur);
  }
  .cs-glass-purple {
    background: var(--cs-glass-bg-purple);
    border: 1px solid var(--cs-glass-border-purple);
    backdrop-filter: var(--cs-glass-blur);
    -webkit-backdrop-filter: var(--cs-glass-blur);
  }
  .cs-glass-sm {
    background: var(--cs-glass-bg-sm);
    border: 1px solid var(--cs-glass-border-sm);
    backdrop-filter: var(--cs-glass-blur-sm);
    -webkit-backdrop-filter: var(--cs-glass-blur-sm);
  }
  .cs-glass-strong {
    background: var(--cs-glass-bg-medium);
    border: 1px solid var(--cs-glass-border-strong);
    backdrop-filter: var(--cs-glass-blur-xl);
    -webkit-backdrop-filter: var(--cs-glass-blur-xl);
  }
  .cs-glass-weak {
    background: var(--cs-glass-bg-weak);
    border: 1px solid var(--cs-glass-border-light);
    backdrop-filter: var(--cs-glass-blur-sm);
    -webkit-backdrop-filter: var(--cs-glass-blur-sm);
  }
  .cs-glass-xl {
    background: var(--cs-glass-bg-xl);
    border: 1px solid var(--cs-glass-border-xl);
    backdrop-filter: var(--cs-glass-blur-xl);
    -webkit-backdrop-filter: var(--cs-glass-blur-xl);
  }
  .cs-glass-xs {
    background: var(--cs-glass-bg-xs);
    border: 1px solid var(--cs-glass-border-xs);
    backdrop-filter: var(--cs-glass-blur-sm);
    -webkit-backdrop-filter: var(--cs-glass-blur-sm);
  }
  .cs-card-feature-glass {
    background: var(--cs-acrylic-tint, rgba(255, 255, 255, 0.1));
    backdrop-filter: saturate(140%) blur(12px);
    border: 1px solid var(--cs-acrylic-border, rgba(255, 255, 255, 0.2));
  }
  .cs-card-pricing-glass {
    background: var(--cs-acrylic-tint, rgba(255, 255, 255, 0.1));
    backdrop-filter: saturate(140%) blur(12px);
    border: 2px solid var(--cs-acrylic-border, rgba(255, 255, 255, 0.3));
  }
  .cs-card-product-glass {
    background: var(--cs-acrylic-tint, rgba(255, 255, 255, 0.1));
    backdrop-filter: saturate(140%) blur(12px);
    border: 1px solid var(--cs-acrylic-border, rgba(255, 255, 255, 0.2));
  }
  .cs-glass-acrylic {
    --cs-glass-backdrop-filter-extra: saturate(135%) contrast(110%);
    backdrop-filter: var(--cs-glass-backdrop-filter-extra) var(--cs-glass-blur);
    -webkit-backdrop-filter: var(--cs-glass-backdrop-filter-extra) var(--cs-glass-blur);
  }
  .backdrop-filter {
    -webkit-backdrop-filter: var(--tw-backdrop-blur,) var(--tw-backdrop-brightness,) var(--tw-backdrop-contrast,) var(--tw-backdrop-grayscale,) var(--tw-backdrop-hue-rotate,) var(--tw-backdrop-invert,) var(--tw-backdrop-opacity,) var(--tw-backdrop-saturate,) var(--tw-backdrop-sepia,);
    backdrop-filter: var(--tw-backdrop-blur,) var(--tw-backdrop-brightness,) var(--tw-backdrop-contrast,) var(--tw-backdrop-grayscale,) var(--tw-backdrop-hue-rotate,) var(--tw-backdrop-invert,) var(--tw-backdrop-opacity,) var(--tw-backdrop-saturate,) var(--tw-backdrop-sepia,);
  }
  .transition {
    transition-property: color, background-color, border-color, outline-color, text-decoration-color, fill, stroke, --tw-gradient-from, --tw-gradient-via, --tw-gradient-to, opacity, box-shadow, transform, translate, scale, rotate, filter, -webkit-backdrop-filter, backdrop-filter, display, content-visibility, overlay, pointer-events;
    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--default-transition-duration));
  }
  .transition-all {
    transition-property: all;
    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--default-transition-duration));
  }
  .transition-colors {
    transition-property: color, background-color, border-color, outline-color, text-decoration-color, fill, stroke, --tw-gradient-from, --tw-gradient-via, --tw-gradient-to;
    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--default-transition-duration));
  }
  .transition-transform {
    transition-property: transform, translate, scale, rotate;
    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--default-transition-duration));
  }
  .duration-300 {
    --tw-duration: 300ms;
    transition-duration: 300ms;
  }
  .ease-in-out {
    --tw-ease: var(--ease-in-out);
    transition-timing-function: var(--ease-in-out);
  }
  .cs-glass-will-change {
    will-change: transform, backdrop-filter;
  }
  .cs-will-change-opacity {
    will-change: opacity;
  }
  .cs-will-change-transform {
    will-change: transform;
  }
  .cs-will-filter {
    will-change: filter;
  }
  .cs-will-opacity {
    will-change: opacity;
  }
  .cs-will-transform {
    will-change: transform;
  }
  .cs-stagger-50 {
    > .cs-anim:nth-child(1) {
      --cs-anim-delay: 0ms;
    }
    > .cs-anim:nth-child(2) {
      --cs-anim-delay: 50ms;
    }
    > .cs-anim:nth-child(3) {
      --cs-anim-delay: 100ms;
    }
    > .cs-anim:nth-child(4) {
      --cs-anim-delay: 150ms;
    }
    > .cs-anim:nth-child(5) {
      --cs-anim-delay: 200ms;
    }
    > .cs-anim:nth-child(6) {
      --cs-anim-delay: 250ms;
    }
    > .cs-anim:nth-child(7) {
      --cs-anim-delay: 300ms;
    }
    > .cs-anim:nth-child(8) {
      --cs-anim-delay: 350ms;
    }
    > .cs-anim:nth-child(9) {
      --cs-anim-delay: 400ms;
    }
    > .cs-anim:nth-child(10) {
      --cs-anim-delay: 450ms;
    }
    > .cs-anim:nth-child(11) {
      --cs-anim-delay: 500ms;
    }
    > .cs-anim:nth-child(12) {
      --cs-anim-delay: 550ms;
    }
  }
  .cs-stagger-75 {
    > .cs-anim:nth-child(1) {
      --cs-anim-delay: 0ms;
    }
    > .cs-anim:nth-child(2) {
      --cs-anim-delay: 75ms;
    }
    > .cs-anim:nth-child(3) {
      --cs-anim-delay: 150ms;
    }
    > .cs-anim:nth-child(4) {
      --cs-anim-delay: 225ms;
    }
    > .cs-anim:nth-child(5) {
      --cs-anim-delay: 300ms;
    }
    > .cs-anim:nth-child(6) {
      --cs-anim-delay: 375ms;
    }
    > .cs-anim:nth-child(7) {
      --cs-anim-delay: 450ms;
    }
    > .cs-anim:nth-child(8) {
      --cs-anim-delay: 525ms;
    }
    > .cs-anim:nth-child(9) {
      --cs-anim-delay: 600ms;
    }
    > .cs-anim:nth-child(10) {
      --cs-anim-delay: 675ms;
    }
    > .cs-anim:nth-child(11) {
      --cs-anim-delay: 750ms;
    }
    > .cs-anim:nth-child(12) {
      --cs-anim-delay: 825ms;
    }
  }
  .cs-stagger-100 {
    > .cs-anim:nth-child(1) {
      --cs-anim-delay: 0ms;
    }
    > .cs-anim:nth-child(2) {
      --cs-anim-delay: 100ms;
    }
    > .cs-anim:nth-child(3) {
      --cs-anim-delay: 200ms;
    }
    > .cs-anim:nth-child(4) {
      --cs-anim-delay: 300ms;
    }
    > .cs-anim:nth-child(5) {
      --cs-anim-delay: 400ms;
    }
    > .cs-anim:nth-child(6) {
      --cs-anim-delay: 500ms;
    }
    > .cs-anim:nth-child(7) {
      --cs-anim-delay: 600ms;
    }
    > .cs-anim:nth-child(8) {
      --cs-anim-delay: 700ms;
    }
    > .cs-anim:nth-child(9) {
      --cs-anim-delay: 800ms;
    }
    > .cs-anim:nth-child(10) {
      --cs-anim-delay: 900ms;
    }
    > .cs-anim:nth-child(11) {
      --cs-anim-delay: 1000ms;
    }
    > .cs-anim:nth-child(12) {
      --cs-anim-delay: 1100ms;
    }
  }
  .cs-stagger-150 {
    > .cs-anim:nth-child(1) {
      --cs-anim-delay: 0ms;
    }
    > .cs-anim:nth-child(2) {
      --cs-anim-delay: 150ms;
    }
    > .cs-anim:nth-child(3) {
      --cs-anim-delay: 300ms;
    }
    > .cs-anim:nth-child(4) {
      --cs-anim-delay: 450ms;
    }
    > .cs-anim:nth-child(5) {
      --cs-anim-delay: 600ms;
    }
    > .cs-anim:nth-child(6) {
      --cs-anim-delay: 750ms;
    }
    > .cs-anim:nth-child(7) {
      --cs-anim-delay: 900ms;
    }
    > .cs-anim:nth-child(8) {
      --cs-anim-delay: 1050ms;
    }
    > .cs-anim:nth-child(9) {
      --cs-anim-delay: 1200ms;
    }
    > .cs-anim:nth-child(10) {
      --cs-anim-delay: 1350ms;
    }
    > .cs-anim:nth-child(11) {
      --cs-anim-delay: 1500ms;
    }
    > .cs-anim:nth-child(12) {
      --cs-anim-delay: 1650ms;
    }
  }
  .cs-stagger-200 {
    > .cs-anim:nth-child(1) {
      --cs-anim-delay: 0ms;
    }
    > .cs-anim:nth-child(2) {
      --cs-anim-delay: 200ms;
    }
    > .cs-anim:nth-child(3) {
      --cs-anim-delay: 400ms;
    }
    > .cs-anim:nth-child(4) {
      --cs-anim-delay: 600ms;
    }
    > .cs-anim:nth-child(5) {
      --cs-anim-delay: 800ms;
    }
    > .cs-anim:nth-child(6) {
      --cs-anim-delay: 1000ms;
    }
    > .cs-anim:nth-child(7) {
      --cs-anim-delay: 1200ms;
    }
    > .cs-anim:nth-child(8) {
      --cs-anim-delay: 1400ms;
    }
    > .cs-anim:nth-child(9) {
      --cs-anim-delay: 1600ms;
    }
    > .cs-anim:nth-child(10) {
      --cs-anim-delay: 1800ms;
    }
    > .cs-anim:nth-child(11) {
      --cs-anim-delay: 2000ms;
    }
    > .cs-anim:nth-child(12) {
      --cs-anim-delay: 2200ms;
    }
  }
  .cs-anim {
    animation-duration: var(--cs-anim-duration, var(--cs-anim-duration-md));
    animation-timing-function: var(--cs-anim-ease, var(--cs-anim-ease-standard));
    animation-iteration-count: var(--cs-anim-count, 1);
    animation-direction: var(--cs-anim-direction, normal);
    animation-fill-mode: var(--cs-anim-fill, both);
    animation-delay: var(--cs-anim-delay, 0ms);
  }
  .cs-dot-loader {
    animation-name: csDotLoader;
    animation-duration: 1.4s;
    animation-iteration-count: infinite;
    animation-fill-mode: both;
  }
  .cs-glass-theme-carbon {
    --cs-glass-bg-light: rgba(30, 30, 30, 0.25);
    --cs-glass-border-medium: rgba(255, 255, 255, 0.08);
    --cs-glass-shadow-def: 0 8px 32px rgba(0,0,0,0.4);
    --cs-glass-focus-ring: rgba(255, 255, 255, 0.3);
  }
  .cs-glass-theme-neon {
    --cs-glass-bg-light: rgba(58, 227, 255, 0.1);
    --cs-glass-border-medium: rgba(58, 227, 255, 0.25);
    --cs-glass-shadow-def: 0 8px 32px rgba(58, 227, 255, 0.25);
    --cs-glass-focus-ring: rgba(58, 227, 255, 0.6);
  }
  .cs-glass-theme-pastel {
    --cs-glass-bg-light: rgba(255, 230, 250, 0.12);
    --cs-glass-border-medium: rgba(255, 230, 250, 0.25);
    --cs-glass-shadow-def: 0 8px 32px rgba(255, 230, 250, 0.25);
    --cs-glass-focus-ring: rgba(255, 230, 250, 0.6);
  }
  .cs-marquee-left {
    animation-name: csMarqueeLeft;
    animation-duration: 10s;
    animation-iteration-count: infinite;
    animation-timing-function: linear;
  }
  .cs-marquee-right {
    animation-name: csMarqueeRight;
    animation-duration: 10s;
    animation-iteration-count: infinite;
    animation-timing-function: linear;
  }
  .cs-parallax-y {
    animation-name: csParallaxY;
    animation-duration: 6s;
    animation-direction: alternate;
    animation-iteration-count: infinite;
  }
  .cs-rotate {
    animation-name: csRotate;
    animation-duration: var(--cs-anim-duration-lg);
    animation-iteration-count: infinite;
    animation-timing-function: linear;
  }
  .cs-bounce {
    animation-name: csBounce;
    animation-duration: var(--cs-anim-duration-lg);
    animation-iteration-count: infinite;
  }
  .cs-btn-press {
    animation-name: csBtnPress;
    animation-duration: var(--cs-anim-duration-xxs);
    animation-timing-function: var(--cs-anim-ease-soft-spring);
  }
  .cs-float {
    animation-name: csFloat;
    animation-duration: 3s;
    animation-iteration-count: infinite;
  }
  .cs-heartbeat {
    animation-name: csHeartbeat;
    animation-duration: var(--cs-anim-duration-lg);
    animation-iteration-count: infinite;
  }
  .cs-notification-slide {
    animation-name: csNotificationSlide;
    animation-duration: var(--cs-anim-duration-md);
    animation-timing-function: var(--cs-anim-ease-spring);
  }
  .cs-pulse {
    animation-name: csPulse;
    animation-duration: var(--cs-anim-duration-lg);
    animation-iteration-count: infinite;
  }
  .cs-sway {
    animation-name: csSway;
    animation-duration: 4s;
    animation-iteration-count: infinite;
  }
  .cs-badge-outline {
    background: transparent;
    border: 1px solid currentColor;
  }
  .cs-flip-3d-x {
    animation-name: csFlip3DX;
    animation-duration: var(--cs-anim-duration-lg);
  }
  .cs-flip-3d-y {
    animation-name: csFlip3DY;
    animation-duration: var(--cs-anim-duration-lg);
  }
  .cs-orb-gradient-blue {
    background: var(--cs-orb-fallback-blue);
    @supports (background: color-mix(in srgb, red 50%, transparent)) {
      background: var(--cs-orb-gradient-blue);
    }
  }
  .cs-orb-gradient-custom {
    background: var(--cs-orb-fallback-custom);
    @supports (background: color-mix(in srgb, red 50%, transparent)) {
      background: var(--cs-orb-gradient-custom);
    }
  }
  .cs-orb-gradient-pink {
    background: var(--cs-orb-fallback-pink);
    @supports (background: color-mix(in srgb, red 50%, transparent)) {
      background: var(--cs-orb-gradient-pink);
    }
  }
  .cs-orb-gradient-purple {
    background: var(--cs-orb-fallback-purple);
    @supports (background: color-mix(in srgb, red 50%, transparent)) {
      background: var(--cs-orb-gradient-purple);
    }
  }
  .cs-progress-grow {
    animation-name: csProgressGrow;
    animation-timing-function: var(--cs-anim-ease-decelerate);
  }
  .cs-tab-slide {
    animation-name: csTabSlide;
    animation-duration: var(--cs-anim-duration-sm);
  }
  .cs-anim-2xl {
    --cs-anim-duration: var(--cs-anim-duration-2xl);
  }
  .cs-anim-3xl {
    --cs-anim-duration: var(--cs-anim-duration-3xl);
  }
  .cs-anim-alternate {
    --cs-anim-direction: alternate;
  }
  .cs-anim-both {
    --cs-anim-fill: both;
  }
  .cs-anim-forwards {
    --cs-anim-fill: forwards;
  }
  .cs-anim-infinite {
    --cs-anim-count: infinite;
  }
  .cs-anim-lg {
    --cs-anim-duration: var(--cs-anim-duration-lg);
  }
  .cs-anim-md {
    --cs-anim-duration: var(--cs-anim-duration-md);
  }
  .cs-anim-reverse {
    --cs-anim-direction: reverse;
  }
  .cs-anim-sm {
    --cs-anim-duration: var(--cs-anim-duration-sm);
  }
  .cs-anim-xl {
    --cs-anim-duration: var(--cs-anim-duration-xl);
  }
  .cs-anim-xs {
    --cs-anim-duration: var(--cs-anim-duration-xs);
  }
  .cs-anim-xxs {
    --cs-anim-duration: var(--cs-anim-duration-xxs);
  }
  .cs-backface-hidden {
    backface-visibility: hidden;
  }
  .cs-blur-in {
    animation-name: csBlurIn;
  }
  .cs-blur-out {
    animation-name: csBlurOut;
  }
  .cs-delay-0 {
    --cs-anim-delay: 0ms;
  }
  .cs-delay-50 {
    --cs-anim-delay: 50ms;
  }
  .cs-delay-75 {
    --cs-anim-delay: 75ms;
  }
  .cs-delay-100 {
    --cs-anim-delay: 100ms;
  }
  .cs-delay-150 {
    --cs-anim-delay: 150ms;
  }
  .cs-delay-200 {
    --cs-anim-delay: 200ms;
  }
  .cs-delay-300 {
    --cs-anim-delay: 300ms;
  }
  .cs-delay-500 {
    --cs-anim-delay: 500ms;
  }
  .cs-delay-700 {
    --cs-anim-delay: 700ms;
  }
  .cs-delay-1000 {
    --cs-anim-delay: 1000ms;
  }
  .cs-ease-accelerate {
    --cs-anim-ease: var(--cs-anim-ease-accelerate);
  }
  .cs-ease-bounce {
    --cs-anim-ease: var(--cs-anim-ease-bounce);
  }
  .cs-ease-decelerate {
    --cs-anim-ease: var(--cs-anim-ease-decelerate);
  }
  .cs-ease-elastic {
    --cs-anim-ease: var(--cs-anim-ease-elastic);
  }
  .cs-ease-emphasized {
    --cs-anim-ease: var(--cs-anim-ease-emphasized);
  }
  .cs-ease-overshoot {
    --cs-anim-ease: var(--cs-anim-ease-overshoot);
  }
  .cs-ease-soft-spring {
    --cs-anim-ease: var(--cs-anim-ease-soft-spring);
  }
  .cs-ease-spring {
    --cs-anim-ease: var(--cs-anim-ease-spring);
  }
  .cs-ease-standard {
    --cs-anim-ease: var(--cs-anim-ease-standard);
  }
  .cs-fade-in {
    animation-name: csFadeIn;
  }
  .cs-fade-out {
    animation-name: csFadeOut;
  }
  .cs-flip-in {
    animation-name: csFlipIn;
  }
  .cs-font-feature-numbers {
    font-feature-settings: "tnum";
  }
  .cs-preserve-3d {
    transform-style: preserve-3d;
  }
  .cs-reveal-3d-left {
    animation-name: csReveal3DLeft;
  }
  .cs-reveal-3d-right {
    animation-name: csReveal3DRight;
  }
  .cs-reveal-3d-up {
    animation-name: csReveal3DUp;
  }
  .cs-rotate-in {
    animation-name: csRotateIn;
  }
  .cs-rubber-band {
    animation-name: csRubberBand;
  }
  .cs-scale-in {
    animation-name: csScaleIn;
  }
  .cs-scale-out {
    animation-name: csScaleOut;
  }
  .cs-scrollbar-thin {
    scrollbar-width: thin;
  }
  .cs-shake {
    animation-name: csShake;
  }
  .cs-slide-down {
    animation-name: csSlideDown;
  }
  .cs-slide-left {
    animation-name: csSlideLeft;
  }
  .cs-slide-right {
    animation-name: csSlideRight;
  }
  .cs-slide-up {
    animation-name: csSlideUp;
  }
  .cs-wiggle {
    animation-name: csWiggle;
  }
  .cs-zoom-in {
    animation-name: csZoomIn;
  }
  .hover\:scale-110 {
    &:hover {
      @media (hover: hover) {
        --tw-scale-x: 110%;
        --tw-scale-y: 110%;
        --tw-scale-z: 110%;
        scale: var(--tw-scale-x) var(--tw-scale-y);
      }
    }
  }
  .hover\:rotate-3 {
    &:hover {
      @media (hover: hover) {
        rotate: 3deg;
      }
    }
  }
  .hover\:bg-blue-600 {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-blue-600);
      }
    }
  }
  .hover\:bg-green-600 {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-green-600);
      }
    }
  }
  .hover\:bg-indigo-600 {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-indigo-600);
      }
    }
  }
  .hover\:bg-pink-600 {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-pink-600);
      }
    }
  }
  .hover\:bg-purple-600 {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-purple-600);
      }
    }
  }
  .hover\:bg-red-600 {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-red-600);
      }
    }
  }
  .hover\:bg-teal-600 {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-teal-600);
      }
    }
  }
  .hover\:bg-yellow-600 {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-yellow-600);
      }
    }
  }
  .hover\:shadow-lg {
    &:hover {
      @media (hover: hover) {
        --tw-shadow: 0 10px 15px -3px var(--tw-shadow-color, rgb(0 0 0 / 0.1)), 0 4px 6px -4px var(--tw-shadow-color, rgb(0 0 0 / 0.1));
        box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
      }
    }
  }
  .hover\:cs-rubber-band {
    &:hover {
      @media (hover: hover) {
        animation-name: csRubberBand;
      }
    }
  }
  .motion-safe\:cs-pulse {
    @media (prefers-reduced-motion: no-preference) {
      animation: csPulse 1.2s ease-in-out infinite;
      will-change: transform, opacity;
    }
  }
  .motion-safe\:cs-pulse {
    @media (prefers-reduced-motion: no-preference) {
      animation-name: csPulse;
      animation-duration: var(--cs-anim-duration-lg);
      animation-iteration-count: infinite;
    }
  }
  .motion-reduce\:cs-anim {
    @media (prefers-reduced-motion: reduce) {
      animation-duration: var(--cs-anim-duration, var(--cs-anim-duration-md));
      animation-timing-function: var(--cs-anim-ease, var(--cs-anim-ease-standard));
      animation-iteration-count: var(--cs-anim-count, 1);
      animation-direction: var(--cs-anim-direction, normal);
      animation-fill-mode: var(--cs-anim-fill, both);
      animation-delay: var(--cs-anim-delay, 0ms);
    }
  }
  .contrast-more\:cs-focus-ring {
    @media (prefers-contrast: more) {
      outline: none;
      &:focus-visible {
        outline: 2px solid transparent;
        outline-offset: 2px;
        box-shadow: 0 0 0 2px var(--cs-brand, #4f7cff), 0 0 0 4px color-mix(in srgb, #4f7cff 20%, transparent);
        @supports (color: color-mix(in lab, red, red)) {
          box-shadow: 0 0 0 2px var(--cs-brand, #4f7cff), 0 0 0 4px color-mix(in srgb, var(--cs-brand, #4f7cff) 20%, transparent);
        }
        transition: box-shadow var(--cs-transition);
      }
    }
  }
  .contrast-more\:cs-focus-ring {
    @media (prefers-contrast: more) {
      outline: none;
      &:focus-visible {
        outline: 2px solid transparent;
        outline-offset: 2px;
        box-shadow: 0 0 0 2px var(--cs-brand, #4f7cff), 0 0 0 4px color-mix(in srgb, #4f7cff 20%, transparent);
        @supports (color: color-mix(in lab, red, red)) {
          box-shadow: 0 0 0 2px var(--cs-brand, #4f7cff), 0 0 0 4px color-mix(in srgb, var(--cs-brand, #4f7cff) 20%, transparent);
        }
        transition: box-shadow var(--cs-transition);
      }
    }
  }
  .md\:flex {
    @media (width >= 48rem) {
      display: flex;
    }
  }
  .md\:grid-cols-2 {
    @media (width >= 48rem) {
      grid-template-columns: repeat(2, minmax(0, 1fr));
    }
  }
  .md\:grid-cols-3 {
    @media (width >= 48rem) {
      grid-template-columns: repeat(3, minmax(0, 1fr));
    }
  }
  .md\:grid-cols-4 {
    @media (width >= 48rem) {
      grid-template-columns: repeat(4, minmax(0, 1fr));
    }
  }
  .md\:text-5xl {
    @media (width >= 48rem) {
      font-size: var(--text-5xl);
      line-height: var(--tw-leading, var(--text-5xl--line-height));
    }
  }
  .md\:text-6xl {
    @media (width >= 48rem) {
      font-size: var(--text-6xl);
      line-height: var(--tw-leading, var(--text-6xl--line-height));
    }
  }
  .lg\:grid-cols-3 {
    @media (width >= 64rem) {
      grid-template-columns: repeat(3, minmax(0, 1fr));
    }
  }
}
/*!
 * Casoon Utilities - Complete Utility System for Tailwind v4
 * Version: 0.9.0 — COMPLETELY CONSOLIDATED & ENHANCED
 * 
 * SYSTEMATICALLY CONSOLIDATED FROM:
 * - src/index.css (main file with @utility definitions)
 * - src/styles/base/tokens.css
 * - src/styles/tokens/design-tokens.css
 * - src/styles/utilities/core.css
 * - src/styles/utilities/layout.css
 * - src/styles/utilities/effects.css
 * - src/styles/components/surfaces.css
 * - src/styles/patterns/component-presets.css
 * 
 * TOTAL: 8 CSS FILES → Pure Tailwind v4 (120+ classes + 80+ @utility)
 * 
 * Features:
 * ✅ Tree-Shaking Support with @utility directives
 * ✅ Modern Design System with comprehensive tokens
 * ✅ Accessibility-first components and utilities
 * ✅ Progressive Enhancement & Fallbacks
 * ✅ Container Queries & Responsive Design
 * ✅ Performance optimized with reduced motion support
 * 
 * Usage: @import "@casoon/tailwindcss-utilities/index.css";
 */
@layer theme, base, components, utilities;
@layer theme;
@layer base {
  *, ::after, ::before, ::backdrop, ::file-selector-button {
    box-sizing: border-box;
    margin: 0;
    padding: 0;
    border: 0 solid;
  }
  html, :host {
    line-height: 1.5;
    -webkit-text-size-adjust: 100%;
    tab-size: 4;
    font-family: var(--default-font-family, ui-sans-serif, system-ui, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji");
    font-feature-settings: var(--default-font-feature-settings, normal);
    font-variation-settings: var(--default-font-variation-settings, normal);
    -webkit-tap-highlight-color: transparent;
  }
  hr {
    height: 0;
    color: inherit;
    border-top-width: 1px;
  }
  abbr:where([title]) {
    -webkit-text-decoration: underline dotted;
    text-decoration: underline dotted;
  }
  h1, h2, h3, h4, h5, h6 {
    font-size: inherit;
    font-weight: inherit;
  }
  a {
    color: inherit;
    -webkit-text-decoration: inherit;
    text-decoration: inherit;
  }
  b, strong {
    font-weight: bolder;
  }
  code, kbd, samp, pre {
    font-family: var(--default-mono-font-family, ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono", "Courier New", monospace);
    font-feature-settings: var(--default-mono-font-feature-settings, normal);
    font-variation-settings: var(--default-mono-font-variation-settings, normal);
    font-size: 1em;
  }
  small {
    font-size: 80%;
  }
  sub, sup {
    font-size: 75%;
    line-height: 0;
    position: relative;
    vertical-align: baseline;
  }
  sub {
    bottom: -0.25em;
  }
  sup {
    top: -0.5em;
  }
  table {
    text-indent: 0;
    border-color: inherit;
    border-collapse: collapse;
  }
  :-moz-focusring {
    outline: auto;
  }
  progress {
    vertical-align: baseline;
  }
  summary {
    display: list-item;
  }
  ol, ul, menu {
    list-style: none;
  }
  img, svg, video, canvas, audio, iframe, embed, object {
    display: block;
    vertical-align: middle;
  }
  img, video {
    max-width: 100%;
    height: auto;
  }
  button, input, select, optgroup, textarea, ::file-selector-button {
    font: inherit;
    font-feature-settings: inherit;
    font-variation-settings: inherit;
    letter-spacing: inherit;
    color: inherit;
    border-radius: 0;
    background-color: transparent;
    opacity: 1;
  }
  :where(select:is([multiple], [size])) optgroup {
    font-weight: bolder;
  }
  :where(select:is([multiple], [size])) optgroup option {
    padding-inline-start: 20px;
  }
  ::file-selector-button {
    margin-inline-end: 4px;
  }
  ::placeholder {
    opacity: 1;
  }
  @supports (not (-webkit-appearance: -apple-pay-button))  or (contain-intrinsic-size: 1px) {
    ::placeholder {
      color: currentcolor;
      @supports (color: color-mix(in lab, red, red)) {
        color: color-mix(in oklab, currentcolor 50%, transparent);
      }
    }
  }
  textarea {
    resize: vertical;
  }
  ::-webkit-search-decoration {
    -webkit-appearance: none;
  }
  ::-webkit-date-and-time-value {
    min-height: 1lh;
    text-align: inherit;
  }
  ::-webkit-datetime-edit {
    display: inline-flex;
  }
  ::-webkit-datetime-edit-fields-wrapper {
    padding: 0;
  }
  ::-webkit-datetime-edit, ::-webkit-datetime-edit-year-field, ::-webkit-datetime-edit-month-field, ::-webkit-datetime-edit-day-field, ::-webkit-datetime-edit-hour-field, ::-webkit-datetime-edit-minute-field, ::-webkit-datetime-edit-second-field, ::-webkit-datetime-edit-millisecond-field, ::-webkit-datetime-edit-meridiem-field {
    padding-block: 0;
  }
  ::-webkit-calendar-picker-indicator {
    line-height: 1;
  }
  :-moz-ui-invalid {
    box-shadow: none;
  }
  button, input:where([type="button"], [type="reset"], [type="submit"]), ::file-selector-button {
    appearance: button;
  }
  ::-webkit-inner-spin-button, ::-webkit-outer-spin-button {
    height: auto;
  }
  [hidden]:where(:not([hidden="until-found"])) {
    display: none !important;
  }
}
@layer utilities;
.cs-theme-light {
  --cs-bg: #ffffff;
  --cs-surface: #f7f8fa;
  --cs-elev1: #ffffff;
  --cs-elev2: #ffffff;
  --cs-text: #101217;
  --cs-text-muted: #475066;
  --cs-border: #dfe3ea;
  --cs-brand: #375dfb;
  --cs-brand-contrast: #ffffff;
  --cs-shadow-1: 0 1px 2px rgba(18, 24, 40, 0.06), 0 1px 1px rgba(18, 24, 40, 0.04);
  --cs-shadow-2: 0 10px 24px rgba(18, 24, 40, 0.1), 0 2px 8px rgba(18, 24, 40, 0.06);
  --cs-acrylic-tint: rgba(255, 255, 255, 0.65);
  --cs-acrylic-border: rgba(0, 0, 0, 0.06);
}
.cs-theme-dark {
  --cs-bg: #0b0c0f;
  --cs-surface: #14161a;
  --cs-elev1: #1b1e24;
  --cs-elev2: #21252d;
  --cs-text: #eef1f6;
  --cs-text-muted: #b6bfcc;
  --cs-border: #2a2f39;
  --cs-brand: #4f7cff;
  --cs-brand-contrast: #0b0d12;
}
@keyframes cs-shimmer {
  0% {
    background-position: -200% 0;
  }
  100% {
    background-position: 200% 0;
  }
}
@keyframes cs-rotate {
  from {
    transform: rotate(0deg);
  }
  to {
    transform: rotate(360deg);
  }
}
@keyframes cs-progress-slide {
  0% {
    background-position: -200% 0;
  }
  100% {
    background-position: 200% 0;
  }
}
@keyframes csPulse {
  0% {
    transform: scale(1);
    opacity: 1;
  }
  50% {
    transform: scale(1.05);
    opacity: 0.75;
  }
  100% {
    transform: scale(1);
    opacity: 1;
  }
}
@keyframes csFadeIn {
  from {
    opacity: 0;
  }
  to {
    opacity: 1;
  }
}
@keyframes csShimmer {
  0% {
    background-position: 200% 0;
  }
  100% {
    background-position: -200% 0;
  }
}
@keyframes csSpin {
  to {
    transform: rotate(360deg);
  }
}
@container (max-width: 640px) {
  .cs-hide-mobile {
    display: none !important;
  }
  .cs-show-mobile {
    display: block !important;
  }
}
@container (min-width: 641px) and (max-width: 1024px) {
  .cs-hide-tablet {
    display: none !important;
  }
  .cs-show-tablet {
    display: block !important;
  }
}
@container (min-width: 1025px) {
  .cs-hide-desktop {
    display: none !important;
  }
  .cs-show-desktop {
    display: block !important;
  }
}
@supports not (color: color-mix(in srgb, red 50%, blue)) {
  .cs-btn-primary:hover {
    background: rgba(79, 124, 255, 0.85);
  }
  .cs-alert-info {
    background: rgba(14, 165, 233, 0.08);
  }
  .cs-alert-success {
    background: rgba(34, 197, 94, 0.08);
  }
  .cs-alert-warning {
    background: rgba(245, 158, 11, 0.08);
  }
  .cs-alert-danger {
    background: rgba(239, 68, 68, 0.08);
  }
}
@supports not (backdrop-filter: blur(1px)) {
  .cs-acrylic {
    background: color-mix(in srgb, rgba(20, 22, 26, 0.55) 80%, #1b1e24);
    @supports (color: color-mix(in lab, red, red)) {
      background: color-mix(in srgb, var(--cs-acrylic-tint) 80%, var(--cs-elev1));
    }
  }
}
@supports (color: oklch(60% 0.2 250)) {
  .cs-theme {
    --cs-brand-oklch: oklch(from var(--cs-brand) l c h);
  }
}
@media (prefers-reduced-motion: reduce) {
  .cs-pulse, .cs-shimmer, .cs-fade-delayed, .cs-spin {
    animation: none !important;
  }
  .cs-btn:hover, .cs-focus-ring:focus-visible, .cs-focus-ring-within:focus-within {
    transition: none !important;
  }
  .cs-glow {
    transition: none !important;
  }
}
@media (prefers-contrast: high) {
  .cs-theme {
    --cs-border: currentColor;
    --cs-text-muted: var(--cs-text);
  }
  .cs-btn {
    border: 2px solid currentColor;
  }
  .cs-card, .cs-card-elevated {
    border: 2px solid var(--cs-border);
  }
}
/*!
 * Casoon Animations - Complete Animation System for Tailwind v4
 * Version: 0.9.0 — COMPLETELY CONSOLIDATED & ENHANCED
 * 
 * SYSTEMATICALLY CONSOLIDATED FROM:
 * - src/index.css (main animation engine)
 * - src/styles/utilities/core.css (core keyframes and utilities)
 * - src/styles/utilities/stagger.css (stagger orchestration)
 * - src/styles/components/button.css (button interactions)
 * - src/styles/components/navigation.css (nav animations)
 * - src/styles/fallbacks.css (accessibility fallbacks)
 * 
 * TOTAL: 6 CSS FILES → Pure Tailwind v4 (80+ animations + advanced features)
 * 
 * New Features Added:
 * ✅ Scroll-based animations with Intersection Observer support
 * ✅ Advanced easing functions (spring, bounce, elastic)
 * ✅ Extended stagger system (up to 12 items)
 * ✅ Performance-optimized keyframes
 * ✅ Modern CSS features (view-timeline, scroll-timeline)
 * ✅ Comprehensive reduced motion support
 * ✅ Touch-friendly micro-interactions
 * 
 * Usage: @import "@casoon/tailwindcss-animations/index.css";
 */
@layer theme, base, components, utilities;
@layer theme;
@layer base {
  *, ::after, ::before, ::backdrop, ::file-selector-button {
    box-sizing: border-box;
    margin: 0;
    padding: 0;
    border: 0 solid;
  }
  html, :host {
    line-height: 1.5;
    -webkit-text-size-adjust: 100%;
    tab-size: 4;
    font-family: var(--default-font-family, ui-sans-serif, system-ui, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji");
    font-feature-settings: var(--default-font-feature-settings, normal);
    font-variation-settings: var(--default-font-variation-settings, normal);
    -webkit-tap-highlight-color: transparent;
  }
  hr {
    height: 0;
    color: inherit;
    border-top-width: 1px;
  }
  abbr:where([title]) {
    -webkit-text-decoration: underline dotted;
    text-decoration: underline dotted;
  }
  h1, h2, h3, h4, h5, h6 {
    font-size: inherit;
    font-weight: inherit;
  }
  a {
    color: inherit;
    -webkit-text-decoration: inherit;
    text-decoration: inherit;
  }
  b, strong {
    font-weight: bolder;
  }
  code, kbd, samp, pre {
    font-family: var(--default-mono-font-family, ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono", "Courier New", monospace);
    font-feature-settings: var(--default-mono-font-feature-settings, normal);
    font-variation-settings: var(--default-mono-font-variation-settings, normal);
    font-size: 1em;
  }
  small {
    font-size: 80%;
  }
  sub, sup {
    font-size: 75%;
    line-height: 0;
    position: relative;
    vertical-align: baseline;
  }
  sub {
    bottom: -0.25em;
  }
  sup {
    top: -0.5em;
  }
  table {
    text-indent: 0;
    border-color: inherit;
    border-collapse: collapse;
  }
  :-moz-focusring {
    outline: auto;
  }
  progress {
    vertical-align: baseline;
  }
  summary {
    display: list-item;
  }
  ol, ul, menu {
    list-style: none;
  }
  img, svg, video, canvas, audio, iframe, embed, object {
    display: block;
    vertical-align: middle;
  }
  img, video {
    max-width: 100%;
    height: auto;
  }
  button, input, select, optgroup, textarea, ::file-selector-button {
    font: inherit;
    font-feature-settings: inherit;
    font-variation-settings: inherit;
    letter-spacing: inherit;
    color: inherit;
    border-radius: 0;
    background-color: transparent;
    opacity: 1;
  }
  :where(select:is([multiple], [size])) optgroup {
    font-weight: bolder;
  }
  :where(select:is([multiple], [size])) optgroup option {
    padding-inline-start: 20px;
  }
  ::file-selector-button {
    margin-inline-end: 4px;
  }
  ::placeholder {
    opacity: 1;
  }
  @supports (not (-webkit-appearance: -apple-pay-button))  or (contain-intrinsic-size: 1px) {
    ::placeholder {
      color: currentcolor;
      @supports (color: color-mix(in lab, red, red)) {
        color: color-mix(in oklab, currentcolor 50%, transparent);
      }
    }
  }
  textarea {
    resize: vertical;
  }
  ::-webkit-search-decoration {
    -webkit-appearance: none;
  }
  ::-webkit-date-and-time-value {
    min-height: 1lh;
    text-align: inherit;
  }
  ::-webkit-datetime-edit {
    display: inline-flex;
  }
  ::-webkit-datetime-edit-fields-wrapper {
    padding: 0;
  }
  ::-webkit-datetime-edit, ::-webkit-datetime-edit-year-field, ::-webkit-datetime-edit-month-field, ::-webkit-datetime-edit-day-field, ::-webkit-datetime-edit-hour-field, ::-webkit-datetime-edit-minute-field, ::-webkit-datetime-edit-second-field, ::-webkit-datetime-edit-millisecond-field, ::-webkit-datetime-edit-meridiem-field {
    padding-block: 0;
  }
  ::-webkit-calendar-picker-indicator {
    line-height: 1;
  }
  :-moz-ui-invalid {
    box-shadow: none;
  }
  button, input:where([type="button"], [type="reset"], [type="submit"]), ::file-selector-button {
    appearance: button;
  }
  ::-webkit-inner-spin-button, ::-webkit-outer-spin-button {
    height: auto;
  }
  [hidden]:where(:not([hidden="until-found"])) {
    display: none !important;
  }
}
@layer utilities;
@keyframes csFadeIn {
  0% {
    opacity: 0;
  }
  100% {
    opacity: 1;
  }
}
@keyframes csFadeOut {
  0% {
    opacity: 1;
  }
  100% {
    opacity: 0;
  }
}
@keyframes csScaleIn {
  0% {
    opacity: 0;
    transform: scale(0.9);
  }
  100% {
    opacity: 1;
    transform: scale(1);
  }
}
@keyframes csScaleOut {
  0% {
    opacity: 1;
    transform: scale(1);
  }
  100% {
    opacity: 0;
    transform: scale(0.9);
  }
}
@keyframes csSlideUp {
  0% {
    opacity: 0;
    transform: translateY(20px);
  }
  100% {
    opacity: 1;
    transform: translateY(0);
  }
}
@keyframes csSlideDown {
  0% {
    opacity: 0;
    transform: translateY(-20px);
  }
  100% {
    opacity: 1;
    transform: translateY(0);
  }
}
@keyframes csSlideLeft {
  0% {
    opacity: 0;
    transform: translateX(20px);
  }
  100% {
    opacity: 1;
    transform: translateX(0);
  }
}
@keyframes csSlideRight {
  0% {
    opacity: 0;
    transform: translateX(-20px);
  }
  100% {
    opacity: 1;
    transform: translateX(0);
  }
}
@keyframes csBlurIn {
  0% {
    opacity: 0;
    filter: blur(4px);
  }
  100% {
    opacity: 1;
    filter: blur(0);
  }
}
@keyframes csBlurOut {
  0% {
    opacity: 1;
    filter: blur(0);
  }
  100% {
    opacity: 0;
    filter: blur(4px);
  }
}
@keyframes csRotateIn {
  0% {
    opacity: 0;
    transform: rotate(-5deg);
  }
  100% {
    opacity: 1;
    transform: rotate(0);
  }
}
@keyframes csFlipIn {
  0% {
    opacity: 0;
    transform: rotateY(-180deg);
  }
  100% {
    opacity: 1;
    transform: rotateY(0);
  }
}
@keyframes csZoomIn {
  0% {
    opacity: 0;
    transform: scale(0.5);
  }
  100% {
    opacity: 1;
    transform: scale(1);
  }
}
@keyframes csZoomOut {
  0% {
    opacity: 1;
    transform: scale(1);
  }
  100% {
    opacity: 0;
    transform: scale(0.5);
  }
}
@keyframes csRotate {
  0% {
    transform: rotate(0deg);
  }
  100% {
    transform: rotate(360deg);
  }
}
@keyframes csPulse {
  0%, 100% {
    opacity: 1;
  }
  50% {
    opacity: 0.5;
  }
}
@keyframes csBounce {
  0%, 100% {
    transform: translateY(0);
  }
  50% {
    transform: translateY(-25%);
  }
}
@keyframes csWiggle {
  0%, 100% {
    transform: rotate(0deg);
  }
  25% {
    transform: rotate(-3deg);
  }
  75% {
    transform: rotate(3deg);
  }
}
@keyframes csShake {
  0%, 100% {
    transform: translateX(0);
  }
  25% {
    transform: translateX(-5px);
  }
  75% {
    transform: translateX(5px);
  }
}
@keyframes csHeartbeat {
  0%, 100% {
    transform: scale(1);
  }
  14%, 28% {
    transform: scale(1.15);
  }
}
@keyframes csRubberBand {
  0%, 100% {
    transform: scaleX(1);
  }
  30% {
    transform: scaleX(1.25) scaleY(0.75);
  }
  40% {
    transform: scaleX(0.75) scaleY(1.25);
  }
  60% {
    transform: scaleX(1.15) scaleY(0.85);
  }
}
@keyframes csReveal3DUp {
  0% {
    opacity: 0;
    transform: rotateX(-90deg);
  }
  100% {
    opacity: 1;
    transform: rotateX(0);
  }
}
@keyframes csReveal3DRight {
  0% {
    opacity: 0;
    transform: rotateY(90deg);
  }
  100% {
    opacity: 1;
    transform: rotateY(0);
  }
}
@keyframes csReveal3DLeft {
  0% {
    opacity: 0;
    transform: rotateY(-90deg);
  }
  100% {
    opacity: 1;
    transform: rotateY(0);
  }
}
@keyframes csFlip3DX {
  0% {
    transform: rotateX(0);
  }
  100% {
    transform: rotateX(360deg);
  }
}
@keyframes csFlip3DY {
  0% {
    transform: rotateY(0);
  }
  100% {
    transform: rotateY(360deg);
  }
}
@keyframes csMarqueeLeft {
  0% {
    transform: translateX(100%);
  }
  100% {
    transform: translateX(-100%);
  }
}
@keyframes csMarqueeRight {
  0% {
    transform: translateX(-100%);
  }
  100% {
    transform: translateX(100%);
  }
}
@keyframes csParallaxY {
  0% {
    transform: translateY(-10px);
  }
  100% {
    transform: translateY(10px);
  }
}
@keyframes csParallaxX {
  0% {
    transform: translateX(-10px);
  }
  100% {
    transform: translateX(10px);
  }
}
@keyframes csFloat {
  0%, 100% {
    transform: translateY(0);
  }
  50% {
    transform: translateY(-8px);
  }
}
@keyframes csSway {
  0%, 100% {
    transform: rotate(0deg);
  }
  50% {
    transform: rotate(1deg);
  }
}
@keyframes csProgressGrow {
  0% {
    width: 0%;
  }
  100% {
    width: 100%;
  }
}
@keyframes csSkeletonShimmer {
  0% {
    background-position: 200% 0;
  }
  100% {
    background-position: -200% 0;
  }
}
@keyframes csDotLoader {
  0%, 80%, 100% {
    transform: scale(0);
  }
  40% {
    transform: scale(1);
  }
}
@keyframes csRippleSpread {
  0% {
    transform: scale(0);
    opacity: 1;
  }
  100% {
    transform: scale(4);
    opacity: 0;
  }
}
@keyframes csBtnPress {
  0% {
    transform: scale(1);
  }
  50% {
    transform: scale(0.975);
  }
  100% {
    transform: scale(1);
  }
}
@keyframes csTabSlide {
  0% {
    transform: translateX(-100%);
  }
  100% {
    transform: translateX(0);
  }
}
@keyframes csNotificationSlide {
  0% {
    transform: translateX(100%);
  }
  100% {
    transform: translateX(0);
  }
}
@keyframes csScrollReveal {
  0% {
    opacity: 0;
    transform: translateY(20px);
  }
  100% {
    opacity: 1;
    transform: translateY(0);
  }
}
@keyframes csScrollScale {
  0% {
    transform: scale(0.8);
  }
  100% {
    transform: scale(1);
  }
}
@keyframes csParallaxScroll {
  0% {
    transform: translateY(0);
  }
  100% {
    transform: translateY(-50px);
  }
}
@media (prefers-reduced-motion: reduce) {
  *, *::before, *::after {
    animation-duration: 0.01ms !important;
    animation-iteration-count: 1 !important;
    transition-duration: 0.01ms !important;
  }
  .cs-pulse, .cs-bounce, .cs-wiggle, .cs-shake, .cs-heartbeat, .cs-rubber-band, .cs-rotate, .cs-marquee-left, .cs-marquee-right, .cs-parallax-y, .cs-parallax-x, .cs-float, .cs-sway, .cs-skeleton-shimmer, .cs-dot-loader {
    animation: none !important;
  }
  .cs-fade-in, .cs-scale-in, .cs-slide-up, .cs-slide-down, .cs-slide-left, .cs-slide-right {
    animation-duration: 0.01ms !important;
  }
  .cs-3d-hover, .cs-flip-3d-x, .cs-flip-3d-y {
    transform: none !important;
  }
}
@media (prefers-contrast: high) {
  .cs-skeleton-shimmer {
    background: repeating-linear-gradient( 90deg, transparent 0%, currentColor 50%, transparent 100% );
  }
}
@media print {
  *, *::before, *::after {
    animation: none !important;
    transition: none !important;
  }
}
@media (hover: none) and (pointer: coarse) {
  .cs-btn-press {
    animation-duration: 50ms;
  }
  .cs-btn-ripple::after {
    animation-duration: 300ms;
  }
  .cs-wiggle, .cs-shake {
    animation-duration: 150ms;
  }
}
/*!
 * Casoon Glass - Complete Glassmorphism System for Tailwind v4
 * Version: 0.9.0 — COMPLETE CONSOLIDATED GLASS SYSTEM
 * 
 * SYSTEMATICALLY CONSOLIDATED FROM:
 * 
 * === GLASS PACKAGE (9 files) ===
 * - src/index.css (root)
 * - src/styles/base/tokens.css
 * - src/styles/base/glass-core.css  
 * - src/styles/base/fallbacks.css
 * - src/styles/utilities/variants.css
 * - src/styles/utilities/addons.css
 * - src/styles/utilities/responsive.css
 * - src/styles/components/ui-elements.css
 * - src/styles/effects/pro-effects.css
 * 
 * === CARDS PACKAGE (7 files) ===
 * - src/index.css (root)
 * - src/styles/base/tokens.css
 * - src/styles/presets/card-feature.css
 * - src/styles/presets/card-product.css 
 * - src/styles/presets/card-product-clean.css
 * - src/styles/presets/card-pricing.css
 * - src/styles/presets/card-testimonial.css
 * 
 * === NAVIGATION PACKAGE (13 files) ===
 * - src/index.css (root)
 * - src/styles/index.css
 * - src/styles/base/tokens.css
 * - src/styles/variants.css
 * - src/styles/utilities/navigation.css
 * - src/styles/utilities/accessibility.css
 * - src/styles/components/nav.css
 * - src/styles/components/navbar.css
 * - src/styles/components/nav-tabs.css
 * - src/styles/components/nav-pills.css
 * - src/styles/components/breadcrumbs.css
 * - src/styles/components/drawer.css
 * - src/styles/effects/animations.css
 * 
 * TOTAL: 29 CSS FILES → Pure Tailwind v4 (179 classes + 88 @utility)
 * 
 * Usage: @import "@casoon/tailwindcss-glass/index.css";
 */
@layer theme, base, components, utilities;
@layer theme;
@layer base {
  *, ::after, ::before, ::backdrop, ::file-selector-button {
    box-sizing: border-box;
    margin: 0;
    padding: 0;
    border: 0 solid;
  }
  html, :host {
    line-height: 1.5;
    -webkit-text-size-adjust: 100%;
    tab-size: 4;
    font-family: var(--default-font-family, ui-sans-serif, system-ui, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji");
    font-feature-settings: var(--default-font-feature-settings, normal);
    font-variation-settings: var(--default-font-variation-settings, normal);
    -webkit-tap-highlight-color: transparent;
  }
  hr {
    height: 0;
    color: inherit;
    border-top-width: 1px;
  }
  abbr:where([title]) {
    -webkit-text-decoration: underline dotted;
    text-decoration: underline dotted;
  }
  h1, h2, h3, h4, h5, h6 {
    font-size: inherit;
    font-weight: inherit;
  }
  a {
    color: inherit;
    -webkit-text-decoration: inherit;
    text-decoration: inherit;
  }
  b, strong {
    font-weight: bolder;
  }
  code, kbd, samp, pre {
    font-family: var(--default-mono-font-family, ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono", "Courier New", monospace);
    font-feature-settings: var(--default-mono-font-feature-settings, normal);
    font-variation-settings: var(--default-mono-font-variation-settings, normal);
    font-size: 1em;
  }
  small {
    font-size: 80%;
  }
  sub, sup {
    font-size: 75%;
    line-height: 0;
    position: relative;
    vertical-align: baseline;
  }
  sub {
    bottom: -0.25em;
  }
  sup {
    top: -0.5em;
  }
  table {
    text-indent: 0;
    border-color: inherit;
    border-collapse: collapse;
  }
  :-moz-focusring {
    outline: auto;
  }
  progress {
    vertical-align: baseline;
  }
  summary {
    display: list-item;
  }
  ol, ul, menu {
    list-style: none;
  }
  img, svg, video, canvas, audio, iframe, embed, object {
    display: block;
    vertical-align: middle;
  }
  img, video {
    max-width: 100%;
    height: auto;
  }
  button, input, select, optgroup, textarea, ::file-selector-button {
    font: inherit;
    font-feature-settings: inherit;
    font-variation-settings: inherit;
    letter-spacing: inherit;
    color: inherit;
    border-radius: 0;
    background-color: transparent;
    opacity: 1;
  }
  :where(select:is([multiple], [size])) optgroup {
    font-weight: bolder;
  }
  :where(select:is([multiple], [size])) optgroup option {
    padding-inline-start: 20px;
  }
  ::file-selector-button {
    margin-inline-end: 4px;
  }
  ::placeholder {
    opacity: 1;
  }
  @supports (not (-webkit-appearance: -apple-pay-button))  or (contain-intrinsic-size: 1px) {
    ::placeholder {
      color: currentcolor;
      @supports (color: color-mix(in lab, red, red)) {
        color: color-mix(in oklab, currentcolor 50%, transparent);
      }
    }
  }
  textarea {
    resize: vertical;
  }
  ::-webkit-search-decoration {
    -webkit-appearance: none;
  }
  ::-webkit-date-and-time-value {
    min-height: 1lh;
    text-align: inherit;
  }
  ::-webkit-datetime-edit {
    display: inline-flex;
  }
  ::-webkit-datetime-edit-fields-wrapper {
    padding: 0;
  }
  ::-webkit-datetime-edit, ::-webkit-datetime-edit-year-field, ::-webkit-datetime-edit-month-field, ::-webkit-datetime-edit-day-field, ::-webkit-datetime-edit-hour-field, ::-webkit-datetime-edit-minute-field, ::-webkit-datetime-edit-second-field, ::-webkit-datetime-edit-millisecond-field, ::-webkit-datetime-edit-meridiem-field {
    padding-block: 0;
  }
  ::-webkit-calendar-picker-indicator {
    line-height: 1;
  }
  :-moz-ui-invalid {
    box-shadow: none;
  }
  button, input:where([type="button"], [type="reset"], [type="submit"]), ::file-selector-button {
    appearance: button;
  }
  ::-webkit-inner-spin-button, ::-webkit-outer-spin-button {
    height: auto;
  }
  [hidden]:where(:not([hidden="until-found"])) {
    display: none !important;
  }
}
@layer utilities;
@keyframes glassMorphIn {
  from {
    opacity: 0;
    transform: scale(0.95);
    backdrop-filter: blur(0px);
  }
  to {
    opacity: 1;
    transform: scale(1);
    backdrop-filter: var(--cs-glass-blur);
  }
}
@keyframes glassMorphOut {
  from {
    opacity: 1;
    transform: scale(1);
  }
  to {
    opacity: 0;
    transform: scale(0.95);
  }
}
@keyframes glassSkeletonShimmer {
  0% {
    transform: translateX(-100%);
  }
  100% {
    transform: translateX(100%);
  }
}
@supports not ((-webkit-backdrop-filter: blur(1px)) or (backdrop-filter: blur(1px))) {
  .cs-glass, .cs-glass-card, .cs-glass-card-light, .cs-glass-nav, .cs-glass-nav-light, .cs-glass-button, .cs-glass-toast, .cs-glass-tooltip, .cs-glass-dropdown {
    background: var(--cs-glass-bg-xl);
  }
  .cs-glass-dark {
    background: var(--cs-glass-bg-dark-xl);
  }
  .cs-card-feature-glass, .cs-card-product-glass, .cs-card-pricing-glass {
    background: rgba(255, 255, 255, 0.4);
  }
}
@media (prefers-reduced-motion: reduce) {
  .cs-glass-morph-in, .cs-glass-morph-out {
    animation: none !important;
    transition: opacity 0.1s ease-in-out !important;
  }
  .cs-glass-skeleton::after {
    animation: none !important;
    opacity: 0.1;
  }
  .cs-glass-card, .cs-glass-card-light, .cs-glass-button, .cs-glass-3d-hover, .cs-card-feature, .cs-card-product, .cs-card-pricing {
    transition: none !important;
  }
  .cs-glass-card:hover, .cs-glass-card-light:hover, .cs-glass-button:hover, .cs-glass-3d-hover:hover, .cs-card-feature:hover, .cs-card-product:hover, .cs-card-pricing:hover {
    transform: none !important;
  }
}
/*!
 * Casoon Orbs - Tailwind v4 Directive Definitions
 * Version: 0.8.5 — For processing by Tailwind in consumer projects
 * 
 * Usage: @import "@casoon/tailwindcss-orbs/index.css";
 */
@layer theme, base, components, utilities;
@layer theme;
@layer base {
  *, ::after, ::before, ::backdrop, ::file-selector-button {
    box-sizing: border-box;
    margin: 0;
    padding: 0;
    border: 0 solid;
  }
  html, :host {
    line-height: 1.5;
    -webkit-text-size-adjust: 100%;
    tab-size: 4;
    font-family: var(--default-font-family, ui-sans-serif, system-ui, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji");
    font-feature-settings: var(--default-font-feature-settings, normal);
    font-variation-settings: var(--default-font-variation-settings, normal);
    -webkit-tap-highlight-color: transparent;
  }
  hr {
    height: 0;
    color: inherit;
    border-top-width: 1px;
  }
  abbr:where([title]) {
    -webkit-text-decoration: underline dotted;
    text-decoration: underline dotted;
  }
  h1, h2, h3, h4, h5, h6 {
    font-size: inherit;
    font-weight: inherit;
  }
  a {
    color: inherit;
    -webkit-text-decoration: inherit;
    text-decoration: inherit;
  }
  b, strong {
    font-weight: bolder;
  }
  code, kbd, samp, pre {
    font-family: var(--default-mono-font-family, ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono", "Courier New", monospace);
    font-feature-settings: var(--default-mono-font-feature-settings, normal);
    font-variation-settings: var(--default-mono-font-variation-settings, normal);
    font-size: 1em;
  }
  small {
    font-size: 80%;
  }
  sub, sup {
    font-size: 75%;
    line-height: 0;
    position: relative;
    vertical-align: baseline;
  }
  sub {
    bottom: -0.25em;
  }
  sup {
    top: -0.5em;
  }
  table {
    text-indent: 0;
    border-color: inherit;
    border-collapse: collapse;
  }
  :-moz-focusring {
    outline: auto;
  }
  progress {
    vertical-align: baseline;
  }
  summary {
    display: list-item;
  }
  ol, ul, menu {
    list-style: none;
  }
  img, svg, video, canvas, audio, iframe, embed, object {
    display: block;
    vertical-align: middle;
  }
  img, video {
    max-width: 100%;
    height: auto;
  }
  button, input, select, optgroup, textarea, ::file-selector-button {
    font: inherit;
    font-feature-settings: inherit;
    font-variation-settings: inherit;
    letter-spacing: inherit;
    color: inherit;
    border-radius: 0;
    background-color: transparent;
    opacity: 1;
  }
  :where(select:is([multiple], [size])) optgroup {
    font-weight: bolder;
  }
  :where(select:is([multiple], [size])) optgroup option {
    padding-inline-start: 20px;
  }
  ::file-selector-button {
    margin-inline-end: 4px;
  }
  ::placeholder {
    opacity: 1;
  }
  @supports (not (-webkit-appearance: -apple-pay-button))  or (contain-intrinsic-size: 1px) {
    ::placeholder {
      color: currentcolor;
      @supports (color: color-mix(in lab, red, red)) {
        color: color-mix(in oklab, currentcolor 50%, transparent);
      }
    }
  }
  textarea {
    resize: vertical;
  }
  ::-webkit-search-decoration {
    -webkit-appearance: none;
  }
  ::-webkit-date-and-time-value {
    min-height: 1lh;
    text-align: inherit;
  }
  ::-webkit-datetime-edit {
    display: inline-flex;
  }
  ::-webkit-datetime-edit-fields-wrapper {
    padding: 0;
  }
  ::-webkit-datetime-edit, ::-webkit-datetime-edit-year-field, ::-webkit-datetime-edit-month-field, ::-webkit-datetime-edit-day-field, ::-webkit-datetime-edit-hour-field, ::-webkit-datetime-edit-minute-field, ::-webkit-datetime-edit-second-field, ::-webkit-datetime-edit-millisecond-field, ::-webkit-datetime-edit-meridiem-field {
    padding-block: 0;
  }
  ::-webkit-calendar-picker-indicator {
    line-height: 1;
  }
  :-moz-ui-invalid {
    box-shadow: none;
  }
  button, input:where([type="button"], [type="reset"], [type="submit"]), ::file-selector-button {
    appearance: button;
  }
  ::-webkit-inner-spin-button, ::-webkit-outer-spin-button {
    height: auto;
  }
  [hidden]:where(:not([hidden="until-found"])) {
    display: none !important;
  }
}
@layer utilities;
/*!
 * Casoon Core - Tailwind v4 Complete Core Package
 * Version: 0.8.5 — Essential utilities, forms, and typography
 * 
 * Consolidated from:
 * - tailwindcss-utilities (176 classes, 78 @utility)
 * - tailwindcss-forms (3 classes, 23 @utility) 
 * - tailwindcss-typography (20 classes, 3 @utility)
 * 
 * Total: 199 classes + 104 @utility → Pure Tailwind v4
 * 
 * Usage: @import "@casoon/tailwindcss-core/index.css";
 */
@layer theme, base, components, utilities;
@layer theme;
@layer base {
  *, ::after, ::before, ::backdrop, ::file-selector-button {
    box-sizing: border-box;
    margin: 0;
    padding: 0;
    border: 0 solid;
  }
  html, :host {
    line-height: 1.5;
    -webkit-text-size-adjust: 100%;
    tab-size: 4;
    font-family: var(--default-font-family, ui-sans-serif, system-ui, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji");
    font-feature-settings: var(--default-font-feature-settings, normal);
    font-variation-settings: var(--default-font-variation-settings, normal);
    -webkit-tap-highlight-color: transparent;
  }
  hr {
    height: 0;
    color: inherit;
    border-top-width: 1px;
  }
  abbr:where([title]) {
    -webkit-text-decoration: underline dotted;
    text-decoration: underline dotted;
  }
  h1, h2, h3, h4, h5, h6 {
    font-size: inherit;
    font-weight: inherit;
  }
  a {
    color: inherit;
    -webkit-text-decoration: inherit;
    text-decoration: inherit;
  }
  b, strong {
    font-weight: bolder;
  }
  code, kbd, samp, pre {
    font-family: var(--default-mono-font-family, ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono", "Courier New", monospace);
    font-feature-settings: var(--default-mono-font-feature-settings, normal);
    font-variation-settings: var(--default-mono-font-variation-settings, normal);
    font-size: 1em;
  }
  small {
    font-size: 80%;
  }
  sub, sup {
    font-size: 75%;
    line-height: 0;
    position: relative;
    vertical-align: baseline;
  }
  sub {
    bottom: -0.25em;
  }
  sup {
    top: -0.5em;
  }
  table {
    text-indent: 0;
    border-color: inherit;
    border-collapse: collapse;
  }
  :-moz-focusring {
    outline: auto;
  }
  progress {
    vertical-align: baseline;
  }
  summary {
    display: list-item;
  }
  ol, ul, menu {
    list-style: none;
  }
  img, svg, video, canvas, audio, iframe, embed, object {
    display: block;
    vertical-align: middle;
  }
  img, video {
    max-width: 100%;
    height: auto;
  }
  button, input, select, optgroup, textarea, ::file-selector-button {
    font: inherit;
    font-feature-settings: inherit;
    font-variation-settings: inherit;
    letter-spacing: inherit;
    color: inherit;
    border-radius: 0;
    background-color: transparent;
    opacity: 1;
  }
  :where(select:is([multiple], [size])) optgroup {
    font-weight: bolder;
  }
  :where(select:is([multiple], [size])) optgroup option {
    padding-inline-start: 20px;
  }
  ::file-selector-button {
    margin-inline-end: 4px;
  }
  ::placeholder {
    opacity: 1;
  }
  @supports (not (-webkit-appearance: -apple-pay-button))  or (contain-intrinsic-size: 1px) {
    ::placeholder {
      color: currentcolor;
      @supports (color: color-mix(in lab, red, red)) {
        color: color-mix(in oklab, currentcolor 50%, transparent);
      }
    }
  }
  textarea {
    resize: vertical;
  }
  ::-webkit-search-decoration {
    -webkit-appearance: none;
  }
  ::-webkit-date-and-time-value {
    min-height: 1lh;
    text-align: inherit;
  }
  ::-webkit-datetime-edit {
    display: inline-flex;
  }
  ::-webkit-datetime-edit-fields-wrapper {
    padding: 0;
  }
  ::-webkit-datetime-edit, ::-webkit-datetime-edit-year-field, ::-webkit-datetime-edit-month-field, ::-webkit-datetime-edit-day-field, ::-webkit-datetime-edit-hour-field, ::-webkit-datetime-edit-minute-field, ::-webkit-datetime-edit-second-field, ::-webkit-datetime-edit-millisecond-field, ::-webkit-datetime-edit-meridiem-field {
    padding-block: 0;
  }
  ::-webkit-calendar-picker-indicator {
    line-height: 1;
  }
  :-moz-ui-invalid {
    box-shadow: none;
  }
  button, input:where([type="button"], [type="reset"], [type="submit"]), ::file-selector-button {
    appearance: button;
  }
  ::-webkit-inner-spin-button, ::-webkit-outer-spin-button {
    height: auto;
  }
  [hidden]:where(:not([hidden="until-found"])) {
    display: none !important;
  }
}
@layer utilities;
@component cs-prose {
  color: var(--cs-prose-body);
  max-width: 65ch;
  h1, h2, h3, h4, h5, h6 {
    color: var(--cs-prose-headings);
    font-weight: 600;
    line-height: 1.25;
    margin-bottom: var(--cs-space-4);
  }
  h1 {
    font-size: var(--cs-fs-2xl);
  }
  h2 {
    font-size: var(--cs-fs-xl);
  }
  h3 {
    font-size: var(--cs-fs-lg);
  }
  p, li {
    line-height: 1.7;
    margin-bottom: var(--cs-space-4);
  }
  a {
    color: var(--cs-prose-links);
    text-decoration: underline;
    text-decoration-thickness: 1px;
    text-underline-offset: 2px;
    transition: all var(--cs-transition);
    &:hover {
      text-decoration-thickness: 2px;
    }
  }
  strong, b {
    color: var(--cs-prose-bold);
    font-weight: 600;
  }
  code {
    font-family: var(--cs-font-mono);
    font-size: 0.875em;
    background: var(--cs-elev1);
    padding: 0.125rem 0.375rem;
    border-radius: calc(var(--cs-radius) / 2);
  }
  blockquote {
    border-left: 4px solid var(--cs-brand);
    padding-left: var(--cs-space-4);
    color: var(--cs-prose-quotes);
    font-style: italic;
    margin: var(--cs-space-6) 0;
  }
  ul, ol {
    padding-left: var(--cs-space-6);
    margin-bottom: var(--cs-space-4);
  }
  hr {
    border: none;
    height: 1px;
    background: var(--cs-border);
    margin: var(--cs-space-8) 0;
  }
}
@component cs-callout {
  padding: var(--cs-space-4) var(--cs-space-6);
  border-radius: var(--cs-radius);
  border-left: 4px solid var(--cs-info);
  background: color-mix(in srgb, #06b6d4 5%, #14161a);
  @supports (color: color-mix(in lab, red, red)) {
    background: color-mix(in srgb, var(--cs-info) 5%, var(--cs-surface));
  }
  color: var(--cs-text);
  &.cs-callout-info {
    border-left-color: var(--cs-info);
    background: color-mix(in srgb, #06b6d4 5%, #14161a);
    @supports (color: color-mix(in lab, red, red)) {
      background: color-mix(in srgb, var(--cs-info) 5%, var(--cs-surface));
    }
  }
  &.cs-callout-warning {
    border-left-color: var(--cs-warning);
    background: color-mix(in srgb, #f59e0b 5%, #14161a);
    @supports (color: color-mix(in lab, red, red)) {
      background: color-mix(in srgb, var(--cs-warning) 5%, var(--cs-surface));
    }
  }
  &.cs-callout-danger {
    border-left-color: var(--cs-danger);
    background: color-mix(in srgb, #ef4444 5%, #14161a);
    @supports (color: color-mix(in lab, red, red)) {
      background: color-mix(in srgb, var(--cs-danger) 5%, var(--cs-surface));
    }
  }
  &.cs-callout-success {
    border-left-color: var(--cs-success);
    background: color-mix(in srgb, #22c55e 5%, #14161a);
    @supports (color: color-mix(in lab, red, red)) {
      background: color-mix(in srgb, var(--cs-success) 5%, var(--cs-surface));
    }
  }
}
@property --tw-rotate-x {
  syntax: "*";
  inherits: false;
}
@property --tw-rotate-y {
  syntax: "*";
  inherits: false;
}
@property --tw-rotate-z {
  syntax: "*";
  inherits: false;
}
@property --tw-skew-x {
  syntax: "*";
  inherits: false;
}
@property --tw-skew-y {
  syntax: "*";
  inherits: false;
}
@property --tw-space-y-reverse {
  syntax: "*";
  inherits: false;
  initial-value: 0;
}
@property --tw-space-x-reverse {
  syntax: "*";
  inherits: false;
  initial-value: 0;
}
@property --tw-border-style {
  syntax: "*";
  inherits: false;
  initial-value: solid;
}
@property --tw-gradient-position {
  syntax: "*";
  inherits: false;
}
@property --tw-gradient-from {
  syntax: "<color>";
  inherits: false;
  initial-value: #0000;
}
@property --tw-gradient-via {
  syntax: "<color>";
  inherits: false;
  initial-value: #0000;
}
@property --tw-gradient-to {
  syntax: "<color>";
  inherits: false;
  initial-value: #0000;
}
@property --tw-gradient-stops {
  syntax: "*";
  inherits: false;
}
@property --tw-gradient-via-stops {
  syntax: "*";
  inherits: false;
}
@property --tw-gradient-from-position {
  syntax: "<length-percentage>";
  inherits: false;
  initial-value: 0%;
}
@property --tw-gradient-via-position {
  syntax: "<length-percentage>";
  inherits: false;
  initial-value: 50%;
}
@property --tw-gradient-to-position {
  syntax: "<length-percentage>";
  inherits: false;
  initial-value: 100%;
}
@property --tw-leading {
  syntax: "*";
  inherits: false;
}
@property --tw-font-weight {
  syntax: "*";
  inherits: false;
}
@property --tw-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-shadow-color {
  syntax: "*";
  inherits: false;
}
@property --tw-shadow-alpha {
  syntax: "<percentage>";
  inherits: false;
  initial-value: 100%;
}
@property --tw-inset-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-inset-shadow-color {
  syntax: "*";
  inherits: false;
}
@property --tw-inset-shadow-alpha {
  syntax: "<percentage>";
  inherits: false;
  initial-value: 100%;
}
@property --tw-ring-color {
  syntax: "*";
  inherits: false;
}
@property --tw-ring-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-inset-ring-color {
  syntax: "*";
  inherits: false;
}
@property --tw-inset-ring-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-ring-inset {
  syntax: "*";
  inherits: false;
}
@property --tw-ring-offset-width {
  syntax: "<length>";
  inherits: false;
  initial-value: 0px;
}
@property --tw-ring-offset-color {
  syntax: "*";
  inherits: false;
  initial-value: #fff;
}
@property --tw-ring-offset-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-outline-style {
  syntax: "*";
  inherits: false;
  initial-value: solid;
}
@property --tw-blur {
  syntax: "*";
  inherits: false;
}
@property --tw-brightness {
  syntax: "*";
  inherits: false;
}
@property --tw-contrast {
  syntax: "*";
  inherits: false;
}
@property --tw-grayscale {
  syntax: "*";
  inherits: false;
}
@property --tw-hue-rotate {
  syntax: "*";
  inherits: false;
}
@property --tw-invert {
  syntax: "*";
  inherits: false;
}
@property --tw-opacity {
  syntax: "*";
  inherits: false;
}
@property --tw-saturate {
  syntax: "*";
  inherits: false;
}
@property --tw-sepia {
  syntax: "*";
  inherits: false;
}
@property --tw-drop-shadow {
  syntax: "*";
  inherits: false;
}
@property --tw-drop-shadow-color {
  syntax: "*";
  inherits: false;
}
@property --tw-drop-shadow-alpha {
  syntax: "<percentage>";
  inherits: false;
  initial-value: 100%;
}
@property --tw-drop-shadow-size {
  syntax: "*";
  inherits: false;
}
@property --tw-backdrop-blur {
  syntax: "*";
  inherits: false;
}
@property --tw-backdrop-brightness {
  syntax: "*";
  inherits: false;
}
@property --tw-backdrop-contrast {
  syntax: "*";
  inherits: false;
}
@property --tw-backdrop-grayscale {
  syntax: "*";
  inherits: false;
}
@property --tw-backdrop-hue-rotate {
  syntax: "*";
  inherits: false;
}
@property --tw-backdrop-invert {
  syntax: "*";
  inherits: false;
}
@property --tw-backdrop-opacity {
  syntax: "*";
  inherits: false;
}
@property --tw-backdrop-saturate {
  syntax: "*";
  inherits: false;
}
@property --tw-backdrop-sepia {
  syntax: "*";
  inherits: false;
}
@property --tw-duration {
  syntax: "*";
  inherits: false;
}
@property --tw-ease {
  syntax: "*";
  inherits: false;
}
@property --tw-scale-x {
  syntax: "*";
  inherits: false;
  initial-value: 1;
}
@property --tw-scale-y {
  syntax: "*";
  inherits: false;
  initial-value: 1;
}
@property --tw-scale-z {
  syntax: "*";
  inherits: false;
  initial-value: 1;
}
@keyframes spin {
  to {
    transform: rotate(360deg);
  }
}
@keyframes pulse {
  50% {
    opacity: 0.5;
  }
}
@keyframes spin {
  to {
    transform: rotate(360deg);
  }
}
@keyframes pulse {
  50% {
    opacity: 0.5;
  }
}
@keyframes spin {
  to {
    transform: rotate(360deg);
  }
}
@keyframes pulse {
  50% {
    opacity: 0.5;
  }
}
@keyframes spin {
  to {
    transform: rotate(360deg);
  }
}
@keyframes pulse {
  50% {
    opacity: 0.5;
  }
}
@keyframes spin {
  to {
    transform: rotate(360deg);
  }
}
@keyframes pulse {
  50% {
    opacity: 0.5;
  }
}
@keyframes spin {
  to {
    transform: rotate(360deg);
  }
}
@keyframes pulse {
  50% {
    opacity: 0.5;
  }
}
@layer properties {
  @supports ((-webkit-hyphens: none) and (not (margin-trim: inline))) or ((-moz-orient: inline) and (not (color:rgb(from red r g b)))) {
    *, ::before, ::after, ::backdrop {
      --tw-rotate-x: initial;
      --tw-rotate-y: initial;
      --tw-rotate-z: initial;
      --tw-skew-x: initial;
      --tw-skew-y: initial;
      --tw-space-y-reverse: 0;
      --tw-space-x-reverse: 0;
      --tw-border-style: solid;
      --tw-gradient-position: initial;
      --tw-gradient-from: #0000;
      --tw-gradient-via: #0000;
      --tw-gradient-to: #0000;
      --tw-gradient-stops: initial;
      --tw-gradient-via-stops: initial;
      --tw-gradient-from-position: 0%;
      --tw-gradient-via-position: 50%;
      --tw-gradient-to-position: 100%;
      --tw-leading: initial;
      --tw-font-weight: initial;
      --tw-shadow: 0 0 #0000;
      --tw-shadow-color: initial;
      --tw-shadow-alpha: 100%;
      --tw-inset-shadow: 0 0 #0000;
      --tw-inset-shadow-color: initial;
      --tw-inset-shadow-alpha: 100%;
      --tw-ring-color: initial;
      --tw-ring-shadow: 0 0 #0000;
      --tw-inset-ring-color: initial;
      --tw-inset-ring-shadow: 0 0 #0000;
      --tw-ring-inset: initial;
      --tw-ring-offset-width: 0px;
      --tw-ring-offset-color: #fff;
      --tw-ring-offset-shadow: 0 0 #0000;
      --tw-outline-style: solid;
      --tw-blur: initial;
      --tw-brightness: initial;
      --tw-contrast: initial;
      --tw-grayscale: initial;
      --tw-hue-rotate: initial;
      --tw-invert: initial;
      --tw-opacity: initial;
      --tw-saturate: initial;
      --tw-sepia: initial;
      --tw-drop-shadow: initial;
      --tw-drop-shadow-color: initial;
      --tw-drop-shadow-alpha: 100%;
      --tw-drop-shadow-size: initial;
      --tw-backdrop-blur: initial;
      --tw-backdrop-brightness: initial;
      --tw-backdrop-contrast: initial;
      --tw-backdrop-grayscale: initial;
      --tw-backdrop-hue-rotate: initial;
      --tw-backdrop-invert: initial;
      --tw-backdrop-opacity: initial;
      --tw-backdrop-saturate: initial;
      --tw-backdrop-sepia: initial;
      --tw-duration: initial;
      --tw-ease: initial;
      --tw-scale-x: 1;
      --tw-scale-y: 1;
      --tw-scale-z: 1;
    }
  }
}
